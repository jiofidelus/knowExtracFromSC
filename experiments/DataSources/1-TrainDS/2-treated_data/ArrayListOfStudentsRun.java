 SAMPLE RUN:# Student GPA- ------- -------0 Bob 2.9000001 Dave 3.2000002 Sally 4.0000003 Kim 3.300000Removing student Dave...# Student GPA- ------- -------0 Bob 2.9000001 Sally 4.0000002 Kim 3.300000Adding Dave back to the end...# Student GPA- ------- -------0 Bob 2.9000001 Sally 4.0000002 Kim 3.3000003 Dave 3.200000Changing Kim's GPA to 2.0...# Student GPA- ------- -------0 Bob 2.9000001 Sally 4.0000002 Kim 2.0000003 Dave 3.200000Adding Bill after Sally...# Student GPA- ------- -------0 Bob 2.9000001 Sally 4.0000002 Bill 1.0000003 Kim 2.0000004 Dave 3.200000Make Kim and Sally swap positions...# Student GPA- ------- -------0 Bob 2.9000001 Kim 2.0000002 Bill 1.0000003 Sally 4.0000004 Dave 3.200000package arraylistofstudents ; public class ArrayListOfStudentsRun { public static void main(String[] args) { // ArrayList are dynamic collections of objects (reference types only) ArrayList<Student> students = new ArrayList<>() ;   // Adding some students students.add(new Student("Bob",2.9)) ;  students.add(new Student("Dave",3.2)) ;  students.add(new Student("Sally",4.0)) ;  students.add(new Student("Kim", 3.3)) ;   printStudents(students) ;   // 1) Remove Dave... print the list of students. System.out.println("Removing student Dave...") ;  // 2) Add Dave back to the end of the list... print the list of students System.out.println("Adding Dave back to the end...") ;  // 3) Change Kim's GPA to 2.0... print the list of students  System.out.println("Changing Kim's GPA to 2.0...") ;   // 4) Add Bill with GPA 1.0 after Sally... print the list of students  System.out.println("Adding Bill after Sally...") ;   // 5) Make Kim and Sally swap positions... print the list of students  System.out.println("Make Kim and Sally swap positions...") ;    }   public static void printStudents(ArrayList<Student> al) { System.out.printf("#\tStudent\tGPA\n") ;  System.out.printf("-\t-------\t-------\n") ;  for(int i=0 ; i< al.size() ; i++) { System.out.printf("%d\t%s\t%f\n",  i,  al.get(i).getName(),  al.get(i).getGPA()) ;  }  System.out.println() ;  } }