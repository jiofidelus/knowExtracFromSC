package org.imogene.epicam.server.locator ; public class UtilisateurLocator extends Locator<Utilisateur, String> { private UtilisateurHandler handler ;  public UtilisateurLocator() { }  @Override public Utilisateur create(Class<? extends Utilisateur> clazz) { return new Utilisateur() ;  }  @Override public Utilisateur find(Class<? extends Utilisateur> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<Utilisateur> getDomainType() { return Utilisateur.class ;  }  @Override public String getId(Utilisateur domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(Utilisateur domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (UtilisateurHandler) context.getBean("utilisateurHandler") ;  } }