package org.imogene.epicam.client.ui.panel ; public class TopBannerPanel extends Composite { interface Binder extends UiBinder<Widget, TopBannerPanel> { }  private static final Binder BINDER = GWT.create(Binder.class) ;  private List<HandlerRegistration> registrations = new ArrayList<HandlerRegistration>() ;  private EventBus eventBus ;  @UiField(provided = true) Image appliIcon ;  @UiField Label appliTitle ;  @UiField ListBox locBox ;  @UiField HTML actorInfo ;  @UiField(provided = true) PushButton logout ;  @UiField Label versionNumber ;  public TopBannerPanel(EventBus eventBus, ImogActorProxy actor) { this.eventBus = eventBus ;  appliIcon = new Image(GWT.getModuleBaseURL() + "/images/logo_32x32.png") ;  logout = new PushButton(BaseNLS.constants().disconnect()) ;  initWidget(BINDER.createAndBindUi(this)) ;  setActor(actor) ;  setLocaleList() ;  versionNumber.setText("version:" + LocalSession.get().getVersionNumber()) ;  }  @UiHandler("logout") void onLogout(ClickEvent e) { eventBus.fireEvent(new LogoutEvent()) ;  }  public void hideTitle() { appliTitle.setText("") ;  }  public void showTitle() { appliTitle.setText(NLS.constants().application_title()) ;  }  * Set panel information relative to the actor  * @param actor the current actor public void setActor(ImogActorProxy actor) { if (actor != null) { //Date cDate = actor.getLastLoginDate() ;  //if (cDate == null) // cDate = new Date() ;  //String lastLoginDate = TextFormatUtil.getDateTime(cDate) ;  String metadata = BaseNLS.messages().form_metadata_current_user( actor.getLogin()) ;  actorInfo.setHTML(metadata) ;  }  }  * Sets the list of available locales for the application private void setLocaleList() { locBox.addItem("Francais", "fr") ;  locBox.addItem("English", "en") ;  String locale = NLS.constants().locale() ;  if (locale != null && !locale.equals("")) selectLocale(locale) ;  locBox.addChangeHandler(new LocaleHandler()) ;  }  * Selects the item matching the selected locale  * @param loc the selected locale value private void selectLocale(String loc) { for (int i = 0 ;  i < locBox.getItemCount() ;  i++) { String value = locBox.getValue(i) ;  if (value.equals(loc)) { locBox.setSelectedIndex(i) ;  return ;  }  }  }  * Sets the Locale List as visible or invisible * @param show true to show the Locale List public void showLocaleList(boolean show) { locBox.setVisible(show) ;  }  @Override protected void onUnload() { for (HandlerRegistration r : registrations) r.removeHandler() ;  registrations.clear() ;  super.onUnload() ;  }  @Override protected void onLoad() { registrations.add(locBox.addChangeHandler(new LocaleHandler())) ;  super.onLoad() ;  }  * Class that manages the locale changes * @author MEDES-IMPS private class LocaleHandler implements ChangeHandler { public LocaleHandler() { }  @Override public void onChange(ChangeEvent arg0) { String locale = locBox.getValue(locBox.getSelectedIndex()) ;  String url = GWT.getHostPageBaseURL() + "?locale=" + locale ;  Window.Location.assign(url) ;  }  } }