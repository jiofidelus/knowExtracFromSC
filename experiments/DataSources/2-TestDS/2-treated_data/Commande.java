package org.imogene.epicam.domain.entity ; @Entitypublic class Commande extends ImogEntityImpl { public static interface Columns { public static final String DATE = "date" ;  public static final String REGION = "region" ;  public static final String DISTRICTSANTE = "districtsante" ;  public static final String CDT = "cdt" ;  public static final String MEDICAMENTS = "medicaments" ;  public static final String INTRANTS = "intrants" ;  public static final String APPROUVEEREGION = "approuveeregion" ;  public static final String MOTIFREJETREGION = "motifrejetregion" ;  public static final String APPROUVEEGTC = "approuveegtc" ;  public static final String MOTIFREJETGTC = "motifrejetgtc" ;  }  private static final long serialVersionUID = -4565191434166267106L ;  @Temporal(TemporalType.TIMESTAMP) private Date date ;  @ManyToOne private Region region ;  @ManyToOne private DistrictSante districtSante ;  @ManyToOne private CentreDiagTrait CDT ;  @OneToMany(fetch = FetchType.LAZY, orphanRemoval = false, cascade = { CascadeType.PERSIST, CascadeType.MERGE}) @JoinColumn(name = "medicamentsCommande_id") private List<DetailCommandeMedicament> medicaments ;  @OneToMany(fetch = FetchType.LAZY, orphanRemoval = false, cascade = { CascadeType.PERSIST, CascadeType.MERGE}) @JoinColumn(name = "intrantsCommande_id") private List<DetailCommandeIntrant> intrants ;  private Boolean approuveeRegion ;  @Column(columnDefinition = "TEXT") private String motifRejetRegion ;  private Boolean approuveeGTC ;  @Column(columnDefinition = "TEXT") private String motifRejetGTC ;  * Constructor public Commande() { medicaments = new ArrayList<DetailCommandeMedicament>() ;  intrants = new ArrayList<DetailCommandeIntrant>() ;  }  public Date getDate() { return date ;  }  public void setDate(Date value) { date = value ;  }  public Region getRegion() { return region ;  }  public void setRegion(Region value) { region = value ;  }  public DistrictSante getDistrictSante() { return districtSante ;  }  public void setDistrictSante(DistrictSante value) { districtSante = value ;  }  public CentreDiagTrait getCDT() { return CDT ;  }  public void setCDT(CentreDiagTrait value) { CDT = value ;  }  public List<DetailCommandeMedicament> getMedicaments() { return medicaments ;  }  public void setMedicaments(List<DetailCommandeMedicament> value) { medicaments = value ;  }  * @param param the DetailCommandeMedicament to add to the medicaments collection public void addTomedicaments(DetailCommandeMedicament param) { param.setCommande(this) ;  medicaments.add(param) ;  }  * @param param the DetailCommandeMedicament to remove from the medicaments collection public void removeFrommedicaments(DetailCommandeMedicament param) { param.setCommande(null) ;  medicaments.remove(param) ;  }  public List<DetailCommandeIntrant> getIntrants() { return intrants ;  }  public void setIntrants(List<DetailCommandeIntrant> value) { intrants = value ;  }  * @param param the DetailCommandeIntrant to add to the intrants collection public void addTointrants(DetailCommandeIntrant param) { param.setCommande(this) ;  intrants.add(param) ;  }  * @param param the DetailCommandeIntrant to remove from the intrants collection public void removeFromintrants(DetailCommandeIntrant param) { param.setCommande(null) ;  intrants.remove(param) ;  }  public Boolean getApprouveeRegion() { return approuveeRegion ;  }  public void setApprouveeRegion(Boolean value) { approuveeRegion = value ;  }  public String getMotifRejetRegion() { return motifRejetRegion ;  }  public void setMotifRejetRegion(String value) { motifRejetRegion = value ;  }  public Boolean getApprouveeGTC() { return approuveeGTC ;  }  public void setApprouveeGTC(Boolean value) { approuveeGTC = value ;  }  public String getMotifRejetGTC() { return motifRejetGTC ;  }  public void setMotifRejetGTC(String value) { motifRejetGTC = value ;  } }