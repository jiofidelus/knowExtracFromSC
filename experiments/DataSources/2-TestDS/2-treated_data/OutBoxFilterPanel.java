package org.imogene.epicam.client.ui.filter ; public class OutBoxFilterPanel extends ImogFilterPanel { private TextBox messageBox ;  private ImogFilterBox messageFilterBox ;  private ImogBooleanAsRadio deletedEntityBox ;  private ImogFilterBox deletedEntityBoxFilterBox ;  public OutBoxFilterPanel() { super() ;  setFieldReadAccess() ;  }  @Override public void resetFilterWidgets() { messageBox.setValue(null) ;  deletedEntityBox.setValue(false) ;  }  @Override public void createFilterWidgets() { messageBox = new TextBox() ;  messageFilterBox = new ImogFilterBox(messageBox) ;  messageFilterBox.setFilterLabel(NLS.constants().outBox_field_message()) ;  addTableFilter(messageFilterBox) ;  deletedEntityBox = new ImogBooleanAsRadio() ;  deletedEntityBox.isStrict(true) ;  deletedEntityBox.setEnabled(true) ;  deletedEntityBox.setValue(false) ;  deletedEntityBoxFilterBox = new ImogFilterBox(deletedEntityBox) ;  deletedEntityBoxFilterBox.setFilterLabel(BaseNLS.constants() .entity_field_deleted()) ;  addTableFilter(deletedEntityBoxFilterBox) ;  }  @Override public List<FilterCriteria> getFilterCriteria() { String locale = NLS.constants().locale() ;  List<FilterCriteria> criteria = new ArrayList<FilterCriteria>() ;  FilterCriteria messageCrit = new FilterCriteria() ;  messageCrit.setField("message") ;  messageCrit.setFieldDisplayName(NLS.constants().outBox_field_message()) ;  messageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS) ;  messageCrit.setValue(messageBox.getValue()) ;  messageCrit.setValueDisplayName(messageBox.getValue()) ;  criteria.add(messageCrit) ;  FilterCriteria deletedEntityCrit = new FilterCriteria() ;  deletedEntityCrit.setField("deleted") ;  deletedEntityCrit.setFieldDisplayName(BaseNLS.constants() .entity_field_deleted()) ;  if (deletedEntityBox.getValue()) { deletedEntityCrit .setOperation(CriteriaConstants.OPERATOR_ISNOTNULL) ;  deletedEntityCrit.setValue("true") ;  deletedEntityCrit.setValueDisplayName(BaseNLS.constants() .boolean_true()) ;  }  else { deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL) ;  deletedEntityCrit.setValue("false") ;  deletedEntityCrit.setValueDisplayName(BaseNLS.constants() .boolean_false()) ;  }  criteria.add(deletedEntityCrit) ;  return criteria ;  }  * Configures the visibility of the fields  * in view mode depending on the user privileges public void setFieldReadAccess() { if (!AccessManager.canReadOutBoxMessageInformation()) messageFilterBox.setVisible(false) ;  if (!AccessManager.isAdmin()) deletedEntityBoxFilterBox.setVisible(false) ;  } }