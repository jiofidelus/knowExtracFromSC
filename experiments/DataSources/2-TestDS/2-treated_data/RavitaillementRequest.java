package org.imogene.epicam.shared.request ; @Service(value = RavitaillementHandler.class, locator = SpringServiceLocator.class)public interface RavitaillementRequest extends ImogEntityRequest { Request<RavitaillementProxy> findById(String id) ;  Request<Void> save(RavitaillementProxy c, boolean isNew) ;  Request<List<RavitaillementProxy>> listRavitaillement(String sortProperty, boolean sortOrder) ;  Request<List<RavitaillementProxy>> listRavitaillement(int first, int max, String sortProperty, boolean sortOrder) ;  Request<List<RavitaillementProxy>> listRavitaillement(int first, int max, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions) ;  Request<List<RavitaillementProxy>> listRavitaillement(int first, int max, String sortProperty, boolean sortOrder, List<BasicCriteriaProxy> criterions) ;  Request<List<RavitaillementProxy>> listNonAffectedRavitaillement(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<RavitaillementProxy>> listNonAffectedRavitaillement(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<RavitaillementProxy>> listNonAffectedRavitaillementReverse( int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<RavitaillementProxy>> listNonAffectedRavitaillementReverse( int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<RavitaillementProxy>> getRavitaillementEmptyList() ;  Request<Long> countRavitaillement() ;  Request<Long> countRavitaillement(ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedRavitaillement(String property) ;  Request<Long> countNonAffectedRavitaillement(String property, ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedRavitaillementReverse(String property) ;  Request<Long> countNonAffectedRavitaillementReverse(String property, ImogJunctionProxy criterions) ;  Request<Void> delete(Set<RavitaillementProxy> entities) ;  Request<Void> delete(RavitaillementProxy entity) ;  Request<Void> save(ImogBeanProxy entity, boolean isNew) ;  Request<Void> delete(ImogBeanProxy entity) ; }