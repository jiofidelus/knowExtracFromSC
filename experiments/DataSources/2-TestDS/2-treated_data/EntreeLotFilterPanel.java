package org.imogene.epicam.client.ui.filter ; public class EntreeLotFilterPanel extends ImogFilterPanel { private TextBox lot_numeroBox ;  private ImogFilterBox lot_numeroFilterBox ;  private TextBox lot_intrant_identifiantBox ;  private ImogFilterBox lot_intrant_identifiantFilterBox ;  private TextBox lot_medicament_designationBox ;  private ImogFilterBox lot_medicament_designationFilterBox ;  private IntegerBox lot_quantiteBox ;  private ImogFilterBox lot_quantiteFilterBox ;  private IntegerBox quantiteBox ;  private ImogFilterBox quantiteFilterBox ;  private ImogBooleanAsRadio deletedEntityBox ;  private ImogFilterBox deletedEntityBoxFilterBox ;  public EntreeLotFilterPanel() { super() ;  setFieldReadAccess() ;  }  @Override public void resetFilterWidgets() { lot_numeroBox.setValue(null) ;  lot_intrant_identifiantBox.setValue(null) ;  lot_medicament_designationBox.setValue(null) ;  lot_quantiteBox.setValue(null) ;  quantiteBox.setValue(null) ;  deletedEntityBox.setValue(false) ;  }  @Override public void createFilterWidgets() { lot_numeroBox = new TextBox() ;  lot_numeroFilterBox = new ImogFilterBox(lot_numeroBox) ;  lot_numeroFilterBox.setFilterLabel(NLS.constants().lot_field_numero()) ;  addTableFilter(lot_numeroFilterBox) ;  lot_intrant_identifiantBox = new TextBox() ;  lot_intrant_identifiantFilterBox = new ImogFilterBox( lot_intrant_identifiantBox) ;  lot_intrant_identifiantFilterBox.setFilterLabel(NLS.constants() .intrant_field_identifiant()) ;  addTableFilter(lot_intrant_identifiantFilterBox) ;  lot_medicament_designationBox = new TextBox() ;  lot_medicament_designationFilterBox = new ImogFilterBox( lot_medicament_designationBox) ;  lot_medicament_designationFilterBox.setFilterLabel(NLS.constants() .medicament_field_designation()) ;  addTableFilter(lot_medicament_designationFilterBox) ;  lot_quantiteBox = new IntegerBox() ;  lot_quantiteFilterBox = new ImogFilterBox(lot_quantiteBox) ;  lot_quantiteFilterBox.setFilterLabel(NLS.constants() .lot_field_quantite()) ;  addTableFilter(lot_quantiteFilterBox) ;  quantiteBox = new IntegerBox() ;  quantiteFilterBox = new ImogFilterBox(quantiteBox) ;  quantiteFilterBox.setFilterLabel(NLS.constants() .entreeLot_field_quantite()) ;  addTableFilter(quantiteFilterBox) ;  deletedEntityBox = new ImogBooleanAsRadio() ;  deletedEntityBox.isStrict(true) ;  deletedEntityBox.setEnabled(true) ;  deletedEntityBox.setValue(false) ;  deletedEntityBoxFilterBox = new ImogFilterBox(deletedEntityBox) ;  deletedEntityBoxFilterBox.setFilterLabel(BaseNLS.constants() .entity_field_deleted()) ;  addTableFilter(deletedEntityBoxFilterBox) ;  }  @Override public List<FilterCriteria> getFilterCriteria() { String locale = NLS.constants().locale() ;  List<FilterCriteria> criteria = new ArrayList<FilterCriteria>() ;  FilterCriteria lot_numeroCrit = new FilterCriteria() ;  lot_numeroCrit.setField("lot.numero") ;  lot_numeroCrit.setFieldDisplayName(NLS.constants().lot_field_numero()) ;  lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS) ;  lot_numeroCrit.setValue(lot_numeroBox.getValue()) ;  lot_numeroCrit.setValueDisplayName(lot_numeroBox.getValue()) ;  criteria.add(lot_numeroCrit) ;  FilterCriteria lot_intrant_identifiantCrit = new FilterCriteria() ;  lot_intrant_identifiantCrit.setField("lot.intrant.identifiant") ;  lot_intrant_identifiantCrit.setFieldDisplayName(NLS.constants() .intrant_field_identifiant()) ;  lot_intrant_identifiantCrit .setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS) ;  lot_intrant_identifiantCrit.setValue(lot_intrant_identifiantBox .getValue()) ;  lot_intrant_identifiantCrit .setValueDisplayName(lot_intrant_identifiantBox.getValue()) ;  criteria.add(lot_intrant_identifiantCrit) ;  FilterCriteria lot_medicament_designationCrit = new FilterCriteria() ;  lot_medicament_designationCrit.setField("lot.medicament.designation") ;  lot_medicament_designationCrit.setFieldDisplayName(NLS.constants() .medicament_field_designation()) ;  lot_medicament_designationCrit .setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS) ;  lot_medicament_designationCrit.setValue(lot_medicament_designationBox .getValue()) ;  lot_medicament_designationCrit .setValueDisplayName(lot_medicament_designationBox.getValue()) ;  criteria.add(lot_medicament_designationCrit) ;  FilterCriteria lot_quantiteCrit = new FilterCriteria() ;  lot_quantiteCrit.setField("lot.quantite") ;  lot_quantiteCrit.setFieldDisplayName(NLS.constants() .lot_field_quantite()) ;  lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL) ;  if (lot_quantiteBox.getValue() == null) lot_quantiteCrit.setValue(null) ;  else lot_quantiteCrit .setValue(String.valueOf(lot_quantiteBox.getValue())) ;  lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_quantiteBox .getValue())) ;  criteria.add(lot_quantiteCrit) ;  FilterCriteria quantiteCrit = new FilterCriteria() ;  quantiteCrit.setField("quantite") ;  quantiteCrit.setFieldDisplayName(NLS.constants() .entreeLot_field_quantite()) ;  quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL) ;  if (quantiteBox.getValue() == null) quantiteCrit.setValue(null) ;  else quantiteCrit.setValue(String.valueOf(quantiteBox.getValue())) ;  quantiteCrit .setValueDisplayName(String.valueOf(quantiteBox.getValue())) ;  criteria.add(quantiteCrit) ;  FilterCriteria deletedEntityCrit = new FilterCriteria() ;  deletedEntityCrit.setField("deleted") ;  deletedEntityCrit.setFieldDisplayName(BaseNLS.constants() .entity_field_deleted()) ;  if (deletedEntityBox.getValue()) { deletedEntityCrit .setOperation(CriteriaConstants.OPERATOR_ISNOTNULL) ;  deletedEntityCrit.setValue("true") ;  deletedEntityCrit.setValueDisplayName(BaseNLS.constants() .boolean_true()) ;  }  else { deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL) ;  deletedEntityCrit.setValue("false") ;  deletedEntityCrit.setValueDisplayName(BaseNLS.constants() .boolean_false()) ;  }  criteria.add(deletedEntityCrit) ;  return criteria ;  }  * Configures the visibility of the fields  * in view mode depending on the user privileges public void setFieldReadAccess() { if (!AccessManager.canReadLotDescription()) lot_numeroFilterBox.setVisible(false) ;  if (!AccessManager.canReadIntrantDescription()) lot_intrant_identifiantFilterBox.setVisible(false) ;  if (!AccessManager.canReadMedicamentDescription()) lot_medicament_designationFilterBox.setVisible(false) ;  if (!AccessManager.canReadLotDescription()) lot_quantiteFilterBox.setVisible(false) ;  if (!AccessManager.canReadEntreeLotDescription()) quantiteFilterBox.setVisible(false) ;  if (!AccessManager.isAdmin()) deletedEntityBoxFilterBox.setVisible(false) ;  } }