package org.imogene.web.client.ui.field.binary ; public class ImogQRCodeBox extends Composite implements ImogField<String>, LeafValueEditor<String>, HasEditorErrors<String> { private static final Binder uiBinder = GWT.create(Binder.class) ;  interface Binder extends UiBinder<Widget, ImogQRCodeBox> { }  ImogRequestFactory requestFactory ;  private String thisValue ;  private boolean edited = false ;  @UiField ImogErrorLabel errorLabel ;  @UiField @Ignore ImogFieldAbstract fieldBox ;  @UiField HorizontalPanel main ;  @UiField Image barcode ;  public ImogQRCodeBox(ImogRequestFactory requestFactory) { this.requestFactory = requestFactory ;  initWidget(uiBinder.createAndBindUi(this)) ;  }  @Override public String getValue() { return thisValue ;  }  @Override public void setLabel(String label) { fieldBox.setLabel(label) ;  }   public void setLabel(String label, HorizontalAlignmentConstant alignment) { fieldBox.setLabel(label, alignment) ;  }  @Override public void setValue(String value) { if (value != null && !"".equals(value)) { barcode.setUrl(GWT.getHostPageBaseURL()+"getbinary?barcodeId="+value) ;  }  thisValue = value ;  }  @Override public void setEdited(boolean editable) { }  @Override public boolean isEdited() { return edited ;  }   * Defines that the field shall notify value changes * @param eventBus the event bus that will be used to fire the value change events public void notifyChanges(EventBus eventBus) { }  @Override public void showErrors(List<EditorError> errors) { errorLabel.showErrors(errors) ;  }   public void setLabelWidth(String width) { fieldBox.setLabelWidth(width) ;  } }