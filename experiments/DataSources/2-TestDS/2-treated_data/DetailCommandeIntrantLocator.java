package org.imogene.epicam.server.locator ; public class DetailCommandeIntrantLocator extends Locator<DetailCommandeIntrant, String> { private DetailCommandeIntrantHandler handler ;  public DetailCommandeIntrantLocator() { }  @Override public DetailCommandeIntrant create( Class<? extends DetailCommandeIntrant> clazz) { return new DetailCommandeIntrant() ;  }  @Override public DetailCommandeIntrant find( Class<? extends DetailCommandeIntrant> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<DetailCommandeIntrant> getDomainType() { return DetailCommandeIntrant.class ;  }  @Override public String getId(DetailCommandeIntrant domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(DetailCommandeIntrant domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (DetailCommandeIntrantHandler) context .getBean("detailCommandeIntrantHandler") ;  } }