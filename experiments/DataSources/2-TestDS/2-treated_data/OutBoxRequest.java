package org.imogene.epicam.shared.request ; @Service(value = OutBoxHandler.class, locator = SpringServiceLocator.class)public interface OutBoxRequest extends ImogEntityRequest { Request<OutBoxProxy> findById(String id) ;  Request<Void> save(OutBoxProxy c, boolean isNew) ;  Request<List<OutBoxProxy>> listOutBox(String sortProperty, boolean sortOrder) ;  Request<List<OutBoxProxy>> listOutBox(int first, int max, String sortProperty, boolean sortOrder) ;  Request<List<OutBoxProxy>> listOutBox(int first, int max, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions) ;  Request<List<OutBoxProxy>> listOutBox(int first, int max, String sortProperty, boolean sortOrder, List<BasicCriteriaProxy> criterions) ;  Request<List<OutBoxProxy>> listNonAffectedOutBox(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<OutBoxProxy>> listNonAffectedOutBox(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<OutBoxProxy>> listNonAffectedOutBoxReverse(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<OutBoxProxy>> listNonAffectedOutBoxReverse(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<OutBoxProxy>> getOutBoxEmptyList() ;  Request<Long> countOutBox() ;  Request<Long> countOutBox(ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedOutBox(String property) ;  Request<Long> countNonAffectedOutBox(String property, ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedOutBoxReverse(String property) ;  Request<Long> countNonAffectedOutBoxReverse(String property, ImogJunctionProxy criterions) ;  Request<Void> delete(Set<OutBoxProxy> entities) ;  Request<Void> delete(OutBoxProxy entity) ;  Request<Void> save(ImogBeanProxy entity, boolean isNew) ;  Request<Void> delete(ImogBeanProxy entity) ; }