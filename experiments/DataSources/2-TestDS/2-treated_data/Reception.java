package org.imogene.epicam.domain.entity ; @Entitypublic class Reception extends ImogEntityImpl { public static interface Columns { public static final String REGION = "region" ;  public static final String DISTRICTSANTE = "districtsante" ;  public static final String CDT = "cdt" ;  public static final String COMMANDE = "commande" ;  public static final String DATERECEPTION = "datereception" ;  public static final String MEDICAMENTS = "medicaments" ;  public static final String INTRANTS = "intrants" ;  }  private static final long serialVersionUID = 4284286411856988234L ;  @ManyToOne private Region region ;  @ManyToOne private DistrictSante districtSante ;  @ManyToOne private CentreDiagTrait CDT ;  @ManyToOne private Commande commande ;  @Temporal(TemporalType.TIMESTAMP) private Date dateReception ;  @OneToMany(fetch = FetchType.LAZY, orphanRemoval = false, cascade = { CascadeType.PERSIST, CascadeType.MERGE}) @JoinColumn(name = "medicamentsReception_id") private List<DetailReceptionMedicament> medicaments ;  @OneToMany(fetch = FetchType.LAZY, orphanRemoval = false, cascade = { CascadeType.PERSIST, CascadeType.MERGE}) @JoinColumn(name = "intrantsReception_id") private List<DetailReceptionIntrant> intrants ;  * Constructor public Reception() { medicaments = new ArrayList<DetailReceptionMedicament>() ;  intrants = new ArrayList<DetailReceptionIntrant>() ;  }  public Region getRegion() { return region ;  }  public void setRegion(Region value) { region = value ;  }  public DistrictSante getDistrictSante() { return districtSante ;  }  public void setDistrictSante(DistrictSante value) { districtSante = value ;  }  public CentreDiagTrait getCDT() { return CDT ;  }  public void setCDT(CentreDiagTrait value) { CDT = value ;  }  public Commande getCommande() { return commande ;  }  public void setCommande(Commande value) { commande = value ;  }  public Date getDateReception() { return dateReception ;  }  public void setDateReception(Date value) { dateReception = value ;  }  public List<DetailReceptionMedicament> getMedicaments() { return medicaments ;  }  public void setMedicaments(List<DetailReceptionMedicament> value) { medicaments = value ;  }  * @param param the DetailReceptionMedicament to add to the medicaments collection public void addTomedicaments(DetailReceptionMedicament param) { param.setReception(this) ;  medicaments.add(param) ;  }  * @param param the DetailReceptionMedicament to remove from the medicaments collection public void removeFrommedicaments(DetailReceptionMedicament param) { param.setReception(null) ;  medicaments.remove(param) ;  }  public List<DetailReceptionIntrant> getIntrants() { return intrants ;  }  public void setIntrants(List<DetailReceptionIntrant> value) { intrants = value ;  }  * @param param the DetailReceptionIntrant to add to the intrants collection public void addTointrants(DetailReceptionIntrant param) { param.setReception(this) ;  intrants.add(param) ;  }  * @param param the DetailReceptionIntrant to remove from the intrants collection public void removeFromintrants(DetailReceptionIntrant param) { param.setReception(null) ;  intrants.remove(param) ;  } }