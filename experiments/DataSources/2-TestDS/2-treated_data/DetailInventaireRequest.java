package org.imogene.epicam.shared.request ; @Service(value = DetailInventaireHandler.class, locator = SpringServiceLocator.class)public interface DetailInventaireRequest extends ImogEntityRequest { Request<DetailInventaireProxy> findById(String id) ;  Request<Void> save(DetailInventaireProxy c, boolean isNew) ;  Request<List<DetailInventaireProxy>> listDetailInventaire( String sortProperty, boolean sortOrder) ;  Request<List<DetailInventaireProxy>> listDetailInventaire(int first, int max, String sortProperty, boolean sortOrder) ;  Request<List<DetailInventaireProxy>> listDetailInventaire(int first, int max, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions) ;  Request<List<DetailInventaireProxy>> listDetailInventaire(int first, int max, String sortProperty, boolean sortOrder, List<BasicCriteriaProxy> criterions) ;  Request<List<DetailInventaireProxy>> listNonAffectedDetailInventaire(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<DetailInventaireProxy>> listNonAffectedDetailInventaire(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<DetailInventaireProxy>> listNonAffectedDetailInventaireReverse( int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<DetailInventaireProxy>> listNonAffectedDetailInventaireReverse( int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<DetailInventaireProxy>> getDetailInventaireEmptyList() ;  Request<Long> countDetailInventaire() ;  Request<Long> countDetailInventaire(ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedDetailInventaire(String property) ;  Request<Long> countNonAffectedDetailInventaire(String property, ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedDetailInventaireReverse(String property) ;  Request<Long> countNonAffectedDetailInventaireReverse(String property, ImogJunctionProxy criterions) ;  Request<Void> delete(Set<DetailInventaireProxy> entities) ;  Request<Void> delete(DetailInventaireProxy entity) ;  Request<Void> save(ImogBeanProxy entity, boolean isNew) ;  Request<Void> delete(ImogBeanProxy entity) ; }