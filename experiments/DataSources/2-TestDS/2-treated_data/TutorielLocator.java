package org.imogene.epicam.server.locator ; public class TutorielLocator extends Locator<Tutoriel, String> { private TutorielHandler handler ;  public TutorielLocator() { }  @Override public Tutoriel create(Class<? extends Tutoriel> clazz) { return new Tutoriel() ;  }  @Override public Tutoriel find(Class<? extends Tutoriel> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<Tutoriel> getDomainType() { return Tutoriel.class ;  }  @Override public String getId(Tutoriel domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(Tutoriel domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (TutorielHandler) context.getBean("tutorielHandler") ;  } }