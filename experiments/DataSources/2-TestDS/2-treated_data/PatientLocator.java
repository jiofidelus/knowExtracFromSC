package org.imogene.epicam.server.locator ; public class PatientLocator extends Locator<Patient, String> { private PatientHandler handler ;  public PatientLocator() { }  @Override public Patient create(Class<? extends Patient> clazz) { return new Patient() ;  }  @Override public Patient find(Class<? extends Patient> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<Patient> getDomainType() { return Patient.class ;  }  @Override public String getId(Patient domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(Patient domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (PatientHandler) context.getBean("patientHandler") ;  } }