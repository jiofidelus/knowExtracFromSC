package org.imogene.epicam.shared.request ; @Service(value = EntreeLotHandler.class, locator = SpringServiceLocator.class)public interface EntreeLotRequest extends ImogEntityRequest { Request<EntreeLotProxy> findById(String id) ;  Request<Void> save(EntreeLotProxy c, boolean isNew) ;  Request<List<EntreeLotProxy>> listEntreeLot(String sortProperty, boolean sortOrder) ;  Request<List<EntreeLotProxy>> listEntreeLot(int first, int max, String sortProperty, boolean sortOrder) ;  Request<List<EntreeLotProxy>> listEntreeLot(int first, int max, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions) ;  Request<List<EntreeLotProxy>> listEntreeLot(int first, int max, String sortProperty, boolean sortOrder, List<BasicCriteriaProxy> criterions) ;  Request<List<EntreeLotProxy>> listNonAffectedEntreeLot(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<EntreeLotProxy>> listNonAffectedEntreeLot(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<EntreeLotProxy>> listNonAffectedEntreeLotReverse(int i, int j, String sortProperty, boolean sortOrder, String property) ;  Request<List<EntreeLotProxy>> listNonAffectedEntreeLotReverse(int i, int j, String sortProperty, boolean sortOrder, ImogJunctionProxy criterions, String property) ;  Request<List<EntreeLotProxy>> getEntreeLotEmptyList() ;  Request<Long> countEntreeLot() ;  Request<Long> countEntreeLot(ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedEntreeLot(String property) ;  Request<Long> countNonAffectedEntreeLot(String property, ImogJunctionProxy criterions) ;  Request<Long> countNonAffectedEntreeLotReverse(String property) ;  Request<Long> countNonAffectedEntreeLotReverse(String property, ImogJunctionProxy criterions) ;  Request<Void> delete(Set<EntreeLotProxy> entities) ;  Request<Void> delete(EntreeLotProxy entity) ;  Request<Void> save(ImogBeanProxy entity, boolean isNew) ;  Request<Void> delete(ImogBeanProxy entity) ; }