package org.imogene.web.client.ui.table.filter ; public abstract class ImogFilterPanel extends Composite { private static final Binder uiBinder = GWT.create(Binder.class) ;  interface Binder extends UiBinder<Widget, ImogFilterPanel> { }   private List<HandlerRegistration> registrations = new ArrayList<HandlerRegistration>() ;  @UiField protected VerticalPanel filters ;  @UiField protected PushButton filterButton ;  @UiField protected PushButton cancelFilterButton ;  public ImogFilterPanel() { initWidget(uiBinder.createAndBindUi(this)) ;   filterButton.setText(BaseNLS.constants().button_search()) ;  cancelFilterButton.setText(BaseNLS.constants().button_cancel()) ;  createFilterWidgets() ;  }   public void setFilterButtonClickHandler(ClickHandler handler){ registrations.add(filterButton.addClickHandler(handler)) ;  }   public void setCancelFilterButtonClickOHandler(ClickHandler handler){ registrations.add(cancelFilterButton.addClickHandler(handler)) ;  }   *  * @param filterBox public void addTableFilter(ImogFilterBox filterBox) { filters.add(filterBox) ;  }   *  public abstract List<FilterCriteria> getFilterCriteria() ;  *  protected abstract void createFilterWidgets() ;  *  public abstract void resetFilterWidgets() ;  // @Override// protected void onUnload() {// for (HandlerRegistration r : registrations)// r.removeHandler() ; // registrations.clear() ; // super.onUnload() ; // }   }