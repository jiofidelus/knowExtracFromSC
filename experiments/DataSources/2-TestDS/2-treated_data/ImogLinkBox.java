package org.imogene.web.client.ui.field ; public class ImogLinkBox extends Composite implements ImogField<String> { private static final Binder uiBinder = GWT.create(Binder.class) ;  interface Binder extends UiBinder<Widget, ImogLinkBox> { }  @UiField @Ignore ImogFieldAbstract fieldBox ;  @UiField @Ignore HTML idLink ;  public ImogLinkBox() { initWidget(uiBinder.createAndBindUi(this)) ;  }  public void setEdited(boolean enabled) { }  @Override public void setLabel(String label) { fieldBox.setLabel(label) ;  }   public void setLabel(String label, HorizontalAlignmentConstant alignment) { fieldBox.setLabel(label, alignment) ;  }  @Override public boolean isEdited() { return false ;  }  @Override public void setValue(String value) { idLink.setHTML(value) ;   }  @Override public String getValue() { if (idLink.getHTML().isEmpty()) return null ;  else return idLink.getHTML() ;  }   * Defines that the field shall notify value changes * @param eventBus the event bus that will be used to fire the value change events public void notifyChanges(final EventBus eventBus) { }  * Defines the width of cell that contains the label * @param width width of cell that contains the label public void setLabelWidth(String width) { fieldBox.setLabelWidth(width) ;  }   * Sets the widget's width public void setBoxWidth(int width) { idLink.getElement().getStyle().setProperty("width", width + "px") ;  }  @Override public void showErrors(List<EditorError> errors) { } }