package org.imogene.epicam.server.locator ; public class QualificationLocator extends Locator<Qualification, String> { private QualificationHandler handler ;  public QualificationLocator() { }  @Override public Qualification create(Class<? extends Qualification> clazz) { return new Qualification() ;  }  @Override public Qualification find(Class<? extends Qualification> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<Qualification> getDomainType() { return Qualification.class ;  }  @Override public String getId(Qualification domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(Qualification domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (QualificationHandler) context .getBean("qualificationHandler") ;  } }