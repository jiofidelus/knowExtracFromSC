package org.imogene.epicam.server.locator ; public class ExamenMicroscopieLocator extends Locator<ExamenMicroscopie, String> { private ExamenMicroscopieHandler handler ;  public ExamenMicroscopieLocator() { }  @Override public ExamenMicroscopie create(Class<? extends ExamenMicroscopie> clazz) { return new ExamenMicroscopie() ;  }  @Override public ExamenMicroscopie find(Class<? extends ExamenMicroscopie> clazz, String id) { if (handler == null) initHandler() ;  return handler.getById(id) ;  }  @Override public Class<ExamenMicroscopie> getDomainType() { return ExamenMicroscopie.class ;  }  @Override public String getId(ExamenMicroscopie domainObject) { return domainObject.getId() ;  }  @Override public Class<String> getIdType() { return String.class ;  }  @Override public Object getVersion(ExamenMicroscopie domainObject) { return domainObject.getVersion() ;  }  private void initHandler() { HttpServletRequest request = RequestFactoryServlet .getThreadLocalRequest() ;  ApplicationContext context = WebApplicationContextUtils .getWebApplicationContext(request.getSession() .getServletContext()) ;  handler = (ExamenMicroscopieHandler) context .getBean("examenMicroscopieHandler") ;  } }