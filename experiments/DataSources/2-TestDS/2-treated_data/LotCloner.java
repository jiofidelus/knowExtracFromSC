package org.imogene.epicam.domain.entity.backup ; public class LotCloner { public static LotBck cloneEntity(Lot entity) { LotBck bck = new LotBck() ;  bck.setTraceId(UUID.randomUUID().toString()) ;  bck.setId(entity.getId()) ;  bck.setCreated(entity.getCreated()) ;  bck.setCreatedBy(entity.getCreatedBy()) ;  bck.setModified(entity.getModified()) ;  bck.setModifiedBy(entity.getModifiedBy()) ;  bck.setModifiedFrom(entity.getModifiedFrom()) ;  bck.setUploadDate(entity.getUploadDate()) ;  bck.setDeleted(entity.getDeleted()) ;  bck.setVersion(entity.getVersion()) ;  if (entity.getRegion() != null) { bck.setRegion(entity.getRegion().getId()) ;  }  if (entity.getDistrictSante() != null) { bck.setDistrictSante(entity.getDistrictSante().getId()) ;  }  if (entity.getCDT() != null) { bck.setCDT(entity.getCDT().getId()) ;  }  bck.setNumero(entity.getNumero()) ;  bck.setType(entity.getType()) ;  if (entity.getMedicament() != null) { bck.setMedicament(entity.getMedicament().getId()) ;  }  if (entity.getIntrant() != null) { bck.setIntrant(entity.getIntrant().getId()) ;  }  bck.setQuantiteInitiale(entity.getQuantiteInitiale()) ;  bck.setQuantite(entity.getQuantite()) ;  bck.setDatePeremption(entity.getDatePeremption()) ;  return bck ;  } }