
if itexists@Transactional(readOnly=true)public<T>Tfind(Class<T>clazz,Stringid){returndao.load(clazz,id);
if itexists@Transactional(readOnly=true)public<T>List<T>find(Class<T>clazz){returndao.load(clazz);
if notfound@Transactional(readOnly=true)publicImogActorloadFromLogin(Stringlogin){returndao.loadFromLogin(login);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Regimeentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedprisesMedicamenteusesList<PriseMedicamentRegime>regimag=entity.getPrisesMedicamenteuses();
if (regimag!=null){for(PriseMedicamentRegimeregimagItem:regimag){handlerHelper.prepare(regimagItem);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Regime>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Regime>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Regime>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Regimeentity:entities)delete(entity);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (type!=null&&!type.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("type");criteria.setValue(type);junction.add(criteria);
if (dureeTraitement!=null&&!dureeTraitement.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("dureeTraitement");criteria.setValue(dureeTraitement);junction.add(criteria);
if (poidsMin!=null&&!poidsMin.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("poidsMin");criteria.setValue(poidsMin);junction.add(criteria);
if (poidsMax!=null&&!poidsMax.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("poidsMax");criteria.setValue(poidsMax);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (unknown.getValue())returnnull;
if (yes.getValue())returntrue;
if (no.getValue())returnfalse;returnthisValue;
if (value==null){unknown.setValue(true);
else 
if (value){yes.setValue(true);
else 
if (!value){no.setValue(true);
if (enabled){yes.setVisible(true);no.setVisible(true);if (!isStrict)unknown.setVisible(true);
else unknown.setVisible(false);
if (value==null){yes.setVisible(false);no.setVisible(false);if (!isStrict)unknown.setVisible(true);
else 
if (value){yes.setVisible(true);no.setVisible(false);unknown.setVisible(false);
else 
if (!value){yes.setVisible(false);no.setVisible(true);unknown.setVisible(false);
if theBooleanshallbestrict*(displaysonly'yes'and'no'options,hidesthe'unknown'option)*@paramisStricttruetosettheBooleanBoxasstrictpublicvoidisStrict(booleanisStrict){this.isStrict=isStrict;
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCasIndexDescription())typeRelationFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patientlie_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patientlie_nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (parent!=null){editor=newPersonnelEditor(factory,true);this.initField=initField;
else editor=newPersonnelEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().personnel_create_title());createDriver();createNewPersonnel();this.setContent(editor);
if (parent!=null){editor=newPersonnelEditor(factory,true);this.initField=initField;
else editor=newPersonnelEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchPersonnel(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditPersonnel())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Personnelformnotvalidatedlocally");return;
if (passwordValid&&editor.passwordChanged())saveRequest=request.save(current,isNew,true);
else saveRequest=request.save(current,isNew,false);saveRequest.to(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){requestFactory.getEventBus().fireEvent(newSavePersonnelEvent(current,initField));closeForm();
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewPersonnelEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if (searchText==null)handler.listUtilisateur();
else handler.listUtilisateur(searchText);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDepartPersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDepartPersonnelEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDepartPersonnelEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDepartPersonnelEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDepartPersonnelEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DEPARTPERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DEPARTPERSONNEL_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDepartPersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editorWorkflow.setPersonnel(value,isLocked);
if (searchText==null)handler.listTutoriel();
else handler.listTutoriel(searchText);
if (initField==null)handler.saveMedicament(value);
else handler.saveMedicament(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Utilisateurentity,booleanisNew){save(entity,isNew,false);
if itisanewentityaddedforthefirsttime.*@parampasswordChangedtrue
if thepasswordhaschanged@Transactionalpublicvoidsave(Utilisateurentity,booleanisNew,booleanpasswordChanged){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (passwordChanged)entity.setPassword(SecurityUtils.passwordHashAsBase64(entity.getPassword(),entity.getLogin()));handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Utilisateur>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Utilisateur>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Utilisateur>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Utilisateurentity:entities)delete(entity);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (profession!=null&&!profession.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("profession");criteria.setValue(profession);junction.add(criteria);
if (dateNaissanceBefore!=null&&!dateNaissanceBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceBefore);junction.add(criteria);
if (dateNaissanceAfter!=null&&!dateNaissanceAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (format==null){format=BirtConstants.PDF;
if (format.equalsIgnoreCase(BirtConstants.HTML)){HTMLRenderOptionhtmlOptions=newHTMLRenderOption(options);htmlOptions.setOutputFormat("html");htmlOptions.setOutputStream(response.getOutputStream());htmlOptions.setImageHandler(newHTMLServerImageHandler());htmlOptions.setBaseImageURL(request.getContextPath()+BirtConstants.IMAGE_REPOSITORY);htmlOptions.setImageDirectory(sc.getRealPath(BirtConstants.IMAGE_REPOSITORY));runAndRenderTask.setRenderOption(htmlOptions);
else 
if (format.equalsIgnoreCase(BirtConstants.PDF)){PDFRenderOptionpdfOptions=newPDFRenderOption(options);pdfOptions.setOutputFormat("pdf");pdfOptions.setOption(IPDFRenderOption.PAGE_OVERFLOW,IPDFRenderOption.FIT_TO_PAGE_SIZE);pdfOptions.setOutputStream(response.getOutputStream());runAndRenderTask.setRenderOption(pdfOptions);
else 
if (format.equalsIgnoreCase(BirtConstants.CSV)){CSVRenderOptioncsvOptions=newCSVRenderOption(options);csvOptions.setOutputFormat(CSVRenderOption.OUTPUT_FORMAT_CSV);csvOptions.setDelimiter(";");csvOptions.setReplaceDelimiterInsideTextWith(",");csvOptions.setOutputStream(response.getOutputStream());runAndRenderTask.setRenderOption(csvOptions);
else 
if (format.equalsIgnoreCase(BirtConstants.XLS)){EXCELRenderOptionxlsOptions=newEXCELRenderOption(options);xlsOptions.setOutputFormat("xls");xlsOptions.setOutputStream(response.getOutputStream());runAndRenderTask.setRenderOption(xlsOptions);
if (request.getParameter(param.getName())!=null){parms.put(param.getName(),getParamValueObject(request,scalar));
if (doesReportParameterExist(request,paramName)){ReportParameterConverterconverter=newReportParameterConverter(format,request.getLocale());//GetvaluefromhttprequestStringparamValue=getReportParameter(request,paramName,null);returnconverter.parse(paramValue,parameterObj.getDataType());
if (value==null||value.length()<=0)//Treatitasblankvalue.value="";Map<String,String[]>paramMap=request.getParameterMap();
if (paramMap==null||!paramMap.containsKey(name)){value=defaultValue;
if (nullParams!=null&&nullParams.contains(name)){value=null;
if (paramMap!=null){isExist=(paramMap.containsKey(name));
if (nullParams!=null&&nullParams.contains(name)){isExist=true;
if (request.getCharacterEncoding()==null){try{request.setCharacterEncoding(BirtConstants.UTF_8_ENCODE);
if (parameterValuesArray!=null){parameterValues=newLinkedHashSet<String>();for(inti=0;i<parameterValuesArray.length;i++){parameterValues.add(parameterValuesArray[i]);
if (parent!=null){editor=newArriveePersonnelEditor(factory,true);this.initField=initField;
else editor=newArriveePersonnelEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().arriveePersonnel_create_title());createDriver();createNewArriveePersonnel();this.setContent(editor);
if (parent!=null){editor=newArriveePersonnelEditor(factory,true);this.initField=initField;
else editor=newArriveePersonnelEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchArriveePersonnel(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditArriveePersonnel())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("ArriveePersonnelformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewArriveePersonnelEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editor.setPersonnel(value,isLocked);
if (parent!=null){editor=newProfileEditor(factory,true,renderer);this.initField=initField;
else editor=newProfileEditor(factory,renderer);isNew=true;setEditable(true);setTitle(AdminNLS.constants().profile_create_title());createDriver();createNewProfile();this.setContent(editor);
if (parent!=null){editor=newProfileEditor(factory,true,renderer);this.initField=initField;
else editor=newProfileEditor(factory,renderer);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchProfile(entityId);this.setContent(editor);
if (entity.getId()!=null){setTitle(AdminNLS.constants().profile_name()+":"+AdminRenderer.get().getDisplayValue(entity));setMetaData((ImogBeanProxy)entity);
else {//Hasbeencreatedserversidesogenerateidscurrent.setId(ImogKeyGenerator.generateKeyId("PRO"));List<EntityProfileProxy>entityProfiles=current.getEntityProfiles();
if (entityProfiles!=null&&entityProfiles.size()>0){for(EntityProfileProxyitem:entityProfiles){item.setId(ImogKeyGenerator.generateKeyId("PRO_ENT"));
if (fieldGroupProfiles!=null&&fieldGroupProfiles.size()>0){for(FieldGroupProfileProxyitem:fieldGroupProfiles){item.setId(ImogKeyGenerator.generateKeyId("PRO_GRP"));
if (!edited&&ProfileUtil.isAdmin()&&!current.getId().equals(Profile.ADMINISTRATOR))setModif iable(true);
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Profileformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesAdminRendererrenderer=AdminRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewProfileEvent(current.getId(),closeEvent));
if (initField==null)handler.savePatient(value);
else handler.savePatient(value,initField);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(FieldGroupProfileEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(FieldGroupProfileEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (chkValue!=null)setBoxesValues(chkValue,READ);
if (chkValue!=null)setBoxesValues(chkValue,WRITE);
if (chkValue!=null)setBoxesValues(chkValue,EXPORT);
if (editors!=null&&editors.size()>0){for(FieldGroupProfileEditorNestedRowsubEditor:editors){
if (type.equals(READ))subEditor.setReadBoxValue(value);
else 
if (type.equals(WRITE))subEditor.setWriteBoxValue(value);
else 
if (type.equals(EXPORT))subEditor.setExportBoxValue(value);
if (editors!=null&&editors.size()>0){for(FieldGroupProfileEditorNestedRowsubEditor:editors)subEditor.validateFields();
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicEntreeLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newEntreeLotEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newEntreeLotEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newEntreeLotEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newEntreeLotEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.ENTREELOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.ENTREELOT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicEntreeLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editorWorkflow.setLot(value,isLocked);
if (searchText==null)handler.listDetailCommandeIntrant();
else handler.listDetailCommandeIntrant(searchText);
if (handler==null)initHandler();returnhandler.getById(id);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicExamenATBDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenATB(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedExamenATBReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listExamenATB(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenATB(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedExamenATBReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listExamenATB(start,numRows,"modif ied",false,filterCriteria);
else result=request.getExamenATBEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenATB(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedExamenATBReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listExamenATB(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenATB(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedExamenATBReverse(start,numRows,"modif ied",false,property);
else result=request.listExamenATB(start,numRows,"modif ied",false);
if (isFiltered){result.with("casTb");result.with("casTb.patient");
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listExamenATB(start,numRows,property,asc,searchCriterions);
else result=request.listExamenATB(start,numRows,property,asc,filterCriteria);
else result=request.getExamenATBEmptyList();
else {
if (searchCriterions!=null)result=request.listExamenATB(start,numRows,property,asc,searchCriterions);
else result=request.listExamenATB(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenATB(property,searchCriterions);
else returnrequest.countNonAffectedExamenATBReverse(property,searchCriterions);
else returnrequest.countExamenATB(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenATB(property,filterCriteria);
else returnrequest.countNonAffectedExamenATBReverse(property,filterCriteria);
else returnrequest.countExamenATB(filterCriteria);
else returnrequest.countNonAffectedExamenATB("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenATB(property,searchCriterions);
else returnrequest.countNonAffectedExamenATBReverse(property,searchCriterions);
else returnrequest.countExamenATB(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenATB(property);
else returnrequest.countNonAffectedExamenATBReverse(property);
else returnrequest.countExamenATB();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ExamenATBRequestrequest=(ExamenATBRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxycasTb_patient_identif iantCrit=request.create(BasicCriteriaProxy.class);casTb_patient_identif iantCrit.setField("casTb.patient.identif iant");casTb_patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);casTb_patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(casTb_patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxycasTb_patient_nomCrit=request.create(BasicCriteriaProxy.class);casTb_patient_nomCrit.setField("casTb.patient.nom");casTb_patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);casTb_patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(casTb_patient_nomCrit);//SearchfieldDateExamentry{DateUtil.parseDate(text);BasicCriteriaProxydateExamenCrit=request.create(BasicCriteriaProxy.class);dateExamenCrit.setField("dateExamen");dateExamenCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateExamenCrit.setValue(text);buffer.append("("+NLS.constants().examenATB_field_dateExamen()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateExamenCrit);
if (text.toLowerCase().equals(NLS.constants().examenATB_raisonDepistage_diagnostic_option().toLowerCase())){BasicCriteriaProxyraisonDepistageCrit=request.create(BasicCriteriaProxy.class);raisonDepistageCrit.setField("raisonDepistage");raisonDepistageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);raisonDepistageCrit.setValue(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_DIAGNOSTIC);buffer.append("("+NLS.constants().examenATB_field_raisonDepistage()+":"+text+")"+SYMBOL_OR+"");criterionList.add(raisonDepistageCrit);
if (text.toLowerCase().equals(NLS.constants().examenATB_raisonDepistage_suivi_option().toLowerCase())){BasicCriteriaProxyraisonDepistageCrit=request.create(BasicCriteriaProxy.class);raisonDepistageCrit.setField("raisonDepistage");raisonDepistageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);raisonDepistageCrit.setValue(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_SUIVI);buffer.append("("+NLS.constants().examenATB_field_raisonDepistage()+":"+text+")"+SYMBOL_OR+"");criterionList.add(raisonDepistageCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (initField==null)handler.saveDetailReceptionIntrant(value);
else handler.saveDetailReceptionIntrant(value,initField);
if (parent!=null){editor=newQualif icationEditor(factory,true);this.initField=initField;
else editor=newQualif icationEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().qualif ication_create_title());createDriver();createNewQualif ication();this.setContent(editor);
if (parent!=null){editor=newQualif icationEditor(factory,true);this.initField=initField;
else editor=newQualif icationEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchQualif ication(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getNom()==null){LocalizedTextProxynewNom=request.create(LocalizedTextProxy.class);current.setNom(newNom);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (AccessManager.canEditQualif ication())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Qualif icationformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewQualif icationEvent(current.getId(),closeEvent));
if (sb.length()==0){errorLabel.setInnerText("");errorLabel.getStyle().setDisplay(Display.NONE);return;
if (sb.length()==0){errorLabel.setInnerText("");errorLabel.getStyle().setDisplay(Display.NONE);return;
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("casTb").join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if (provider==null)withoutProvider=true;
if (edited&&!withoutProvider&&!isLocked&&!hideOpenButton)showPopUpListBox();
if (edited)showPopUpListBox();
if (value!=null)textBox.setValue(beanRenderer.getDisplayValue(value));
else textBox.setValue("");setButtonVisibility();
if truenotif ychangespublicvoidsetValue(Tvalue,booleannotif yChange){setValue(value);
if (notif yChange)ValueChangeEvent.fire(textBox,textBox.getValue());
if (!enabled||isLocked){textBox.addStyleDependentName("disabled");edited=false;
else {textBox.removeStyleDependentName("disabled");edited=true;
if (boxwidth>-1){
if (enabled)updateBoxWith(boxwidth);
else updateBoxWith(boxwidth+12);
if (edited){
if (!isLocked){
if (!withoutProvider&&!hideOpenButton)openIcon.setVisible(true);
if (!canCreateEntity||hideButtons)addImage.setVisible(false);
else addImage.setVisible(true);
if (value==null||hideClearButton)clearImage.setVisible(false);
else clearImage.setVisible(true);
else {openIcon.setVisible(false);clearImage.setVisible(false);addImage.setVisible(false);
else {addImage.setVisible(false);openIcon.setVisible(false);clearImage.setVisible(false);
if (value==null||hideButtons)viewImage.setVisible(false);
else viewImage.setVisible(true);
if theopenbuttonshallbehiddenineditmodedefaultisfalse**@paramhideOpenButtonpublicvoidsetHideOpenButton(booleanhideOpenButton){this.hideOpenButton=hideOpenButton;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCasTuberculoseFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCasTuberculoseEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newCasTuberculoseEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newCasTuberculoseEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCasTuberculoseEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.CASTUBERCULOSE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CASTUBERCULOSE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCasTuberculoseFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseInitiale(RegimeProxyvalue,booleanisLocked){editorWorkflow.setRegimePhaseInitiale(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseContinuation(RegimeProxyvalue,booleanisLocked){editorWorkflow.setRegimePhaseContinuation(value,isLocked);
if (AccessManager.canReadTutorielDescription()){Column<TutorielProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().tutoriel_field_s_nom());
if (AccessManager.canReadTutorielDescription()){Column<TutorielProxy,String>referenceColumn=newReferenceColumn();referenceColumn.setSortable(true);table.addColumn(referenceColumn,NLS.constants().tutoriel_field_s_reference());
if (AccessManager.canReadTutorielDescription()){Column<TutorielProxy,String>typeColumn=newTypeColumn();typeColumn.setSortable(true);table.addColumn(typeColumn,NLS.constants().tutoriel_field_s_type());
if (AccessManager.canCreateTutoriel()&&AccessManager.canEditTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/tutoriel/",true);
else returnnull;
if (AccessManager.canDeleteTutoriel()&&AccessManager.canEditTutoriel()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteTutoriel()&&AccessManager.canEditTutoriel()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<TutorielProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().tutoriel_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(TutorielProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getTutorielRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedTutorielentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListTutorielEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.TUTO_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=tutoriel_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=renderer.getLocalizedText(object.getNom());
if (locale.equals("fr"))return"nom.francais";
if (locale.equals("en"))return"nom.english";return"nom";
if (object!=null){
if (object.getReference()==null)value="";
else value=object.getReference();
if (object!=null){
if (object.getType()==null)value="";
else value=renderer.getEnumDisplayValue(TutorielProxy.class,"type",object.getType());
if (AccessManager.canReadOutBoxMessageInformation()){Column<OutBoxProxy,String>messageColumn=newMessageColumn();messageColumn.setSortable(true);table.addColumn(messageColumn,NLS.constants().outBox_field_s_message());
if (AccessManager.canCreateOutBox()&&AccessManager.canEditOutBox()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/outbox/",true);
else returnnull;
if (AccessManager.canDeleteOutBox()&&AccessManager.canEditOutBox()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteOutBox()&&AccessManager.canEditOutBox()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<OutBoxProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().outBox_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(OutBoxProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getOutBoxRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedOutBoxentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListOutBoxEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportOutBox()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.OUTBOX_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=outBox_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getMessage()==null)value="";
else value=object.getMessage();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(FieldGroupentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<FieldGroup>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<FieldGroup>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<FieldGroup>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(FieldGroupentity:entities)delete(entity);
if (resultForFieldGroupProfileFieldGroup!=null){for(FieldGroupProfileforeignEntity:resultForFieldGroupProfileFieldGroup){foreignEntity.setModif ied(newDate());foreignEntity.setFieldGroup(null);fieldGroupProfileDao.saveOrUpdate(foreignEntity,false);
if (entity_name!=null&&!entity_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("entity.name");criteria.setValue(entity_name);junction.add(criteria);
if (name!=null&&!name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("name");criteria.setValue(name);junction.add(criteria);
if (handler==null)initHandler();returnhandler.getById(id);
if (parent!=null){editor=newTutorielEditor(factory,true);this.initField=initField;
else editor=newTutorielEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().tutoriel_create_title());createDriver();createNewTutoriel();this.setContent(editor);
if (parent!=null){editor=newTutorielEditor(factory,true);this.initField=initField;
else editor=newTutorielEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchTutoriel(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getNom()==null){LocalizedTextProxynewNom=request.create(LocalizedTextProxy.class);current.setNom(newNom);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (AccessManager.canEditTutoriel())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editor.isUploading()){Timertimer=newTimer(){@Overridepublicvoidrun(){save();
if (editorDriver.hasErrors()){//Window.alert("Tutorielformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewTutorielEvent(current.getId(),closeEvent));
if (policy!=null&&policy.canAccessProperty(bean,property)){returnsuper.getProperty(bean,property);
if (policy!=null&&policy.canUpdateProperty(bean,property)){super.setProperty(bean,property,expectedType,value);
if (profile.getId().equals(Profile.ADMINISTRATOR))returntrue;
if (profile.getId().equals(Profile.ADMINISTRATOR))returntrue;
if (actor!=null&&actor.getProfiles()!=null&&profiles!=null){for(Profilerole:actor.getProfiles()){
if (profiles.contains(role))returntrue;
if (!ProfileUtil.isAdmin())nameFilterBox.setVisible(false);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicExamenSerologieFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newExamenSerologieEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newExamenSerologieEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newExamenSerologieEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newExamenSerologieEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.EXAMENSEROLOGIE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENSEROLOGIE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicExamenSerologieFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
if (AccessManager.canReadLaboratoireReferenceDescription()){Column<LaboratoireReferenceProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().laboratoireReference_field_s_nom());
if (AccessManager.canReadLaboratoireReferenceDescription()){Column<LaboratoireReferenceProxy,String>natureColumn=newNatureColumn();natureColumn.setSortable(true);table.addColumn(natureColumn,NLS.constants().laboratoireReference_field_s_nature());
if (AccessManager.canCreateLaboratoireReference()&&AccessManager.canEditLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/laboratoirereference/",true);
else returnnull;
if (AccessManager.canDeleteLaboratoireReference()&&AccessManager.canEditLaboratoireReference()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteLaboratoireReference()&&AccessManager.canEditLaboratoireReference()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<LaboratoireReferenceProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().laboratoireReference_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(LaboratoireReferenceProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getLaboratoireReferenceRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedLaboratoireReferenceentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListLaboratoireReferenceEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.LAB_REF_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=laboratoireReference_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=renderer.getLocalizedText(object.getNom());
if (locale.equals("fr"))return"nom.francais";
if (locale.equals("en"))return"nom.english";return"nom";
if (object!=null){
if (object.getNature()==null)value="";
else value=renderer.getEnumDisplayValue(LaboratoireReferenceProxy.class,"nature",object.getNature());
if (AccessManager.canReadCentreDiagTraitDescription()){Column<CentreDiagTraitProxy,String>regionColumn=newRegionColumn();regionColumn.setSortable(true);table.addColumn(regionColumn,NLS.constants().centreDiagTrait_field_s_region());
if (AccessManager.canReadCentreDiagTraitDescription()){Column<CentreDiagTraitProxy,String>districtSanteColumn=newDistrictSanteColumn();districtSanteColumn.setSortable(true);table.addColumn(districtSanteColumn,NLS.constants().centreDiagTrait_field_s_districtSante());
if (AccessManager.canReadCentreDiagTraitDescription()){Column<CentreDiagTraitProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().centreDiagTrait_field_s_nom());
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/centrediagtrait/",true);
else returnnull;
if (AccessManager.canDeleteCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<CentreDiagTraitProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().centreDiagTrait_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(CentreDiagTraitProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getCentreDiagTraitRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedCentreDiagTraitentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListCentreDiagTraitEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.CDT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=centreDiagTrait_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getRegion()==null)value="";
else value=renderer.getDisplayValue(object.getRegion());
if (object!=null){
if (object.getDistrictSante()==null)value="";
else value=renderer.getDisplayValue(object.getDistrictSante());
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"CDT.id"),personnel.getCDT().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicSmsPredefinif ormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newSmsPredefiniEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newSmsPredefiniEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newSmsPredefiniEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newSmsPredefiniEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.SMSPREDEFINI_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.SMSPREDEFINI_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicSmsPredefinif ormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (EpicamIconConstants.OUTBOX_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.OUTBOX_ICON);OutBoxDataProviderprovider=newOutBoxDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteOutBox()&&AccessManager.canEditOutBox())listComposite=newOutBoxDynaTable(requestFactory,provider,true);
else listComposite=newOutBoxDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (value==null){for(RadioButtonchoice:choices)choice.setValue(false);
else {for(RadioButtonchoice:choices){
if (value.equals(choice.getFormValue())){choice.setValue(true);choice.setVisible(true);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicPriseMedicamenteuseDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamenteuse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPriseMedicamenteuseReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPriseMedicamenteuse(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamenteuse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedPriseMedicamenteuseReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listPriseMedicamenteuse(start,numRows,"modif ied",false,filterCriteria);
else result=request.getPriseMedicamenteuseEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamenteuse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPriseMedicamenteuseReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPriseMedicamenteuse(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamenteuse(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedPriseMedicamenteuseReverse(start,numRows,"modif ied",false,property);
else result=request.listPriseMedicamenteuse(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listPriseMedicamenteuse(start,numRows,property,asc,searchCriterions);
else result=request.listPriseMedicamenteuse(start,numRows,property,asc,filterCriteria);
else result=request.getPriseMedicamenteuseEmptyList();
else {
if (searchCriterions!=null)result=request.listPriseMedicamenteuse(start,numRows,property,asc,searchCriterions);
else result=request.listPriseMedicamenteuse(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamenteuse(property,searchCriterions);
else returnrequest.countNonAffectedPriseMedicamenteuseReverse(property,searchCriterions);
else returnrequest.countPriseMedicamenteuse(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamenteuse(property,filterCriteria);
else returnrequest.countNonAffectedPriseMedicamenteuseReverse(property,filterCriteria);
else returnrequest.countPriseMedicamenteuse(filterCriteria);
else returnrequest.countNonAffectedPriseMedicamenteuse("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamenteuse(property,searchCriterions);
else returnrequest.countNonAffectedPriseMedicamenteuseReverse(property,searchCriterions);
else returnrequest.countPriseMedicamenteuse(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamenteuse(property);
else returnrequest.countNonAffectedPriseMedicamenteuseReverse(property);
else returnrequest.countPriseMedicamenteuse();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();PriseMedicamenteuseRequestrequest=(PriseMedicamenteuseRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDateEffectivetry{DateUtil.parseDate(text);BasicCriteriaProxydateEffectiveCrit=request.create(BasicCriteriaProxy.class);dateEffectiveCrit.setField("dateEffective");dateEffectiveCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateEffectiveCrit.setValue(text);buffer.append("("+NLS.constants().priseMedicamenteuse_field_dateEffective()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateEffectiveCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (initField==null)handler.saveOutBox(value);
else handler.saveOutBox(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Regionentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Region>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Region>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Region>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Regionentity:entities)delete(entity);
if (code!=null&&!code.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("code");criteria.setValue(code);junction.add(criteria);
if (nom_francais!=null&&!nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.francais");criteria.setValue(nom_francais);junction.add(criteria);
if (nom_english!=null&&!nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.english");criteria.setValue(nom_english);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if needed*@paramrequesttheauthenticationrequest*@paramredirectUrlthesavedredirectURL*@returntrue
if theURLhavebeenmodif ied*@throwsMalformedURLExceptionprivatebooleanmodif yReditectUrl(HttpServletRequestrequest,StringredirectUrl)throwsMalformedURLException{logger.debug("Request:"+request.getRequestURL());logger.debug("Query:"+request.getQueryString());logger.debug("Redirect:"+redirectUrl);URLurl=newURL(redirectUrl);if (url.getPath().endsWith(SERVICE_URL_EXTENSION)){redirectUrl=request.getContextPath()+"/";logger.debug("RPCserviceURL,weredirecttothecontextroot");returntrue;
if (INSTANCE==null){INSTANCE=newImogIntRenderer();
if (null==object){return"";
if (quantiteBox.getValue()==null)quantiteCrit.setValue(null);
else quantiteCrit.setValue(String.valueOf(quantiteBox.getValue()));quantiteCrit.setValueDisplayName(String.valueOf(quantiteBox.getValue()));criteria.add(quantiteCrit);
if (datePeremptionBeforeBox.getValue()!=null){FilterCriteriadatePeremptionBeforeCrit=newFilterCriteria();datePeremptionBeforeCrit.setField("datePeremption");datePeremptionBeforeCrit.setFieldDisplayName(NLS.constants().lot_field_datePeremption()+BaseNLS.constants().search_operator_inferior());datePeremptionBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);datePeremptionBeforeCrit.setValue(DateUtil.getDate(datePeremptionBeforeBox.getValue()));datePeremptionBeforeCrit.setValueDisplayName(DateUtil.getDate(datePeremptionBeforeBox.getValue()));criteria.add(datePeremptionBeforeCrit);
if (datePeremptionAfterBox.getValue()!=null){FilterCriteriadatePeremptionAfterCrit=newFilterCriteria();datePeremptionAfterCrit.setField("datePeremption");datePeremptionAfterCrit.setFieldDisplayName(NLS.constants().lot_field_datePeremption()+BaseNLS.constants().search_operator_superior());datePeremptionAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);datePeremptionAfterCrit.setValue(DateUtil.getDate(datePeremptionAfterBox.getValue()));datePeremptionAfterCrit.setValueDisplayName(DateUtil.getDate(datePeremptionAfterBox.getValue()));criteria.add(datePeremptionAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())numeroFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription()){datePeremptionBeforeFilterBox.setVisible(false);datePeremptionAfterFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())medicament_designationFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicRegimeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newRegimeEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newRegimeEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newRegimeEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newRegimeEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.REGIME_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.REGIME_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicRegimeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getCommande()!=null){bck.setCommande(entity.getCommande().getId());
if (entity.getMedicaments()!=null){StringBuilderbuilder=newStringBuilder();for(DetailReceptionMedicamenti:entity.getMedicaments()){builder.append(i.getId()).append(";");
if (entity.getIntrants()!=null){StringBuilderbuilder=newStringBuilder();for(DetailReceptionIntranti:entity.getIntrants()){builder.append(i.getId()).append(";");
if therelationfieldbuttonsshallbehiddenpublicEnvoiSMSEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogMultiRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogMultiRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),null);
else patient=newImogMultiRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddensms=newImogSingleRelationBox<SmsPredefiniProxy>(smsDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateSmsPredefini()&&AccessManager.canEditSmsPredefini())sms=newImogSingleRelationBox<SmsPredefiniProxy>(smsDataProvider,EpicamRenderer.get());
else sms=newImogSingleRelationBox<SmsPredefiniProxy>(false,smsDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patient.setEdited(isEdited);sms.setEdited(isEdited);
if relationfieldshallbelocked(noneditable)publicvoidsetSms(SmsPredefiniProxyvalue,booleanisLocked){sms.setLocked(isLocked);sms.setValue(value);
if (!patient.isEmpty()&&patient.getSelectedEntities().size()>0){PatientProxyvalue=patient.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,value.getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (!patient.isPresent(value))patient.addValue(value);
if (initField.equals("patient")){
if (patient.isPresent(value))patient.replaceValue(value);
else patient.addValue(value,true);
if (sms.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();SmsPredefinif ormPanelform=newSmsPredefinif ormPanel(requestFactory,sms.getValue().getId(),relationPopup,"sms");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("sms"))sms.setValue(value,true);
if (searchText==null)handler.listDetailInventaire();
else handler.listDetailInventaire(searchText);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Personnelentity,booleanisNew){save(entity,isNew,false);
if itisanewentityaddedforthefirsttime.*@parampasswordChangedtrue
if thepasswordhaschanged@Transactionalpublicvoidsave(Personnelentity,booleanisNew,booleanpasswordChanged){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (passwordChanged)entity.setPassword(SecurityUtils.passwordHashAsBase64(entity.getPassword(),entity.getLogin()));handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Personnel>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Personnel>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Personnel>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Personnelentity:entities)delete(entity);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (dateNaissanceBefore!=null&&!dateNaissanceBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceBefore);junction.add(criteria);
if (dateNaissanceAfter!=null&&!dateNaissanceAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceAfter);junction.add(criteria);
if (dateArriveeBefore!=null&&!dateArriveeBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateArrivee");criteria.setValue(dateArriveeBefore);junction.add(criteria);
if (dateArriveeAfter!=null&&!dateArriveeAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateArrivee");criteria.setValue(dateArriveeAfter);junction.add(criteria);
if (dateDepartBefore!=null&&!dateDepartBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDepart");criteria.setValue(dateDepartBefore);junction.add(criteria);
if (dateDepartAfter!=null&&!dateDepartAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDepart");criteria.setValue(dateDepartAfter);junction.add(criteria);
if (niveau!=null&&!niveau.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("niveau");criteria.setValue(niveau);junction.add(criteria);
if (actif !=null&&!actif .isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("actif ");criteria.setValue(actif );junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamentRegimeEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();medicament.setEdited(isEdited);quantite.setEdited(isEdited);quantiteUnite.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())medicament.setVisible(false);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())quantite.setVisible(false);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())quantiteUnite.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())medicament.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())quantite.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())quantiteUnite.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().priseMedicamentRegime_field_quantite_min()),null,"quantite");//quantiteUniteisarequiredfield
if (quantiteUnite.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteUnite");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteUniteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (field.equals("quantiteUnite"))quantiteUniteFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (quantiteUniteFieldErrors.size()>0)quantiteUnite.showErrors(quantiteUniteFieldErrors);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getDetails()!=null){StringBuilderbuilder=newStringBuilder();for(DetailInventairei:entity.getDetails()){builder.append(i.getId()).append(";");
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (ProfileUtil.isAdmin())listComposite=newProfileDynaTable(requestFactory,provider,true);
else listComposite=newProfileDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (quantiteRequiseBox.getValue()==null)quantiteRequiseCrit.setValue(null);
else quantiteRequiseCrit.setValue(String.valueOf(quantiteRequiseBox.getValue()));quantiteRequiseCrit.setValueDisplayName(String.valueOf(quantiteRequiseBox.getValue()));criteria.add(quantiteRequiseCrit);FilterCriteriaquantiteEnStockCrit=newFilterCriteria();quantiteEnStockCrit.setField("quantiteEnStock");quantiteEnStockCrit.setFieldDisplayName(NLS.constants().detailCommandeIntrant_field_quantiteEnStock());quantiteEnStockCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteEnStockBox.getValue()==null)quantiteEnStockCrit.setValue(null);
else quantiteEnStockCrit.setValue(String.valueOf(quantiteEnStockBox.getValue()));quantiteEnStockCrit.setValueDisplayName(String.valueOf(quantiteEnStockBox.getValue()));criteria.add(quantiteEnStockCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadIntrantDescription())intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteRequiseFilterBox.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteEnStockFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (EpicamIconConstants.TUTORIEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.TUTORIEL_ICON);TutorielDataProviderprovider=newTutorielDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteTutoriel()&&AccessManager.canEditTutoriel())listComposite=newTutorielDynaTable(requestFactory,provider,true);
else listComposite=newTutorielDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (EpicamIconConstants.FORMATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.FORMATION_ICON);FormationDataProviderprovider=newFormationDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteFormation()&&AccessManager.canEditFormation())listComposite=newFormationDynaTable(requestFactory,provider,true);
else listComposite=newFormationDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<ExamenBiologiqueProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<ExamenBiologiqueEditorNestedRow>editors=editor.getEditors();ExamenBiologiqueEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(ExamenBiologiqueEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(ExamenBiologiqueEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(ExamenBiologiqueEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(ExamenBiologiqueEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){ExamenBiologiqueProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
else returnnull;
if (buttons!=null&&buttons.size()>0){for(PushButtonentry:buttons){addHeaderWidget(entry);
else headerWidgetPanel.add(widget);headerWidgetPanel.setCellVerticalAlignment(widget,VerticalPanel.ALIGN_MIDDLE);
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamenteuseEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenphaseIntensive=newImogSingleRelationBox<CasTuberculoseProxy>(phaseIntensiveDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())phaseIntensive=newImogSingleRelationBox<CasTuberculoseProxy>(phaseIntensiveDataProvider,EpicamRenderer.get());
else phaseIntensive=newImogSingleRelationBox<CasTuberculoseProxy>(false,phaseIntensiveDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenphaseContinuation=newImogSingleRelationBox<CasTuberculoseProxy>(phaseContinuationDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())phaseContinuation=newImogSingleRelationBox<CasTuberculoseProxy>(phaseContinuationDataProvider,EpicamRenderer.get());
else phaseContinuation=newImogSingleRelationBox<CasTuberculoseProxy>(false,phaseContinuationDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();phaseIntensive.setEdited(isEdited);phaseContinuation.setEdited(isEdited);dateEffective.setEdited(isEdited);prise.setEdited(isEdited);cotrimoxazole.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamenteuseDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseIntensive(CasTuberculoseProxyvalue,booleanisLocked){phaseIntensive.setLocked(isLocked);phaseIntensive.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseContinuation(CasTuberculoseProxyvalue,booleanisLocked){phaseContinuation.setLocked(isLocked);phaseContinuation.setValue(value);
if (phaseIntensive.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,phaseIntensive.getValue().getId(),relationPopup,"phaseIntensive");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("phaseIntensive"))phaseIntensive.setValue(value,true);
if (phaseContinuation.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,phaseContinuation.getValue().getId(),relationPopup,"phaseContinuation");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("phaseContinuation"))phaseContinuation.setValue(value,true);
if (dateEffective.getValueWithoutParseException()==null&&dateEffective.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateEffective");//priseisarequiredfield
if (prise.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"prise");//cotrimoxazoleisarequiredfield
if (cotrimoxazole.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cotrimoxazole");
if (errors!=null&&errors.size()>0){List<EditorError>dateEffectiveFieldErrors=newArrayList<EditorError>();List<EditorError>priseFieldErrors=newArrayList<EditorError>();List<EditorError>cotrimoxazoleFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateEffective"))dateEffectiveFieldErrors.add(error);
if (field.equals("prise"))priseFieldErrors.add(error);
if (field.equals("cotrimoxazole"))cotrimoxazoleFieldErrors.add(error);
if (dateEffectiveFieldErrors.size()>0)dateEffective.showErrors(dateEffectiveFieldErrors);
if (priseFieldErrors.size()>0)prise.showErrors(priseFieldErrors);
if (cotrimoxazoleFieldErrors.size()>0)cotrimoxazole.showErrors(cotrimoxazoleFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicEntreeLotEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadEntreeLotDescription())CDT.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())lot.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())quantite.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())CDT.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())lot.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())quantite.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().entreeLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (eventBus!=null){checkBox.addValueChangeHandler(newValueChangeHandler<Boolean>(){@OverridepublicvoidonValueChange(ValueChangeEvent<Boolean>arg0){eventBus.fireEvent(newFieldValueChangeEvent(ImogCheckBox.this));
if (false==item.isFormField()){try{entityId=ImogKeyGenerator.generateKeyId(BINARY_SHORTNAME);Binarybinary=newBinaryFile();binary.setId(entityId);binary.setContentType(item.getContentType());binary.setLength(item.getSize());binary.setFileName(item.getName());handlerHelper.prepare(binary);binary.setModif ied(null);binaryHandler.saveOrUpdateBinary(binary);FilelocalFile=getLocalFile(item.getName(),entityId);item.write(localFile);binaryOperation.operate(binary);
if (binary!=null){FilethumbFile=BinaryFileManager.getInstance().buildThumbFilePath(binary);response.setHeader("Content-Disposition","attachment;filename=\""+binary.getFileName()+"\"");response.setContentType(binary.getContentType());response.setContentLength((int)thumbFile.length());FileInputStreamfis=newFileInputStream(thumbFile);IOUtils.copy(fis,response.getOutputStream());fis.close();
else {response.sendError(404);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDistrictSanteFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDistrictSanteEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDistrictSanteEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDistrictSanteEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDistrictSanteEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DISTRICTSANTE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DISTRICTSANTE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDistrictSanteFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicDetailInventaireEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddeninventaire=newImogSingleRelationBox<InventaireProxy>(inventaireDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateInventaire()&&AccessManager.canEditInventaire())inventaire=newImogSingleRelationBox<InventaireProxy>(inventaireDataProvider,EpicamRenderer.get());
else inventaire=newImogSingleRelationBox<InventaireProxy>(false,inventaireDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldinventaire.setEdited(false);CDT.setEdited(isEdited);lot.setEdited(isEdited);quantiteReelle.setEdited(isEdited);//readonlyfieldquantiteTheorique.setEdited(false);
if (!AccessManager.canReadDetailInventaireDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())descriptionSection.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetInventaire(InventaireProxyvalue,booleanisLocked){inventaire.setLocked(isLocked);inventaire.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (inventaire.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();InventaireFormPanelform=newInventaireFormPanel(requestFactory,inventaire.getValue().getId(),relationPopup,"inventaire");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("inventaire"))inventaire.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteReelleisarequiredfield
if (quantiteReelle.getValueWithoutParseException()==null&&quantiteReelle.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteReelle");//quantiteReelleshallbesuperiororequalto'0'
if (quantiteReelle.getValueWithoutParseException()!=null&&!(quantiteReelle.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteReelle_min()),null,"quantiteReelle");//quantiteTheoriqueshallbesuperiororequalto'0'
if (quantiteTheorique.getValueWithoutParseException()!=null&&!(quantiteTheorique.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteTheorique_min()),null,"quantiteTheorique");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteReelleFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteTheoriqueFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantiteReelle"))quantiteReelleFieldErrors.add(error);
if (field.equals("quantiteTheorique"))quantiteTheoriqueFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteReelleFieldErrors.size()>0)quantiteReelle.showErrors(quantiteReelleFieldErrors);
if (quantiteTheoriqueFieldErrors.size()>0)quantiteTheorique.showErrors(quantiteTheoriqueFieldErrors);
if (AccessManager.canReadMedicamentDescription()){Column<MedicamentProxy,String>codeColumn=newCodeColumn();codeColumn.setSortable(true);table.addColumn(codeColumn,NLS.constants().medicament_field_s_code());
if (AccessManager.canReadMedicamentDescription()){Column<MedicamentProxy,String>designationColumn=newDesignationColumn();designationColumn.setSortable(true);table.addColumn(designationColumn,NLS.constants().medicament_field_s_designation());
if (AccessManager.canReadMedicamentDescription()){Column<MedicamentProxy,String>estMedicamentAntituberculeuxColumn=newEstMedicamentAntituberculeuxColumn();estMedicamentAntituberculeuxColumn.setSortable(true);table.addColumn(estMedicamentAntituberculeuxColumn,NLS.constants().medicament_field_s_estMedicamentAntituberculeux());
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/medicament/",true);
else returnnull;
if (AccessManager.canDeleteMedicament()&&AccessManager.canEditMedicament()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteMedicament()&&AccessManager.canEditMedicament()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<MedicamentProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().medicament_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(MedicamentProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getMedicamentRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedMedicamententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListMedicamentEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportMedicament()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.MED_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=medicament_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCode()==null)value="";
else value=object.getCode();
if (object!=null){
if (object.getDesignation()==null)value="";
else value=object.getDesignation();
if (object!=null){
if (object.getEstMedicamentAntituberculeux()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getEstMedicamentAntituberculeux());
if (handler==null)initHandler();returnhandler.getById(id);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicExamenMicroscopieDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenMicroscopie(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedExamenMicroscopieReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listExamenMicroscopie(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenMicroscopie(start,numRows,"date",false,filterCriteria,property);
else result=request.listNonAffectedExamenMicroscopieReverse(start,numRows,"date",false,filterCriteria,property);
else result=request.listExamenMicroscopie(start,numRows,"date",false,filterCriteria);
else result=request.getExamenMicroscopieEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenMicroscopie(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedExamenMicroscopieReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listExamenMicroscopie(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenMicroscopie(start,numRows,"date",false,property);
else result=request.listNonAffectedExamenMicroscopieReverse(start,numRows,"date",false,property);
else result=request.listExamenMicroscopie(start,numRows,"date",false);
if (isFiltered){result.with("casTb");result.with("casTb.patient");
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listExamenMicroscopie(start,numRows,property,asc,searchCriterions);
else result=request.listExamenMicroscopie(start,numRows,property,asc,filterCriteria);
else result=request.getExamenMicroscopieEmptyList();
else {
if (searchCriterions!=null)result=request.listExamenMicroscopie(start,numRows,property,asc,searchCriterions);
else result=request.listExamenMicroscopie(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenMicroscopie(property,searchCriterions);
else returnrequest.countNonAffectedExamenMicroscopieReverse(property,searchCriterions);
else returnrequest.countExamenMicroscopie(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenMicroscopie(property,filterCriteria);
else returnrequest.countNonAffectedExamenMicroscopieReverse(property,filterCriteria);
else returnrequest.countExamenMicroscopie(filterCriteria);
else returnrequest.countNonAffectedExamenMicroscopie("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenMicroscopie(property,searchCriterions);
else returnrequest.countNonAffectedExamenMicroscopieReverse(property,searchCriterions);
else returnrequest.countExamenMicroscopie(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenMicroscopie(property);
else returnrequest.countNonAffectedExamenMicroscopieReverse(property);
else returnrequest.countExamenMicroscopie();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ExamenMicroscopieRequestrequest=(ExamenMicroscopieRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxycasTb_patient_identif iantCrit=request.create(BasicCriteriaProxy.class);casTb_patient_identif iantCrit.setField("casTb.patient.identif iant");casTb_patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);casTb_patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(casTb_patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxycasTb_patient_nomCrit=request.create(BasicCriteriaProxy.class);casTb_patient_nomCrit.setField("casTb.patient.nom");casTb_patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);casTb_patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(casTb_patient_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxydateCrit=request.create(BasicCriteriaProxy.class);dateCrit.setField("date");dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateCrit.setValue(text);buffer.append("("+NLS.constants().examenMicroscopie_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_raisonDepistage_diagnostic_option().toLowerCase())){BasicCriteriaProxyraisonDepistageCrit=request.create(BasicCriteriaProxy.class);raisonDepistageCrit.setField("raisonDepistage");raisonDepistageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);raisonDepistageCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_DIAGNOSTIC);buffer.append("("+NLS.constants().examenMicroscopie_field_raisonDepistage()+":"+text+")"+SYMBOL_OR+"");criterionList.add(raisonDepistageCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_raisonDepistage_suivi_option().toLowerCase())){BasicCriteriaProxyraisonDepistageCrit=request.create(BasicCriteriaProxy.class);raisonDepistageCrit.setField("raisonDepistage");raisonDepistageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);raisonDepistageCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_SUIVI);buffer.append("("+NLS.constants().examenMicroscopie_field_raisonDepistage()+":"+text+")"+SYMBOL_OR+"");criterionList.add(raisonDepistageCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_resultat_negatif _option().toLowerCase())){BasicCriteriaProxyresultatCrit=request.create(BasicCriteriaProxy.class);resultatCrit.setField("resultat");resultatCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_NEGATif );buffer.append("("+NLS.constants().examenMicroscopie_field_resultat()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_resultat_rare_option().toLowerCase())){BasicCriteriaProxyresultatCrit=request.create(BasicCriteriaProxy.class);resultatCrit.setField("resultat");resultatCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_RARE);buffer.append("("+NLS.constants().examenMicroscopie_field_resultat()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_resultat_unPlus_option().toLowerCase())){BasicCriteriaProxyresultatCrit=request.create(BasicCriteriaProxy.class);resultatCrit.setField("resultat");resultatCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_UNPLUS);buffer.append("("+NLS.constants().examenMicroscopie_field_resultat()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_resultat_deuxPlus_option().toLowerCase())){BasicCriteriaProxyresultatCrit=request.create(BasicCriteriaProxy.class);resultatCrit.setField("resultat");resultatCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_DEUXPLUS);buffer.append("("+NLS.constants().examenMicroscopie_field_resultat()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatCrit);
if (text.toLowerCase().equals(NLS.constants().examenMicroscopie_resultat_troisPlus_option().toLowerCase())){BasicCriteriaProxyresultatCrit=request.create(BasicCriteriaProxy.class);resultatCrit.setField("resultat");resultatCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatCrit.setValue(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_TROISPLUS);buffer.append("("+NLS.constants().examenMicroscopie_field_resultat()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if therelationfieldbuttonsshallbehiddenpublicCommandeEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();date.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);medicaments.setEdited(isEdited);intrants.setEdited(isEdited);approuveeRegion.setEdited(isEdited);motif RejetRegion.setEdited(isEdited);approuveeGTC.setEdited(isEdited);motif RejetGTC.setEdited(isEdited);
if (!AccessManager.canReadCommandeInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canReadCommandeRegionApprobation())regionApprobationSection.setVisible(false);
if (!AccessManager.canReadCommandeGtcApprobation())gtcApprobationSection.setVisible(false);
if (!AccessManager.canEditCommandeInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canEditCommandeRegionApprobation())regionApprobationSection.setVisible(false);
if (!AccessManager.canEditCommandeGtcApprobation())gtcApprobationSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (allValidation||source.equals(approuveeRegion)){
if ((approuveeRegion.getValue()!=null&&!approuveeRegion.getValue())){motif RejetRegion.setVisible(true);
else {motif RejetRegion.setVisible(false);
if (allValidation||source.equals(approuveeGTC)){
if ((approuveeGTC.getValue()!=null&&!approuveeGTC.getValue())){motif RejetGTC.setVisible(true);
else {motif RejetGTC.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//cDTisarequiredfield
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//medicamentsnestedformshallbevalidatedmedicaments.validateFields();//intrantsnestedformshallbevalidatedintrants.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>cDTFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (parent!=null){editor=newUtilisateurEditor(factory,true);this.initField=initField;
else editor=newUtilisateurEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().utilisateur_create_title());createDriver();createNewUtilisateur();this.setContent(editor);
if (parent!=null){editor=newUtilisateurEditor(factory,true);this.initField=initField;
else editor=newUtilisateurEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchUtilisateur(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditUtilisateur())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Utilisateurformnotvalidatedlocally");return;
if (passwordValid&&editor.passwordChanged())saveRequest=request.save(current,isNew,true);
else saveRequest=request.save(current,isNew,false);saveRequest.to(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){requestFactory.getEventBus().fireEvent(newSaveUtilisateurEvent(current,initField));closeForm();
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewUtilisateurEvent(current.getId(),closeEvent));
if (handler==null)initHandler();returnhandler.getById(id);
if therelationfieldbuttonsshallbehiddenpublicIntrantEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();identif iant.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);seuilPatient.setEdited(isEdited);
if (!AccessManager.canReadIntrantDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditIntrantDescription())descriptionSection.setVisible(false);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicMedicamentDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedMedicament(start,numRows,"designation",true,searchCriterions,property);
else result=request.listNonAffectedMedicamentReverse(start,numRows,"designation",true,searchCriterions,property);
else result=request.listMedicament(start,numRows,"designation",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedMedicament(start,numRows,"designation",true,filterCriteria,property);
else result=request.listNonAffectedMedicamentReverse(start,numRows,"designation",true,filterCriteria,property);
else result=request.listMedicament(start,numRows,"designation",true,filterCriteria);
else result=request.getMedicamentEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedMedicament(start,numRows,"designation",true,searchCriterions,property);
else result=request.listNonAffectedMedicamentReverse(start,numRows,"designation",true,searchCriterions,property);
else result=request.listMedicament(start,numRows,"designation",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedMedicament(start,numRows,"designation",true,property);
else result=request.listNonAffectedMedicamentReverse(start,numRows,"designation",true,property);
else result=request.listMedicament(start,numRows,"designation",true);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listMedicament(start,numRows,property,asc,filterCriteria);
else result=request.getMedicamentEmptyList();
else {
if (searchCriterions!=null)result=request.listMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listMedicament(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedMedicament(property,searchCriterions);
else returnrequest.countNonAffectedMedicamentReverse(property,searchCriterions);
else returnrequest.countMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedMedicament(property,filterCriteria);
else returnrequest.countNonAffectedMedicamentReverse(property,filterCriteria);
else returnrequest.countMedicament(filterCriteria);
else returnrequest.countNonAffectedMedicament("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedMedicament(property,searchCriterions);
else returnrequest.countNonAffectedMedicamentReverse(property,searchCriterions);
else returnrequest.countMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedMedicament(property);
else returnrequest.countNonAffectedMedicamentReverse(property);
else returnrequest.countMedicament();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();MedicamentRequestrequest=(MedicamentRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldCodeBasicCriteriaProxycodeCrit=request.create(BasicCriteriaProxy.class);codeCrit.setField("code");codeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);codeCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_code()+":"+text+")"+SYMBOL_OR+"");criterionList.add(codeCrit);//SearchfieldDesignationBasicCriteriaProxydesignationCrit=request.create(BasicCriteriaProxy.class);designationCrit.setField("designation");designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(designationCrit);//SearchfieldEstMedicamentAntituberculeux
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyestMedicamentAntituberculeuxCrit=request.create(BasicCriteriaProxy.class);estMedicamentAntituberculeuxCrit.setField("estMedicamentAntituberculeux");estMedicamentAntituberculeuxCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);estMedicamentAntituberculeuxCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_estMedicamentAntituberculeux()+":"+text+")"+SYMBOL_OR+"");criterionList.add(estMedicamentAntituberculeuxCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (dateDepartBeforeBox.getValue()!=null){FilterCriteriadateDepartBeforeCrit=newFilterCriteria();dateDepartBeforeCrit.setField("dateDepart");dateDepartBeforeCrit.setFieldDisplayName(NLS.constants().transfertReference_field_dateDepart()+BaseNLS.constants().search_operator_inferior());dateDepartBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateDepartBeforeCrit.setValue(DateUtil.getDate(dateDepartBeforeBox.getValue()));dateDepartBeforeCrit.setValueDisplayName(DateUtil.getDate(dateDepartBeforeBox.getValue()));criteria.add(dateDepartBeforeCrit);
if (dateDepartAfterBox.getValue()!=null){FilterCriteriadateDepartAfterCrit=newFilterCriteria();dateDepartAfterCrit.setField("dateDepart");dateDepartAfterCrit.setFieldDisplayName(NLS.constants().transfertReference_field_dateDepart()+BaseNLS.constants().search_operator_superior());dateDepartAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateDepartAfterCrit.setValue(DateUtil.getDate(dateDepartAfterBox.getValue()));dateDepartAfterCrit.setValueDisplayName(DateUtil.getDate(dateDepartAfterBox.getValue()));criteria.add(dateDepartAfterCrit);
if (dateArriveeBeforeBox.getValue()!=null){FilterCriteriadateArriveeBeforeCrit=newFilterCriteria();dateArriveeBeforeCrit.setField("dateArrivee");dateArriveeBeforeCrit.setFieldDisplayName(NLS.constants().transfertReference_field_dateArrivee()+BaseNLS.constants().search_operator_inferior());dateArriveeBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateArriveeBeforeCrit.setValue(DateUtil.getDate(dateArriveeBeforeBox.getValue()));dateArriveeBeforeCrit.setValueDisplayName(DateUtil.getDate(dateArriveeBeforeBox.getValue()));criteria.add(dateArriveeBeforeCrit);
if (dateArriveeAfterBox.getValue()!=null){FilterCriteriadateArriveeAfterCrit=newFilterCriteria();dateArriveeAfterCrit.setField("dateArrivee");dateArriveeAfterCrit.setFieldDisplayName(NLS.constants().transfertReference_field_dateArrivee()+BaseNLS.constants().search_operator_superior());dateArriveeAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateArriveeAfterCrit.setValue(DateUtil.getDate(dateArriveeAfterBox.getValue()));dateArriveeAfterCrit.setValueDisplayName(DateUtil.getDate(dateArriveeAfterBox.getValue()));criteria.add(dateArriveeAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadTransfertReferenceInformationsDepart())natureFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdtdepart_nomFilterBox.setVisible(false);
if (!AccessManager.canReadTransfertReferenceInformationsDepart()){dateDepartBeforeFilterBox.setVisible(false);dateDepartAfterFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdtarrivee_nomFilterBox.setVisible(false);
if (!AccessManager.canReadTransfertReferenceInformationArrivee()){dateArriveeBeforeFilterBox.setVisible(false);dateArriveeAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (scheduledFuture!=null){LOG.info("CancelscheduledSMSservice");scheduledFuture.cancel(false);scheduledFuture=null;
if (date==null)return"";
else returndateTimeFormat.format(date);
if (text.length()>0){date=dateTimeFormat.parse(text);
if (lot_quantiteBox.getValue()==null)lot_quantiteCrit.setValue(null);
else lot_quantiteCrit.setValue(String.valueOf(lot_quantiteBox.getValue()));lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_quantiteBox.getValue()));criteria.add(lot_quantiteCrit);FilterCriteriaquantiteCrit=newFilterCriteria();quantiteCrit.setField("quantite");quantiteCrit.setFieldDisplayName(NLS.constants().sortieLot_field_quantite());quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteBox.getValue()==null)quantiteCrit.setValue(null);
else quantiteCrit.setValue(String.valueOf(quantiteBox.getValue()));quantiteCrit.setValueDisplayName(String.valueOf(quantiteBox.getValue()));criteria.add(quantiteCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLotDescription())lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())quantiteFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (handler==null)initHandler();returnhandler.getById(id);
if (ProfileUtil.isAdmin()){Column<FieldGroupProxy,String>entityColumn=newEntityColumn();entityColumn.setSortable(true);table.addColumn(entityColumn,AdminNLS.constants().fieldGroup_field_s_entity());
if (ProfileUtil.isAdmin()){Column<FieldGroupProxy,String>nameColumn=newNameColumn();nameColumn.setSortable(true);table.addColumn(nameColumn,AdminNLS.constants().fieldGroup_field_s_name());
if (object!=null){
if (object.getEntity()==null)value="";
else {value=renderer.getDisplayValue(object.getEntity());
if (object!=null)value=renderer.getDisplayValue(object);returnvalue;
if (entity.getRavitaillement()!=null){bck.setRavitaillement(entity.getRavitaillement().getId());
if (entity.getSortieLot()!=null){bck.setSortieLot(entity.getSortieLot().getId());
if (entity.getEntreeLot()!=null){bck.setEntreeLot(entity.getEntreeLot().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailRavitaillementFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailRavitaillementEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailRavitaillementEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailRavitaillementEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailRavitaillementEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILRAVITAILLEMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRAVITAILLEMENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailRavitaillementFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRavitaillement(RavitaillementProxyvalue,booleanisLocked){editorWorkflow.setRavitaillement(value,isLocked);
if (!enabled){textBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");
if theenteredvalueisavalidDouble*@returnpublicbooleanisValid(){returnisValid;
if therelationfieldbuttonsshallbehiddenpublicEntreeLotEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadEntreeLotDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())descriptionSection.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().entreeLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicFormationDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFormation(start,numRows,"dateDebut",false,searchCriterions,property);
else result=request.listNonAffectedFormationReverse(start,numRows,"dateDebut",false,searchCriterions,property);
else result=request.listFormation(start,numRows,"dateDebut",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFormation(start,numRows,"dateDebut",false,filterCriteria,property);
else result=request.listNonAffectedFormationReverse(start,numRows,"dateDebut",false,filterCriteria,property);
else result=request.listFormation(start,numRows,"dateDebut",false,filterCriteria);
else result=request.getFormationEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFormation(start,numRows,"dateDebut",false,searchCriterions,property);
else result=request.listNonAffectedFormationReverse(start,numRows,"dateDebut",false,searchCriterions,property);
else result=request.listFormation(start,numRows,"dateDebut",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFormation(start,numRows,"dateDebut",false,property);
else result=request.listNonAffectedFormationReverse(start,numRows,"dateDebut",false,property);
else result=request.listFormation(start,numRows,"dateDebut",false);
if (isFiltered){result.with("libelle");result.with("lieu");
else {result.with("libelle");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listFormation(start,numRows,property,asc,searchCriterions);
else result=request.listFormation(start,numRows,property,asc,filterCriteria);
else result=request.getFormationEmptyList();
else {
if (searchCriterions!=null)result=request.listFormation(start,numRows,property,asc,searchCriterions);
else result=request.listFormation(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFormation(property,searchCriterions);
else returnrequest.countNonAffectedFormationReverse(property,searchCriterions);
else returnrequest.countFormation(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFormation(property,filterCriteria);
else returnrequest.countNonAffectedFormationReverse(property,filterCriteria);
else returnrequest.countFormation(filterCriteria);
else returnrequest.countNonAffectedFormation("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFormation(property,searchCriterions);
else returnrequest.countNonAffectedFormationReverse(property,searchCriterions);
else returnrequest.countFormation(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFormation(property);
else returnrequest.countNonAffectedFormationReverse(property);
else returnrequest.countFormation();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();FormationRequestrequest=(FormationRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDateDebuttry{DateUtil.parseDate(text);BasicCriteriaProxydateDebutCrit=request.create(BasicCriteriaProxy.class);dateDebutCrit.setField("dateDebut");dateDebutCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateDebutCrit.setValue(text);buffer.append("("+NLS.constants().formation_field_dateDebut()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateDebutCrit);
if (locale.equals("fr"))libelleCrit.setField("libelle.francais");
if (locale.equals("en"))libelleCrit.setField("libelle.english");libelleCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);libelleCrit.setValue(text);buffer.append("("+NLS.constants().formation_field_libelle()+":"+text+")"+SYMBOL_OR+"");criterionList.add(libelleCrit);//SearchfieldLieuBasicCriteriaProxylieuCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))lieuCrit.setField("lieu.francais");
if (locale.equals("en"))lieuCrit.setField("lieu.english");lieuCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lieuCrit.setValue(text);buffer.append("("+NLS.constants().formation_field_lieu()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lieuCrit);//Searchfieldeffectuee
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyeffectueeCrit=request.create(BasicCriteriaProxy.class);effectueeCrit.setField("effectuee");effectueeCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);effectueeCrit.setValue(text);buffer.append("("+NLS.constants().formation_field_effectuee()+":"+text+")"+SYMBOL_OR+"");criterionList.add(effectueeCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Intrantentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Intrant>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Intrant>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Intrant>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Intrantentity:entities)delete(entity);
if (identif iant!=null&&!identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("identif iant");criteria.setValue(identif iant);junction.add(criteria);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<ExamenSerologieProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<ExamenSerologieEditorNestedRow>editors=editor.getEditors();ExamenSerologieEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(ExamenSerologieEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(ExamenSerologieEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(ExamenSerologieEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(ExamenSerologieEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){ExamenSerologieProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (EpicamIconConstants.DISTRICTSANTE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DISTRICTSANTE_ICON);DistrictSanteDataProviderprovider=newDistrictSanteDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDistrictSante()&&AccessManager.canEditDistrictSante())listComposite=newDistrictSanteDynaTable(requestFactory,provider,true);
else listComposite=newDistrictSanteDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicExamenATBFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newExamenATBEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newExamenATBEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newExamenATBEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newExamenATBEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.EXAMENATB_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENATB_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicExamenATBFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){editorWorkflow.setLaboratoireReference(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editorWorkflow.setCasTb(value,isLocked);
if (approuveeRegionBox.getValue()==null)approuveeRegionCrit.setValue(null);
else approuveeRegionCrit.setValue(String.valueOf(approuveeRegionBox.getValue()));approuveeRegionCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(approuveeRegionBox.getValue()));criteria.add(approuveeRegionCrit);FilterCriteriaapprouveeGTCCrit=newFilterCriteria();approuveeGTCCrit.setField("approuveeGTC");approuveeGTCCrit.setFieldDisplayName(NLS.constants().candidatureFormation_field_approuveeGTC());approuveeGTCCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);
if (approuveeGTCBox.getValue()==null)approuveeGTCCrit.setValue(null);
else approuveeGTCCrit.setValue(String.valueOf(approuveeGTCBox.getValue()));approuveeGTCCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(approuveeGTCBox.getValue()));criteria.add(approuveeGTCCrit);FilterCriteriadistrictsante_nomCrit=newFilterCriteria();
if (locale.equals("fr"))districtsante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtsante_nomCrit.setField("districtSante.nom.english");districtsante_nomCrit.setFieldDisplayName(NLS.constants().districtSante_field_nom());districtsante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtsante_nomCrit.setValue(districtsante_nomBox.getValue());districtsante_nomCrit.setValueDisplayName(districtsante_nomBox.getValue());criteria.add(districtsante_nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPersonnelIdentif ication())personnel_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())approuveeRegionFilterBox.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())approuveeGTCFilterBox.setVisible(false);
if (!AccessManager.canReadDistrictSanteDescription())districtsante_nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (EpicamIconConstants.SMSPREDEFINI_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.SMSPREDEFINI_ICON);SmsPredefiniDataProviderprovider=newSmsPredefiniDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteSmsPredefini()&&AccessManager.canEditSmsPredefini())listComposite=newSmsPredefiniDynaTable(requestFactory,provider,true);
else listComposite=newSmsPredefiniDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicExamenMicroscopieFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newExamenMicroscopieEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newExamenMicroscopieEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newExamenMicroscopieEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newExamenMicroscopieEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.EXAMENMICROSCOPIE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENMICROSCOPIE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicExamenMicroscopieFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){editorWorkflow.setLaboratoireReference(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editorWorkflow.setCasTb(value,isLocked);
if (EpicamIconConstants.LOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LOT_ICON);LotDataProviderprovider=newLotDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteLot()&&AccessManager.canEditLot())listComposite=newLotDynaTable(requestFactory,provider,true);
else listComposite=newLotDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (AccessManager.canReadEntreeLotDescription()){Column<EntreeLotProxy,String>lotColumn=newLotColumn();lotColumn.setSortable(true);table.addColumn(lotColumn,NLS.constants().entreeLot_field_s_lot());
if (AccessManager.canReadEntreeLotDescription()){Column<EntreeLotProxy,String>quantiteColumn=newQuantiteColumn();quantiteColumn.setSortable(true);table.addColumn(quantiteColumn,NLS.constants().entreeLot_field_s_quantite());
if (AccessManager.canCreateEntreeLot()&&AccessManager.canEditEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/entreelot/",true);
else returnnull;
if (AccessManager.canDeleteEntreeLot()&&AccessManager.canEditEntreeLot()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteEntreeLot()&&AccessManager.canEditEntreeLot()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<EntreeLotProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().entreeLot_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(EntreeLotProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getEntreeLotRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedEntreeLotentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListEntreeLotEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.ENTR_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=entreeLot_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getLot()==null)value="";
else value=renderer.getDisplayValue(object.getLot());
if (object!=null){
if (object.getQuantite()==null)value="";
else value=object.getQuantite().toString();
if (EpicamIconConstants.DETAILRAVITAILLEMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRAVITAILLEMENT_ICON);DetailRavitaillementDataProviderprovider=newDetailRavitaillementDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailRavitaillement()&&AccessManager.canEditDetailRavitaillement())listComposite=newDetailRavitaillementDynaTable(requestFactory,provider,true);
else listComposite=newDetailRavitaillementDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicDetailRavitaillementEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenravitaillement=newImogSingleRelationBox<RavitaillementProxy>(ravitaillementDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRavitaillement()&&AccessManager.canEditRavitaillement())ravitaillement=newImogSingleRelationBox<RavitaillementProxy>(ravitaillementDataProvider,EpicamRenderer.get());
else ravitaillement=newImogSingleRelationBox<RavitaillementProxy>(false,ravitaillementDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldravitaillement.setEdited(false);sortieLot.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailRavitaillementDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadDetailRavitaillementSortie())sortieSection.setVisible(false);
if (!AccessManager.canReadDetailRavitaillementEntree())entreeSection.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementSortie())sortieSection.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementEntree())entreeSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRavitaillement(RavitaillementProxyvalue,booleanisLocked){ravitaillement.setLocked(isLocked);ravitaillement.setValue(value);
if (ravitaillement.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RavitaillementFormPanelform=newRavitaillementFormPanel(requestFactory,ravitaillement.getValue().getId(),relationPopup,"ravitaillement");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("ravitaillement"))ravitaillement.setValue(value,true);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailCommandeMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailCommandeMedicamentEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailCommandeMedicamentEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailCommandeMedicamentEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailCommandeMedicamentEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILCOMMANDEMEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILCOMMANDEMEDICAMENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailCommandeMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editorWorkflow.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editorWorkflow.setMedicament(value,isLocked);
if (AccessManager.canReadRendezVousDescription()){Column<RendezVousProxy,String>dateRendezVousColumn=newDateRendezVousColumn();dateRendezVousColumn.setSortable(true);table.addColumn(dateRendezVousColumn,NLS.constants().rendezVous_field_s_dateRendezVous());
if (AccessManager.canReadRendezVousDescription()){Column<RendezVousProxy,String>honoreColumn=newHonoreColumn();honoreColumn.setSortable(true);table.addColumn(honoreColumn,NLS.constants().rendezVous_field_s_honore());
if (AccessManager.canCreateRendezVous()&&AccessManager.canEditRendezVous()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/rendezvous/",true);
else returnnull;
if (AccessManager.canDeleteRendezVous()&&AccessManager.canEditRendezVous()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteRendezVous()&&AccessManager.canEditRendezVous()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<RendezVousProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().rendezVous_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(RendezVousProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getRendezVousRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedRendezVousentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListRendezVousEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportRendezVous()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.RDV_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=rendezVous_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getDateRendezVous()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateRendezVous());
if (object!=null){
if (object.getHonore()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getHonore());
if (!selected)layout.addStyleName("imogeneSimpleMenuItemOver");
if (AccessManager.canReadRegionDescription()){Column<RegionProxy,String>codeColumn=newCodeColumn();codeColumn.setSortable(true);table.addColumn(codeColumn,NLS.constants().region_field_s_code());
if (AccessManager.canReadRegionDescription()){Column<RegionProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().region_field_s_nom());
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/region/",true);
else returnnull;
if (AccessManager.canDeleteRegion()&&AccessManager.canEditRegion()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteRegion()&&AccessManager.canEditRegion()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<RegionProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().region_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(RegionProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getRegionRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedRegionentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListRegionEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportRegion()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.REG_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=region_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCode()==null)value="";
else value=object.getCode();
if (object!=null){
if (object.getNom()==null)value="";
else value=renderer.getLocalizedText(object.getNom());
if (locale.equals("fr"))return"nom.francais";
if (locale.equals("en"))return"nom.english";return"nom";
if therelationfieldbuttonsshallbehiddenpublicDetailRavitaillementEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();sortieLot.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailRavitaillementSortie())sortieLot.setVisible(false);
if (!AccessManager.canReadDetailRavitaillementEntree())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementSortie())sortieLot.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementEntree())entreeLot.setVisible(false);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if therelationfieldbuttonsshallbehiddenpublicRendezVousEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencasTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())casTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get());
else casTb=newImogSingleRelationBox<CasTuberculoseProxy>(false,casTbDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();casTb.setEdited(isEdited);dateRendezVous.setEdited(isEdited);honore.setEdited(isEdited);nombreSMSEnvoye.setEdited(isEdited);commentaire.setEdited(isEdited);
if (!AccessManager.canReadRendezVousDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){casTb.setLocked(isLocked);casTb.setValue(value);
if (casTb.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,casTb.getValue().getId(),relationPopup,"casTb");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("casTb"))casTb.setValue(value,true);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
else returnnull;
if (buttons!=null&&buttons.size()>0){for(PushButtonentry:buttons){addHeaderWidget(entry);
else headerWidgetPanel.add(widget);headerWidgetPanel.setCellVerticalAlignment(widget,VerticalPanel.ALIGN_MIDDLE);
if (object==null)returntrue;BigDecimalvalue=BigDecimal.valueOf(object);intfractionPartLength=value.scale()<0?0:value.scale();return(length>=fractionPartLength);
if (parent!=null){editor=newReceptionEditor(factory,true);this.initField=initField;
else editor=newReceptionEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().reception_create_title());createDriver();createNewReception();this.setContent(editor);
if (parent!=null){editor=newReceptionEditor(factory,true);this.initField=initField;
else editor=newReceptionEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchReception(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (medicaments!=null&&medicaments.size()>0){for(DetailReceptionMedicamentProxyitem:medicaments){
if (intrants!=null&&intrants.size()>0){for(DetailReceptionIntrantProxyitem:intrants){
if (AccessManager.canEditReception())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Receptionformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewReceptionEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editor.setCommande(value,isLocked);
if (AccessManager.canReadIntrantDescription()){Column<IntrantProxy,String>identif iantColumn=newIdentif iantColumn();identif iantColumn.setSortable(true);table.addColumn(identif iantColumn,NLS.constants().intrant_field_s_identif iant());
if (AccessManager.canReadIntrantDescription()){Column<IntrantProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().intrant_field_s_nom());
if (AccessManager.canCreateIntrant()&&AccessManager.canEditIntrant()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/intrant/",true);
else returnnull;
if (AccessManager.canDeleteIntrant()&&AccessManager.canEditIntrant()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteIntrant()&&AccessManager.canEditIntrant()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<IntrantProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().intrant_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(IntrantProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getIntrantRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedIntrantentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListIntrantEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportIntrant()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.INTR_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=intrant_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getIdentif iant()==null)value="";
else value=object.getIdentif iant();
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if therelationfieldbuttonsshallbehiddenpublicDistrictSanteEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();nom=newImogLocalizedTextBox(locales,NLS.constants().locale());description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);region.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);coordonnees.setEdited(isEdited);
if (!AccessManager.canReadDistrictSanteDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadDistrictSanteAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditDistrictSanteDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDistrictSanteAdresse())adresseSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (lot_quantiteBox.getValue()==null)lot_quantiteCrit.setValue(null);
else lot_quantiteCrit.setValue(String.valueOf(lot_quantiteBox.getValue()));lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_quantiteBox.getValue()));criteria.add(lot_quantiteCrit);FilterCriteriaquantiteCrit=newFilterCriteria();quantiteCrit.setField("quantite");quantiteCrit.setFieldDisplayName(NLS.constants().entreeLot_field_quantite());quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteBox.getValue()==null)quantiteCrit.setValue(null);
else quantiteCrit.setValue(String.valueOf(quantiteBox.getValue()));quantiteCrit.setValueDisplayName(String.valueOf(quantiteBox.getValue()));criteria.add(quantiteCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLotDescription())lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())quantiteFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (searchText==null)handler.listTransfertReference();
else handler.listTransfertReference(searchText);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.CDT.id"),personnel.getCDT().getId());
if (initField==null)handler.saveLot(value);
else handler.saveLot(value,initField);
if (AccessManager.canReadCandidatureFormationDescription()){Column<CandidatureFormationProxy,String>personnelColumn=newPersonnelColumn();personnelColumn.setSortable(true);table.addColumn(personnelColumn,NLS.constants().candidatureFormation_field_s_personnel());
if (AccessManager.canReadCandidatureFormationDescription()){Column<CandidatureFormationProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().candidatureFormation_field_s_cDT());
if (AccessManager.canReadCandidatureFormationRegionApprobation()){Column<CandidatureFormationProxy,String>approuveeRegionColumn=newApprouveeRegionColumn();approuveeRegionColumn.setSortable(true);table.addColumn(approuveeRegionColumn,NLS.constants().candidatureFormation_field_s_approuveeRegion());
if (AccessManager.canReadCandidatureFormationGtcApprobation()){Column<CandidatureFormationProxy,String>approuveeGTCColumn=newApprouveeGTCColumn();approuveeGTCColumn.setSortable(true);table.addColumn(approuveeGTCColumn,NLS.constants().candidatureFormation_field_s_approuveeGTC());
if (AccessManager.canReadCandidatureFormationDescription()){Column<CandidatureFormationProxy,String>districtSanteColumn=newDistrictSanteColumn();districtSanteColumn.setSortable(true);table.addColumn(districtSanteColumn,NLS.constants().candidatureFormation_field_s_districtSante());
if (AccessManager.canCreateCandidatureFormation()&&AccessManager.canEditCandidatureFormation()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/candidatureformation/",true);
else returnnull;
if (AccessManager.canDeleteCandidatureFormation()&&AccessManager.canEditCandidatureFormation()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteCandidatureFormation()&&AccessManager.canEditCandidatureFormation()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<CandidatureFormationProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().candidatureFormation_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(CandidatureFormationProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getCandidatureFormationRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedCandidatureFormationentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListCandidatureFormationEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportCandidatureFormation()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.CAND_FORM_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=candidatureFormation_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPersonnel()==null)value="";
else value=renderer.getDisplayValue(object.getPersonnel());
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getApprouveeRegion()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getApprouveeRegion());
if (object!=null){
if (object.getApprouveeGTC()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getApprouveeGTC());
if (object!=null){
if (object.getDistrictSante()==null)value="";
else value=renderer.getDisplayValue(object.getDistrictSante());
if (parent!=null){editor=newNotif icationEditor(factory,true,formTypeUtil,renderer);this.initField=initField;
else editor=newNotif icationEditor(factory,formTypeUtil,renderer);isNew=true;setEditable(true);setTitle(AdminNLS.constants().notif ication_create_title());createDriver();createNewNotif ication();this.setContent(editor);
if (parent!=null){editor=newNotif icationEditor(factory,true,formTypeUtil,renderer);this.initField=initField;
else editor=newNotif icationEditor(factory,formTypeUtil,renderer);
if (!ProfileUtil.isAdmin())this.setModif iable(false);isNew=false;setEditable(false);createDriver();fetchNotif ication(entityId);this.setContent(editor);
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Notif icationformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesAdminRendererrenderer=AdminRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(newGoHomeEvent());
else requestFactory.getEventBus().fireEvent(newViewNotif icationEvent(current.getId()));
if (parent!=null){editor=newRegimeEditor(factory,true);this.initField=initField;
else editor=newRegimeEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().regime_create_title());createDriver();createNewRegime();this.setContent(editor);
if (parent!=null){editor=newRegimeEditor(factory,true);this.initField=initField;
else editor=newRegimeEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchRegime(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (prisesMedicamenteuses!=null&&prisesMedicamenteuses.size()>0){for(PriseMedicamentRegimeProxyitem:prisesMedicamenteuses){
if (AccessManager.canEditRegime())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Regimeformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewRegimeEvent(current.getId(),closeEvent));
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailCommandeIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailCommandeIntrantEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailCommandeIntrantEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailCommandeIntrantEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailCommandeIntrantEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILCOMMANDEINTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILCOMMANDEINTRANT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailCommandeIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editorWorkflow.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){editorWorkflow.setIntrant(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicCasTuberculoseEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenexamensMiscrocopies=newImogMultiRelationBox<ExamenMicroscopieProxy>(examensMiscrocopiesDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateExamenMicroscopie()&&AccessManager.canEditExamenMicroscopie())examensMiscrocopies=newImogMultiRelationBox<ExamenMicroscopieProxy>(examensMiscrocopiesDataProvider,EpicamRenderer.get(),null);
else examensMiscrocopies=newImogMultiRelationBox<ExamenMicroscopieProxy>(false,examensMiscrocopiesDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddenexamensATB=newImogMultiRelationBox<ExamenATBProxy>(examensATBDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateExamenATB()&&AccessManager.canEditExamenATB())examensATB=newImogMultiRelationBox<ExamenATBProxy>(examensATBDataProvider,EpicamRenderer.get(),null);
else examensATB=newImogMultiRelationBox<ExamenATBProxy>(false,examensATBDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddenregimePhaseInitiale=newImogSingleRelationBox<RegimeProxy>(regimePhaseInitialeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegime()&&AccessManager.canEditRegime())regimePhaseInitiale=newImogSingleRelationBox<RegimeProxy>(regimePhaseInitialeDataProvider,EpicamRenderer.get());
else regimePhaseInitiale=newImogSingleRelationBox<RegimeProxy>(false,regimePhaseInitialeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenregimePhaseContinuation=newImogSingleRelationBox<RegimeProxy>(regimePhaseContinuationDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegime()&&AccessManager.canEditRegime())regimePhaseContinuation=newImogSingleRelationBox<RegimeProxy>(regimePhaseContinuationDataProvider,EpicamRenderer.get());
else regimePhaseContinuation=newImogSingleRelationBox<RegimeProxy>(false,regimePhaseContinuationDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldidentif iant.setEdited(false);numRegTB.setEdited(isEdited);patient.setEdited(isEdited);dateDebutTraitement.setEdited(isEdited);typePatient.setEdited(isEdited);typePatientPrecisions.setEdited(isEdited);formeMaladie.setEdited(isEdited);extraPulmonairePrecisions.setEdited(isEdited);cotrimoxazole.setEdited(isEdited);antiRetroViraux.setEdited(isEdited);fumeur.setEdited(isEdited);fumeurArreter.setEdited(isEdited);examensMiscrocopies.setEdited(isEdited);examensATB.setEdited(isEdited);regimePhaseInitiale.setEdited(isEdited);regimePhaseContinuation.setEdited(isEdited);priseMedicamenteusePhaseInitiale.setEdited(isEdited);priseMedicamenteusePhaseContinuation.setEdited(isEdited);rendezVous.setEdited(isEdited);dateFinTraitement.setEdited(isEdited);devenirMalade.setEdited(isEdited);observation.setEdited(isEdited);
if (!AccessManager.canReadCasTuberculoseInformations())informationsSection.setVisible(false);
if (!AccessManager.canReadCasTuberculoseExamen())examenSection.setVisible(false);
if (!AccessManager.canReadCasTuberculoseTraitement())traitementSection.setVisible(false);
if (!AccessManager.canReadCasTuberculoseFinTraitement())finTraitementSection.setVisible(false);
if (!AccessManager.canEditCasTuberculoseInformations())informationsSection.setVisible(false);
if (!AccessManager.canEditCasTuberculoseExamen())examenSection.setVisible(false);
if (!AccessManager.canEditCasTuberculoseTraitement())traitementSection.setVisible(false);
if (!AccessManager.canEditCasTuberculoseFinTraitement())finTraitementSection.setVisible(false);
if patientisselectedandbuildtbcaseidbypatientid
if (field.equals(patient)){
if (patient!=null){//+nombred'�pisodedetbdupatient+1com.google.web.bindery.requestfactory.shared.Request<List<CasTuberculoseProxy>>listCasTB=requestFactory.casTuberculoseRequest().listCasTuberculose("modif ied",false);listCasTB.fire(newReceiver<List<CasTuberculoseProxy>>(){@OverridepublicvoidonSuccess(List<CasTuberculoseProxy>response){intnbEpisodeTB=0;Stringidentif iantTB=patient.getValue().getIdentif iant();for(CasTuberculoseProxycasTuberculoseProxy:response){
if (casTuberculoseProxy.getPatient().getIdentif iant().equals(patient.getValue().getIdentif iant())){nbEpisodeTB++;
if (allValidation||source.equals(typePatient)){
if ((typePatient.getValue()!=null&&typePatient.getValue().matches("3"))){typePatientPrecisions.setVisible(true);
else {typePatientPrecisions.setVisible(false);
if (allValidation||source.equals(formeMaladie)){
if ((formeMaladie.getValue()!=null&&formeMaladie.getValue().matches("2"))){extraPulmonairePrecisions.setVisible(true);
else {extraPulmonairePrecisions.setVisible(false);
if (allValidation||source.equals(fumeur)){
if ((fumeur.getValue()!=null&&fumeur.getValue())){fumeurArreter.setVisible(true);
else {fumeurArreter.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseInitiale(RegimeProxyvalue,booleanisLocked){regimePhaseInitiale.setLocked(isLocked);regimePhaseInitiale.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseContinuation(RegimeProxyvalue,booleanisLocked){regimePhaseContinuation.setLocked(isLocked);regimePhaseContinuation.setValue(value);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (!examensMiscrocopies.isEmpty()&&examensMiscrocopies.getSelectedEntities().size()>0){ExamenMicroscopieProxyvalue=examensMiscrocopies.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();ExamenMicroscopieFormPanelform=newExamenMicroscopieFormPanel(requestFactory,value.getId(),relationPopup,"examensMiscrocopies");relationPopup.addWidget(form);relationPopup.show();
if (!examensMiscrocopies.isPresent(value))examensMiscrocopies.addValue(value);
if (initField.equals("examensMiscrocopies")){
if (examensMiscrocopies.isPresent(value))examensMiscrocopies.replaceValue(value);
else examensMiscrocopies.addValue(value,true);
if (!examensATB.isEmpty()&&examensATB.getSelectedEntities().size()>0){ExamenATBProxyvalue=examensATB.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();ExamenATBFormPanelform=newExamenATBFormPanel(requestFactory,value.getId(),relationPopup,"examensATB");relationPopup.addWidget(form);relationPopup.show();
if (!examensATB.isPresent(value))examensATB.addValue(value);
if (initField.equals("examensATB")){
if (examensATB.isPresent(value))examensATB.replaceValue(value);
else examensATB.addValue(value,true);
if (regimePhaseInitiale.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegimeFormPanelform=newRegimeFormPanel(requestFactory,regimePhaseInitiale.getValue().getId(),relationPopup,"regimePhaseInitiale");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("regimePhaseInitiale"))regimePhaseInitiale.setValue(value,true);
if (regimePhaseContinuation.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegimeFormPanelform=newRegimeFormPanel(requestFactory,regimePhaseContinuation.getValue().getId(),relationPopup,"regimePhaseContinuation");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("regimePhaseContinuation"))regimePhaseContinuation.setValue(value,true);
if (dateDebutTraitement.getValueWithoutParseException()==null&&dateDebutTraitement.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateDebutTraitement");//priseMedicamenteusePhaseInitialenestedformshallbevalidatedpriseMedicamenteusePhaseInitiale.validateFields();//priseMedicamenteusePhaseContinuationnestedformshallbevalidatedpriseMedicamenteusePhaseContinuation.validateFields();//rendezVousnestedformshallbevalidatedrendezVous.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>dateDebutTraitementFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateDebutTraitement"))dateDebutTraitementFieldErrors.add(error);
if (dateDebutTraitementFieldErrors.size()>0)dateDebutTraitement.showErrors(dateDebutTraitementFieldErrors);
if (handler==null)initHandler();returnhandler.find(clazz,id);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicQualif icationDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedQualif ication(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedQualif icationReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listQualif ication(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedQualif ication(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedQualif icationReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listQualif ication(start,numRows,"nom",true,filterCriteria);
else result=request.getQualif icationEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedQualif ication(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedQualif icationReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listQualif ication(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedQualif ication(start,numRows,"nom",true,property);
else result=request.listNonAffectedQualif icationReverse(start,numRows,"nom",true,property);
else result=request.listQualif ication(start,numRows,"nom",true);
if (isFiltered){result.with("nom");
else {result.with("nom");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listQualif ication(start,numRows,property,asc,searchCriterions);
else result=request.listQualif ication(start,numRows,property,asc,filterCriteria);
else result=request.getQualif icationEmptyList();
else {
if (searchCriterions!=null)result=request.listQualif ication(start,numRows,property,asc,searchCriterions);
else result=request.listQualif ication(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedQualif ication(property,searchCriterions);
else returnrequest.countNonAffectedQualif icationReverse(property,searchCriterions);
else returnrequest.countQualif ication(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedQualif ication(property,filterCriteria);
else returnrequest.countNonAffectedQualif icationReverse(property,filterCriteria);
else returnrequest.countQualif ication(filterCriteria);
else returnrequest.countNonAffectedQualif ication("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedQualif ication(property,searchCriterions);
else returnrequest.countNonAffectedQualif icationReverse(property,searchCriterions);
else returnrequest.countQualif ication(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedQualif ication(property);
else returnrequest.countNonAffectedQualif icationReverse(property);
else returnrequest.countQualif ication();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();Qualif icationRequestrequest=(Qualif icationRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldCodeBasicCriteriaProxycodeCrit=request.create(BasicCriteriaProxy.class);codeCrit.setField("code");codeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);codeCrit.setValue(text);buffer.append("("+NLS.constants().qualif ication_field_code()+":"+text+")"+SYMBOL_OR+"");criterionList.add(codeCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().qualif ication_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (AccessManager.canReadDetailRavitaillementDescription()){Column<DetailRavitaillementProxy,String>ravitaillementColumn=newRavitaillementColumn();ravitaillementColumn.setSortable(true);table.addColumn(ravitaillementColumn,NLS.constants().detailRavitaillement_field_s_ravitaillement());
if (AccessManager.canReadDetailRavitaillementSortie()){Column<DetailRavitaillementProxy,String>sortieLotColumn=newSortieLotColumn();sortieLotColumn.setSortable(true);table.addColumn(sortieLotColumn,NLS.constants().detailRavitaillement_field_s_sortieLot());
if (AccessManager.canReadDetailRavitaillementEntree()){Column<DetailRavitaillementProxy,String>entreeLotColumn=newEntreeLotColumn();entreeLotColumn.setSortable(true);table.addColumn(entreeLotColumn,NLS.constants().detailRavitaillement_field_s_entreeLot());
if (AccessManager.canCreateDetailRavitaillement()&&AccessManager.canEditDetailRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailravitaillement/",true);
else returnnull;
if (AccessManager.canDeleteDetailRavitaillement()&&AccessManager.canEditDetailRavitaillement()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailRavitaillement()&&AccessManager.canEditDetailRavitaillement()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailRavitaillementProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailRavitaillement_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailRavitaillementProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailRavitaillementRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailRavitaillemententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailRavitaillementEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_RAV_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailRavitaillement_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getRavitaillement()==null)value="";
else value=renderer.getDisplayValue(object.getRavitaillement());
if (object!=null){
if (object.getSortieLot()==null)value="";
else value=renderer.getDisplayValue(object.getSortieLot());
if (object!=null){
if (object.getEntreeLot()==null)value="";
else value=renderer.getDisplayValue(object.getEntreeLot());
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if (entity.getExamensMiscrocopies()!=null){StringBuilderbuilder=newStringBuilder();for(ExamenMicroscopiei:entity.getExamensMiscrocopies()){builder.append(i.getId()).append(";");
if (entity.getExamensATB()!=null){StringBuilderbuilder=newStringBuilder();for(ExamenATBi:entity.getExamensATB()){builder.append(i.getId()).append(";");
if (entity.getRegimePhaseInitiale()!=null){bck.setRegimePhaseInitiale(entity.getRegimePhaseInitiale().getId());
if (entity.getRegimePhaseContinuation()!=null){bck.setRegimePhaseContinuation(entity.getRegimePhaseContinuation().getId());
if (entity.getPriseMedicamenteusePhaseInitiale()!=null){StringBuilderbuilder=newStringBuilder();for(PriseMedicamenteusei:entity.getPriseMedicamenteusePhaseInitiale()){builder.append(i.getId()).append(";");
if (entity.getPriseMedicamenteusePhaseContinuation()!=null){StringBuilderbuilder=newStringBuilder();for(PriseMedicamenteusei:entity.getPriseMedicamenteusePhaseContinuation()){builder.append(i.getId()).append(";");
if (entity.getRendezVous()!=null){StringBuilderbuilder=newStringBuilder();for(RendezVousi:entity.getRendezVous()){builder.append(i.getId()).append(";");
if (parent!=null){editor=newSortieLotEditor(factory,true);this.initField=initField;
else editor=newSortieLotEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().sortieLot_create_title());createDriver();createNewSortieLot();this.setContent(editor);
if (parent!=null){editor=newSortieLotEditor(factory,true);this.initField=initField;
else editor=newSortieLotEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchSortieLot(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditSortieLot())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("SortieLotformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewSortieLotEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editor.setLot(value,isLocked);
if (handler==null)initHandler();returnhandler.getById(id);
if (result.equals(""))returnnull;
else returnresult;
if (listBox.getValue(i).equals(value)){listBox.setSelectedIndex(i);return;
if (!enabled){listBox.addStyleDependentName("disabled");StringitemText=listBox.getItemText(listBox.getSelectedIndex());listBox.setVisible(false);textBox.setText(itemText);textBox.setVisible(true);
else {listBox.removeStyleDependentName("disabled");textBox.setVisible(false);listBox.setVisible(true);
if (eventBus!=null){listBox.addChangeHandler(newChangeHandler(){@OverridepublicvoidonChange(ChangeEventevent){eventBus.fireEvent(newFieldValueChangeEvent(ImogSingleEnumBox.this));
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeMedicamentEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();medicament.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())medicament.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteEnStock.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())medicament.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())quantiteEnStock.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if (initField==null)handler.saveExamenMicroscopie(value);
else handler.saveExamenMicroscopie(value,initField);
if (EpicamIconConstants.DETAILCOMMANDEMEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILCOMMANDEMEDICAMENT_ICON);DetailCommandeMedicamentDataProviderprovider=newDetailCommandeMedicamentDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament())listComposite=newDetailCommandeMedicamentDynaTable(requestFactory,provider,true);
else listComposite=newDetailCommandeMedicamentDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (parent!=null){editor=newRegionEditor(factory,true);this.initField=initField;
else editor=newRegionEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().region_create_title());createDriver();createNewRegion();this.setContent(editor);
if (parent!=null){editor=newRegionEditor(factory,true);this.initField=initField;
else editor=newRegionEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchRegion(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getNom()==null){LocalizedTextProxynewNom=request.create(LocalizedTextProxy.class);current.setNom(newNom);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (current.getCoordonnees()==null){GeoFieldProxynewCoordonnees=request.create(GeoFieldProxy.class);current.setCoordonnees(newCoordonnees);
if (AccessManager.canEditRegion())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Regionformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewRegionEvent(current.getId(),closeEvent));
if (dateDepartBeforeBox.getValue()!=null){FilterCriteriadateDepartBeforeCrit=newFilterCriteria();dateDepartBeforeCrit.setField("dateDepart");dateDepartBeforeCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateDepart()+BaseNLS.constants().search_operator_inferior());dateDepartBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateDepartBeforeCrit.setValue(DateUtil.getDate(dateDepartBeforeBox.getValue()));dateDepartBeforeCrit.setValueDisplayName(DateUtil.getDate(dateDepartBeforeBox.getValue()));criteria.add(dateDepartBeforeCrit);
if (dateDepartAfterBox.getValue()!=null){FilterCriteriadateDepartAfterCrit=newFilterCriteria();dateDepartAfterCrit.setField("dateDepart");dateDepartAfterCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateDepart()+BaseNLS.constants().search_operator_superior());dateDepartAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateDepartAfterCrit.setValue(DateUtil.getDate(dateDepartAfterBox.getValue()));dateDepartAfterCrit.setValueDisplayName(DateUtil.getDate(dateDepartAfterBox.getValue()));criteria.add(dateDepartAfterCrit);
if (dateArriveeBeforeBox.getValue()!=null){FilterCriteriadateArriveeBeforeCrit=newFilterCriteria();dateArriveeBeforeCrit.setField("dateArrivee");dateArriveeBeforeCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateArrivee()+BaseNLS.constants().search_operator_inferior());dateArriveeBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateArriveeBeforeCrit.setValue(DateUtil.getDate(dateArriveeBeforeBox.getValue()));dateArriveeBeforeCrit.setValueDisplayName(DateUtil.getDate(dateArriveeBeforeBox.getValue()));criteria.add(dateArriveeBeforeCrit);
if (dateArriveeAfterBox.getValue()!=null){FilterCriteriadateArriveeAfterCrit=newFilterCriteria();dateArriveeAfterCrit.setField("dateArrivee");dateArriveeAfterCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateArrivee()+BaseNLS.constants().search_operator_superior());dateArriveeAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateArriveeAfterCrit.setValue(DateUtil.getDate(dateArriveeAfterBox.getValue()));dateArriveeAfterCrit.setValueDisplayName(DateUtil.getDate(dateArriveeAfterBox.getValue()));criteria.add(dateArriveeAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())cdtdepart_nomFilterBox.setVisible(false);
if (!AccessManager.canReadRavitaillementInformationsDepart()){dateDepartBeforeFilterBox.setVisible(false);dateDepartAfterFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdtarrivee_nomFilterBox.setVisible(false);
if (!AccessManager.canReadRavitaillementInformationArrivee()){dateArriveeBeforeFilterBox.setVisible(false);dateArriveeAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (initField==null)handler.saveDistrictSante(value);
else handler.saveDistrictSante(value,initField);
if (!ProfileUtil.isAdmin())entity_nameFilterBox.setVisible(false);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"regionArrivee.id"),personnel.getRegion().getId()));
else 
if ("2".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"districtSanteArrivee.id"),personnel.getDistrictSante().getId()));
else 
if ("3".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"CDTDepart.id"),personnel.getCDT().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"CDTArrivee.id"),personnel.getCDT().getId()));
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicPriseMedicamentRegimeDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamentRegime(start,numRows,"medicament",true,searchCriterions,property);
else result=request.listNonAffectedPriseMedicamentRegimeReverse(start,numRows,"medicament",true,searchCriterions,property);
else result=request.listPriseMedicamentRegime(start,numRows,"medicament",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamentRegime(start,numRows,"medicament",true,filterCriteria,property);
else result=request.listNonAffectedPriseMedicamentRegimeReverse(start,numRows,"medicament",true,filterCriteria,property);
else result=request.listPriseMedicamentRegime(start,numRows,"medicament",true,filterCriteria);
else result=request.getPriseMedicamentRegimeEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamentRegime(start,numRows,"medicament",true,searchCriterions,property);
else result=request.listNonAffectedPriseMedicamentRegimeReverse(start,numRows,"medicament",true,searchCriterions,property);
else result=request.listPriseMedicamentRegime(start,numRows,"medicament",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPriseMedicamentRegime(start,numRows,"medicament",true,property);
else result=request.listNonAffectedPriseMedicamentRegimeReverse(start,numRows,"medicament",true,property);
else result=request.listPriseMedicamentRegime(start,numRows,"medicament",true);
if (isFiltered){result.with("medicament");
else {result.with("medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listPriseMedicamentRegime(start,numRows,property,asc,searchCriterions);
else result=request.listPriseMedicamentRegime(start,numRows,property,asc,filterCriteria);
else result=request.getPriseMedicamentRegimeEmptyList();
else {
if (searchCriterions!=null)result=request.listPriseMedicamentRegime(start,numRows,property,asc,searchCriterions);
else result=request.listPriseMedicamentRegime(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamentRegime(property,searchCriterions);
else returnrequest.countNonAffectedPriseMedicamentRegimeReverse(property,searchCriterions);
else returnrequest.countPriseMedicamentRegime(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamentRegime(property,filterCriteria);
else returnrequest.countNonAffectedPriseMedicamentRegimeReverse(property,filterCriteria);
else returnrequest.countPriseMedicamentRegime(filterCriteria);
else returnrequest.countNonAffectedPriseMedicamentRegime("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamentRegime(property,searchCriterions);
else returnrequest.countNonAffectedPriseMedicamentRegimeReverse(property,searchCriterions);
else returnrequest.countPriseMedicamentRegime(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPriseMedicamentRegime(property);
else returnrequest.countNonAffectedPriseMedicamentRegimeReverse(property);
else returnrequest.countPriseMedicamentRegime();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();PriseMedicamentRegimeRequestrequest=(PriseMedicamentRegimeRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDesignationBasicCriteriaProxymedicament_designationCrit=request.create(BasicCriteriaProxy.class);medicament_designationCrit.setField("medicament.designation");medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);medicament_designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(medicament_designationCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if (AccessManager.canReadTransfertReferenceInformationsDepart()){Column<TransfertReferenceProxy,String>patientColumn=newPatientColumn();patientColumn.setSortable(true);table.addColumn(patientColumn,NLS.constants().transfertReference_field_s_patient());
if (AccessManager.canReadTransfertReferenceInformationsDepart()){Column<TransfertReferenceProxy,String>natureColumn=newNatureColumn();natureColumn.setSortable(true);table.addColumn(natureColumn,NLS.constants().transfertReference_field_s_nature());
if (AccessManager.canReadTransfertReferenceInformationsDepart()){Column<TransfertReferenceProxy,String>cDTDepartColumn=newCDTDepartColumn();cDTDepartColumn.setSortable(true);table.addColumn(cDTDepartColumn,NLS.constants().transfertReference_field_s_cDTDepart());
if (AccessManager.canReadTransfertReferenceInformationsDepart()){Column<TransfertReferenceProxy,String>dateDepartColumn=newDateDepartColumn();dateDepartColumn.setSortable(true);table.addColumn(dateDepartColumn,NLS.constants().transfertReference_field_s_dateDepart());
if (AccessManager.canReadTransfertReferenceInformationArrivee()){Column<TransfertReferenceProxy,String>cDTArriveeColumn=newCDTArriveeColumn();cDTArriveeColumn.setSortable(true);table.addColumn(cDTArriveeColumn,NLS.constants().transfertReference_field_s_cDTArrivee());
if (AccessManager.canReadTransfertReferenceInformationArrivee()){Column<TransfertReferenceProxy,String>dateArriveeColumn=newDateArriveeColumn();dateArriveeColumn.setSortable(true);table.addColumn(dateArriveeColumn,NLS.constants().transfertReference_field_s_dateArrivee());
if (AccessManager.canCreateTransfertReference()&&AccessManager.canEditTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/transfertreference/",true);
else returnnull;
if (AccessManager.canDeleteTransfertReference()&&AccessManager.canEditTransfertReference()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteTransfertReference()&&AccessManager.canEditTransfertReference()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<TransfertReferenceProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().transfertReference_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(TransfertReferenceProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getTransfertReferenceRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedTransfertReferenceentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListTransfertReferenceEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.TRANS_REF_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=transfertReference_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPatient()==null)value="";
else value=renderer.getDisplayValue(object.getPatient());
if (object!=null){
if (object.getNature()==null)value="";
else value=renderer.getEnumDisplayValue(TransfertReferenceProxy.class,"nature",object.getNature());
if (object!=null){
if (object.getCDTDepart()==null)value="";
else value=renderer.getDisplayValue(object.getCDTDepart());
if (object!=null){
if (object.getDateDepart()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDepart());
if (object!=null){
if (object.getCDTArrivee()==null)value="";
else value=renderer.getDisplayValue(object.getCDTArrivee());
if (object!=null){
if (object.getDateArrivee()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateArrivee());
if (AccessManager.canReadCommandeInformationsDepart()){Column<CommandeProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().commande_field_s_cDT());
if (AccessManager.canReadCommandeInformationsDepart()){Column<CommandeProxy,String>dateColumn=newDateColumn();dateColumn.setSortable(true);table.addColumn(dateColumn,NLS.constants().commande_field_s_date());
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/commande/",true);
else returnnull;
if (AccessManager.canDeleteCommande()&&AccessManager.canEditCommande()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteCommande()&&AccessManager.canEditCommande()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<CommandeProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().commande_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(CommandeProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getCommandeRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedCommandeentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListCommandeEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportCommande()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.CMD_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=commande_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getDate()==null)value="";
else value=DateUtil.getFormatedDate(object.getDate());
else textBox.setValue("");setButtonVisibility();
if truenotif ychangespublicvoidsetValue(Tvalue,booleannotif yChange){setValue(value);if (notif yChange)ValueChangeEvent.fire(textBox,textBox.getValue());
else clearImage.setVisible(false);
else {clearImage.setVisible(false);
else {clearImage.setVisible(false);
else viewImage.setVisible(true);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(CardEntityentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<CardEntity>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<CardEntity>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<CardEntity>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(CardEntityentity:entities)delete(entity);
if (resultForEntityProfileEntity!=null){for(EntityProfileforeignEntity:resultForEntityProfileEntity){foreignEntity.setModif ied(newDate());foreignEntity.setEntity(null);entityProfileDao.saveOrUpdate(foreignEntity,false);
if (resultForFieldGroupProfileCardEntity!=null){for(FieldGroupProfileforeignEntity:resultForFieldGroupProfileCardEntity){foreignEntity.setModif ied(newDate());foreignEntity.setCardEntity(null);fieldGroupProfileDao.saveOrUpdate(foreignEntity,false);
if (resultForFieldGroupEntity!=null){for(FieldGroupforeignEntity:resultForFieldGroupEntity){foreignEntity.setModif ied(newDate());foreignEntity.setEntity(null);fieldGroupDao.saveOrUpdate(foreignEntity,false);
if (name!=null&&!name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("name");criteria.setValue(name);junction.add(criteria);
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeIntrantEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenintrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateIntrant()&&AccessManager.canEditIntrant())intrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get());
else intrant=newImogSingleRelationBox<IntrantProxy>(false,intrantDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();intrant.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())intrant.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteEnStock.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())intrant.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())quantiteEnStock.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){intrant.setLocked(isLocked);intrant.setValue(value);
if (intrant.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();IntrantFormPanelform=newIntrantFormPanel(requestFactory,intrant.getValue().getId(),relationPopup,"intrant");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("intrant"))intrant.setValue(value,true);
if (intrant.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"intrant");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>intrantFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("intrant"))intrantFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (intrantFieldErrors.size()>0)intrant.showErrors(intrantFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicIntrantDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedIntrant(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedIntrantReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listIntrant(start,numRows,"modif ied",false,filterCriteria);
else result=request.getIntrantEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedIntrant(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedIntrantReverse(start,numRows,"modif ied",false,property);
else result=request.listIntrant(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listIntrant(start,numRows,property,asc,filterCriteria);
else result=request.getIntrantEmptyList();
else {
if (searchCriterions!=null)result=request.listIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listIntrant(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedIntrant(property,searchCriterions);
else returnrequest.countNonAffectedIntrantReverse(property,searchCriterions);
else returnrequest.countIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedIntrant(property,filterCriteria);
else returnrequest.countNonAffectedIntrantReverse(property,filterCriteria);
else returnrequest.countIntrant(filterCriteria);
else returnrequest.countNonAffectedIntrant("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedIntrant(property,searchCriterions);
else returnrequest.countNonAffectedIntrantReverse(property,searchCriterions);
else returnrequest.countIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedIntrant(property);
else returnrequest.countNonAffectedIntrantReverse(property);
else returnrequest.countIntrant();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();IntrantRequestrequest=(IntrantRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxyidentif iantCrit=request.create(BasicCriteriaProxy.class);identif iantCrit.setField("identif iant");identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(identif iantCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicReceptionFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newReceptionEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newReceptionEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newReceptionEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newReceptionEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.RECEPTION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RECEPTION_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicReceptionFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editorWorkflow.setCommande(value,isLocked);
if (searchText==null)handler.listPriseMedicamentRegime();
else handler.listPriseMedicamentRegime(searchText);
if (EpicamIconConstants.HORSUSAGE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.HORSUSAGE_ICON);HorsUsageDataProviderprovider=newHorsUsageDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteHorsUsage()&&AccessManager.canEditHorsUsage())listComposite=newHorsUsageDynaTable(requestFactory,provider,true);
else listComposite=newHorsUsageDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicFormationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newFormationEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newFormationEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newFormationEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newFormationEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.FORMATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.FORMATION_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicFormationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if therelationfieldbuttonsshallbehiddenpublicCardEntityEditor(AdminRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();name.setEdited(isEdited);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ExamenSerologieentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<ExamenSerologie>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<ExamenSerologie>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<ExamenSerologie>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(ExamenSerologieentity:entities)delete(entity);
if (patient_identif iant!=null&&!patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.identif iant");criteria.setValue(patient_identif iant);junction.add(criteria);
if (patient_nom!=null&&!patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.nom");criteria.setValue(patient_nom);junction.add(criteria);
if (dateTestBefore!=null&&!dateTestBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateTest");criteria.setValue(dateTestBefore);junction.add(criteria);
if (dateTestAfter!=null&&!dateTestAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateTest");criteria.setValue(dateTestAfter);junction.add(criteria);
if (nature!=null&&!nature.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nature");criteria.setValue(nature);junction.add(criteria);
if (resultatCD4!=null&&!resultatCD4.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("resultatCD4");criteria.setValue(resultatCD4);junction.add(criteria);
if (resultatVIH!=null&&!resultatVIH.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("resultatVIH");criteria.setValue(resultatVIH);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (dateTestBeforeBox.getValue()!=null){FilterCriteriadateTestBeforeCrit=newFilterCriteria();dateTestBeforeCrit.setField("dateTest");dateTestBeforeCrit.setFieldDisplayName(NLS.constants().examenSerologie_field_dateTest()+BaseNLS.constants().search_operator_inferior());dateTestBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateTestBeforeCrit.setValue(DateUtil.getDate(dateTestBeforeBox.getValue()));dateTestBeforeCrit.setValueDisplayName(DateUtil.getDate(dateTestBeforeBox.getValue()));criteria.add(dateTestBeforeCrit);
if (dateTestAfterBox.getValue()!=null){FilterCriteriadateTestAfterCrit=newFilterCriteria();dateTestAfterCrit.setField("dateTest");dateTestAfterCrit.setFieldDisplayName(NLS.constants().examenSerologie_field_dateTest()+BaseNLS.constants().search_operator_superior());dateTestAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateTestAfterCrit.setValue(DateUtil.getDate(dateTestAfterBox.getValue()));dateTestAfterCrit.setValueDisplayName(DateUtil.getDate(dateTestAfterBox.getValue()));criteria.add(dateTestAfterCrit);
if (resultatCD4Box.getValue()==null)resultatCD4Crit.setValue(null);
else resultatCD4Crit.setValue(String.valueOf(resultatCD4Box.getValue()));resultatCD4Crit.setValueDisplayName(String.valueOf(resultatCD4Box.getValue()));criteria.add(resultatCD4Crit);FilterCriteriaresultatVIHCrit=newFilterCriteria();resultatVIHCrit.setField("resultatVIH");resultatVIHCrit.setFieldDisplayName(NLS.constants().examenSerologie_field_resultatVIH());resultatVIHCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatVIHCrit.setValue(resultatVIHBox.getValue(resultatVIHBox.getSelectedIndex()));resultatVIHCrit.setValueDisplayName(EpicamRenderer.get().getEnumDisplayValue(ExamenSerologieProxy.class,"resultatVIH",resultatVIHBox.getValue(resultatVIHBox.getSelectedIndex())));criteria.add(resultatVIHCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription()){dateTestBeforeFilterBox.setVisible(false);dateTestAfterFilterBox.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())natureFilterBox.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatCD4FilterBox.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatVIHFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicRendezVousFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newRendezVousEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newRendezVousEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newRendezVousEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newRendezVousEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.RENDEZVOUS_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RENDEZVOUS_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicRendezVousFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editorWorkflow.setCasTb(value,isLocked);
if (handler==null)initHandler();returnhandler.findById(id);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicRegionFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newRegionEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newRegionEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newRegionEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newRegionEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.REGION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.REGION_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicRegionFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (EpicamIconConstants.PRISEMEDICAMENTEUSE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PRISEMEDICAMENTEUSE_ICON);PriseMedicamenteuseDataProviderprovider=newPriseMedicamenteuseDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeletePriseMedicamenteuse()&&AccessManager.canEditPriseMedicamenteuse())listComposite=newPriseMedicamenteuseDynaTable(requestFactory,provider,true);
else listComposite=newPriseMedicamenteuseDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicInventaireFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newInventaireEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newInventaireEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newInventaireEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newInventaireEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.INVENTAIRE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.INVENTAIRE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicInventaireFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if (entity.getDistrictSantes()!=null){StringBuilderbuilder=newStringBuilder();for(DistrictSantei:entity.getDistrictSantes()){builder.append(i.getId()).append(";");
if (EpicamIconConstants.RENDEZVOUS_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RENDEZVOUS_ICON);RendezVousDataProviderprovider=newRendezVousDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteRendezVous()&&AccessManager.canEditRendezVous())listComposite=newRendezVousDynaTable(requestFactory,provider,true);
else listComposite=newRendezVousDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (initField==null)handler.saveLaboratoireReference(value);
else handler.saveLaboratoireReference(value,initField);
if (behavior==null){thisBehavior=newDefaultAddressBehavior();
else {thisBehavior=behavior;
if (!enabled){textBoxLong.addStyleDependentName("disabled");textBoxLat.addStyleDependentName("disabled");viewOnMap.addStyleDependentName("clickable");
else {textBoxLong.removeStyleDependentName("disabled");textBoxLat.removeStyleDependentName("disabled");viewOnMap.removeStyleDependentName("clickable");
if (clickable&&getValue()!=null)thisBehavior.addressAction(textBoxLong.getText()+";"+textBoxLat.getText());
if (textBoxLong.getValue()==null||textBoxLat.getValue()==null){if (value!=null){value.setLongitude(null);value.setLatitude(null);
else {if (value!=null){value.setLongitude(textBoxLong.getValue());value.setLatitude(textBoxLat.getValue());
else returnvalue;
if theboxvalueisnull*@returnprivatebooleanisNull(){if (value!=null){if (value.getLongitude()==null&&value.getLatitude()==null)returntrue;
else returnfalse;
else returntrue;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailCommandeIntrantDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailCommandeIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailCommandeIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeIntrant(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedDetailCommandeIntrantReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listDetailCommandeIntrant(start,numRows,"modif ied",false,filterCriteria);
else result=request.getDetailCommandeIntrantEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailCommandeIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailCommandeIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeIntrant(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedDetailCommandeIntrantReverse(start,numRows,"modif ied",false,property);
else result=request.listDetailCommandeIntrant(start,numRows,"modif ied",false);
if (isFiltered){result.with("intrant");
else {result.with("intrant");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailCommandeIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listDetailCommandeIntrant(start,numRows,property,asc,filterCriteria);
else result=request.getDetailCommandeIntrantEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailCommandeIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listDetailCommandeIntrant(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeIntrant(property,searchCriterions);
else returnrequest.countNonAffectedDetailCommandeIntrantReverse(property,searchCriterions);
else returnrequest.countDetailCommandeIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeIntrant(property,filterCriteria);
else returnrequest.countNonAffectedDetailCommandeIntrantReverse(property,filterCriteria);
else returnrequest.countDetailCommandeIntrant(filterCriteria);
else returnrequest.countNonAffectedDetailCommandeIntrant("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeIntrant(property,searchCriterions);
else returnrequest.countNonAffectedDetailCommandeIntrantReverse(property,searchCriterions);
else returnrequest.countDetailCommandeIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeIntrant(property);
else returnrequest.countNonAffectedDetailCommandeIntrantReverse(property);
else returnrequest.countDetailCommandeIntrant();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailCommandeIntrantRequestrequest=(DetailCommandeIntrantRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxyintrant_identif iantCrit=request.create(BasicCriteriaProxy.class);intrant_identif iantCrit.setField("intrant.identif iant");intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);intrant_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(intrant_identif iantCrit);//SearchfieldQuantiteRequisetry{Integer.valueOf(text);BasicCriteriaProxyquantiteRequiseCrit=request.create(BasicCriteriaProxy.class);quantiteRequiseCrit.setField("quantiteRequise");quantiteRequiseCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);quantiteRequiseCrit.setValue(text);buffer.append("("+NLS.constants().detailCommandeIntrant_field_quantiteRequise()+":"+text+")"+SYMBOL_OR+"");criterionList.add(quantiteRequiseCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (handler==null)initHandler();returnhandler.getById(id);
if (EpicamIconConstants.DETAILRECEPTIONINTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRECEPTIONINTRANT_ICON);DetailReceptionIntrantDataProviderprovider=newDetailReceptionIntrantDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailReceptionIntrant()&&AccessManager.canEditDetailReceptionIntrant())listComposite=newDetailReceptionIntrantDynaTable(requestFactory,provider,true);
else listComposite=newDetailReceptionIntrantDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (handler==null)initHandler();returnhandler.getById(id);
if therelationfieldbuttonsshallbehiddenpublicExamenMicroscopieEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlaboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLaboratoireReference()&&AccessManager.canEditLaboratoireReference())laboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get());
else laboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(false,laboratoireReferenceDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencasTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())casTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get());
else casTb=newImogSingleRelationBox<CasTuberculoseProxy>(false,casTbDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);laboratoireReference.setEdited(isEdited);casTb.setEdited(isEdited);date.setEdited(isEdited);raisonDepistage.setEdited(isEdited);resultat.setEdited(isEdited);observations.setEdited(isEdited);
if (!AccessManager.canReadExamenMicroscopieCentreExamen())centreExamenSection.setVisible(false);
if (!AccessManager.canReadExamenMicroscopieExamen())examenSection.setVisible(false);
if (!AccessManager.canEditExamenMicroscopieCentreExamen())centreExamenSection.setVisible(false);
if (!AccessManager.canEditExamenMicroscopieExamen())examenSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){laboratoireReference.setLocked(isLocked);laboratoireReference.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){casTb.setLocked(isLocked);casTb.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (laboratoireReference.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LaboratoireReferenceFormPanelform=newLaboratoireReferenceFormPanel(requestFactory,laboratoireReference.getValue().getId(),relationPopup,"laboratoireReference");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("laboratoireReference"))laboratoireReference.setValue(value,true);
if (casTb.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,casTb.getValue().getId(),relationPopup,"casTb");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("casTb"))casTb.setValue(value,true);
if (casTb.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"casTb");//dateisarequiredfield
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//raisonDepistageisarequiredfield
if (raisonDepistage.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"raisonDepistage");//resultatisarequiredfield
if (resultat.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"resultat");
if (errors!=null&&errors.size()>0){List<EditorError>casTbFieldErrors=newArrayList<EditorError>();List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>raisonDepistageFieldErrors=newArrayList<EditorError>();List<EditorError>resultatFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("casTb"))casTbFieldErrors.add(error);
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("raisonDepistage"))raisonDepistageFieldErrors.add(error);
if (field.equals("resultat"))resultatFieldErrors.add(error);
if (casTbFieldErrors.size()>0)casTb.showErrors(casTbFieldErrors);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (raisonDepistageFieldErrors.size()>0)raisonDepistage.showErrors(raisonDepistageFieldErrors);
if (resultatFieldErrors.size()>0)resultat.showErrors(resultatFieldErrors);
if theBooleanshallbestrict*(displaysonly'yes'and'no'options,hidesthe'unknown'option)*@paramisStricttruetosettheBooleanBoxasstrictpublicvoidisStrict(booleanisStrict){//booleanBox.isStrict(isStrict);
if (parent!=null){editor=newPriseMedicamenteuseEditor(factory,true);this.initField=initField;
else editor=newPriseMedicamenteuseEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().priseMedicamenteuse_create_title());createDriver();createNewPriseMedicamenteuse();this.setContent(editor);
if (parent!=null){editor=newPriseMedicamenteuseEditor(factory,true);this.initField=initField;
else editor=newPriseMedicamenteuseEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchPriseMedicamenteuse(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditPriseMedicamenteuse())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("PriseMedicamenteuseformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewPriseMedicamenteuseEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseIntensive(CasTuberculoseProxyvalue,booleanisLocked){editor.setPhaseIntensive(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseContinuation(CasTuberculoseProxyvalue,booleanisLocked){editor.setPhaseContinuation(value,isLocked);
if (AccessManager.canReadPersonnelIdentif ication()){Column<PersonnelProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().personnel_field_s_nom());
if (AccessManager.canReadPersonnelIdentif ication()){Column<PersonnelProxy,String>dateNaissanceColumn=newDateNaissanceColumn();dateNaissanceColumn.setSortable(true);table.addColumn(dateNaissanceColumn,NLS.constants().personnel_field_s_dateNaissance());
if (AccessManager.canReadPersonnelSituation()){Column<PersonnelProxy,String>dateArriveeColumn=newDateArriveeColumn();dateArriveeColumn.setSortable(true);table.addColumn(dateArriveeColumn,NLS.constants().personnel_field_s_dateArrivee());
if (AccessManager.canReadPersonnelSituation()){Column<PersonnelProxy,String>dateDepartColumn=newDateDepartColumn();dateDepartColumn.setSortable(true);table.addColumn(dateDepartColumn,NLS.constants().personnel_field_s_dateDepart());
if (AccessManager.canReadPersonnelNiveauAccess()){Column<PersonnelProxy,String>niveauColumn=newNiveauColumn();niveauColumn.setSortable(true);table.addColumn(niveauColumn,NLS.constants().personnel_field_s_niveau());
if (AccessManager.canReadPersonnelNiveauAccess()){Column<PersonnelProxy,String>actif Column=newActif Column();actif Column.setSortable(true);table.addColumn(actif Column,NLS.constants().personnel_field_s_actif ());
if (ProfileUtil.isAdmin()){Column<PersonnelProxy,String>loginColumn=newLoginColumn();loginColumn.setSortable(true);table.addColumn(loginColumn,AdminNLS.constants().imogActor_field_s_login());
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/personnel/",true);
else returnnull;
if (AccessManager.canDeletePersonnel()&&AccessManager.canEditPersonnel()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeletePersonnel()&&AccessManager.canEditPersonnel()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<PersonnelProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().personnel_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(PersonnelProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getPersonnelRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedPersonnelentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListPersonnelEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.PERS_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=personnel_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (object!=null){
if (object.getDateNaissance()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateNaissance());
if (object!=null){
if (object.getDateArrivee()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateArrivee());
if (object!=null){
if (object.getDateDepart()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDepart());
if (object!=null){
if (object.getNiveau()==null)value="";
else value=renderer.getEnumDisplayValue(PersonnelProxy.class,"niveau",object.getNiveau());
if (object!=null){
if (object.getActif ()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getActif ());
if (object.getLogin()==null)value="";
else value=object.getLogin();returnvalue;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicRavitaillementDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRavitaillement(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedRavitaillementReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listRavitaillement(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRavitaillement(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listNonAffectedRavitaillementReverse(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listRavitaillement(start,numRows,"dateDepart",false,filterCriteria);
else result=request.getRavitaillementEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRavitaillement(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedRavitaillementReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listRavitaillement(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRavitaillement(start,numRows,"dateDepart",false,property);
else result=request.listNonAffectedRavitaillementReverse(start,numRows,"dateDepart",false,property);
else result=request.listRavitaillement(start,numRows,"dateDepart",false);
if (isFiltered){result.with("CDTDepart");result.with("CDTArrivee");
else {result.with("CDTDepart");result.with("CDTArrivee");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listRavitaillement(start,numRows,property,asc,searchCriterions);
else result=request.listRavitaillement(start,numRows,property,asc,filterCriteria);
else result=request.getRavitaillementEmptyList();
else {
if (searchCriterions!=null)result=request.listRavitaillement(start,numRows,property,asc,searchCriterions);
else result=request.listRavitaillement(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRavitaillement(property,searchCriterions);
else returnrequest.countNonAffectedRavitaillementReverse(property,searchCriterions);
else returnrequest.countRavitaillement(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRavitaillement(property,filterCriteria);
else returnrequest.countNonAffectedRavitaillementReverse(property,filterCriteria);
else returnrequest.countRavitaillement(filterCriteria);
else returnrequest.countNonAffectedRavitaillement("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRavitaillement(property,searchCriterions);
else returnrequest.countNonAffectedRavitaillementReverse(property,searchCriterions);
else returnrequest.countRavitaillement(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRavitaillement(property);
else returnrequest.countNonAffectedRavitaillementReverse(property);
else returnrequest.countRavitaillement();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();RavitaillementRequestrequest=(RavitaillementRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycDTDepart_nomCrit=request.create(BasicCriteriaProxy.class);cDTDepart_nomCrit.setField("cDTDepart.nom");cDTDepart_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDTDepart_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDTDepart_nomCrit);//SearchfieldDateDeparttry{DateUtil.parseDate(text);BasicCriteriaProxydateDepartCrit=request.create(BasicCriteriaProxy.class);dateDepartCrit.setField("dateDepart");dateDepartCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateDepartCrit.setValue(text);buffer.append("("+NLS.constants().ravitaillement_field_dateDepart()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateDepartCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (edited&&!isLocked&&!hideOpenButton)showPopUpListBox();
if (edited)showPopUpListBox();
if (value!=null)textBox.setValue(beanRenderer.getDisplayValue(value));
else textBox.setValue("");setButtonVisibility();
if truenotif ychangespublicvoidsetValue(Tvalue,booleannotif yChange){setValue(value);
if (notif yChange)ValueChangeEvent.fire(textBox,textBox.getValue());
if (!enabled||isLocked){textBox.addStyleDependentName("disabled");edited=false;
else {textBox.removeStyleDependentName("disabled");edited=true;
else updateBoxWith(boxwidth+12);
if (edited){
if (!isLocked){
if (!hideOpenButton)openIcon.setVisible(true);
if (value==null||hideClearButton)clearImage.setVisible(false);
else clearImage.setVisible(true);
else {openIcon.setVisible(false);clearImage.setVisible(false);
else {openIcon.setVisible(false);clearImage.setVisible(false);
if (value==null||hideButtons)viewImage.setVisible(false);
else viewImage.setVisible(true);
if theopenbuttonshallbehiddenineditmodedefaultisfalse*@paramhideOpenButtonpublicvoidsetHideOpenButton(booleanhideOpenButton){this.hideOpenButton=hideOpenButton;
if (handler==null)initHandler();returnhandler.getById(id);
if (ProfileUtil.isAdmin()){RowStyles<T>deletedEntityStyle=newRowStyles<T>(){@OverridepublicStringgetStyleNames(Trow,introwIndex){
if (row!=null&&row.getDeleted()!=null)return"dataGridDeletedRow";returnnull;
if (checkBoxesVisible){Column<T,Boolean>checkColumn=newCheckColumn();CheckHeadercheckHeader=newCheckHeader();checkHeader.setUpdater(newValueUpdater<Boolean>(){@Overridepublicvoidupdate(Booleanvalue){for(Titem:table.getVisibleItems())selectionModel.setSelected(item,value);
if (value==null){return;
if (getViewEvent(value)!=null)requestFactory.getEventBus().fireEvent(getViewEvent(value));
if (e.isNorth()){
if (pager.hasPreviousPage())pager.previousPage();
else {
if (pager.hasNextPage())pager.nextPage();
if (message!=null){LocalSession.get().setSearchCriterions(beanDataProvider.getSearchCriterions(),message);requestFactory.getEventBus().fireEvent(newIsTableFilteredEvent(true,message));
else requestFactory.getEventBus().fireEvent(newIsTableFilteredEvent(false,null));
if (criterionsinstanceofImogConjunctionProxy){ImogConjunctionProxyconj=(ImogConjunctionProxy)criterions;List<ImogCriterionProxy>secondLevelCrits=conj.getCriterions();
if (secondLevelCrits!=null){for(ImogCriterionProxysecondLevelCrit:secondLevelCrits){
if (secondLevelCritinstanceofBasicCriteriaProxy){BasicCriteriaProxycrit=(BasicCriteriaProxy)secondLevelCrit;
if (crit.getOperation().equals(CriteriaConstants.DATE_OPERATOR_BEFORE))result.append("&"+crit.getField().replace(".","_")+"Before="+crit.getValue());
else 
if (crit.getOperation().equals(CriteriaConstants.DATE_OPERATOR_AFTER))result.append("&"+crit.getField().replace(".","_")+"After="+crit.getValue());
else result.append("&"+crit.getField().replace(".","_")+"="+crit.getValue());
if (type.equals("click")){Tvalue=event.getValue();
if (checkBoxesVisible){
if (event.getColumn()>0)viewSelection(value);
else {viewSelection(value);
if (oldScrollPos>lastScrollPos){//Scrollingup
if (lastScrollPos>0&&lastScrollPos<=20){//Wearenearthestart,sopreviouspage.
if (pager.hasPreviousPage())pager.previousPage();
else {////Scrollingdown//intmaxScrollBottom=scrollable.getWidget().getOffsetHeight()-scrollable.getOffsetHeight();//
if (lastScrollPos>=maxScrollBottom){////Weareneartheend,sonextpage.//
if (pager.hasNextPage())//pager.nextPage();//
if thetableshallrefreshitselfautomatically*@paramautorefreshtrue
if thetableshallrefreshitselfautomatically*@parammilliseconstherefreshperiodinmillisecondspublicvoidsetAutoRefresh(booleanautorefresh,intmillisecons){
if (autorefresh){closeTimer();refreshTimer=newTimer(){publicvoidrun(){table.setVisibleRangeAndClearData(newRange(0,itemByPage),true);
else {closeTimer();
if thetableshallrefreshitselfautomatically*@paramautorefreshtrue
if thetableshallrefreshitselfautomaticallypublicvoidsetAutoRefresh(booleanautorefresh){setAutoRefresh(autorefresh,30000);
if ithasbeensetprivatevoidcloseTimer(){
if (refreshTimer!=null){refreshTimer.cancel();refreshTimer=null;
if (!selectionModel.isSelected(item))returnfalse;
if (count!=null){updateRowCount(count.intValue(),true);pager.setTotalNbOfRows(count.intValue());updateTable(display);
if (sortProperty.isEmpty())request=beanDataProvider.getList(getDefaultSortProperty(),start,itemByPage,getDefaultSortPropertyOrder());
else {
if (newSort)request=beanDataProvider.getList(sortProperty,0,itemByPage,ascSort);
else request=beanDataProvider.getList(sortProperty,start,itemByPage,ascSort);
if (sortList!=null&&sortList.size()>0){@SuppressWarnings("unchecked")ImogColumn<T,String>sortColumn=(ImogColumn<T,String>)sortList.get(0).getColumn();StringnewSortProperty=sortColumn.getPropertyName();
if (newSortProperty.equals(sortProperty)){newSort=false;
if (lastFetch==start)//notpagination,changingorderofsortingascSort=!ascSort;
else {newSort=true;sortProperty=newSortProperty;ascSort=true;
if (initField==null)handler.saveRavitaillement(value);
else handler.saveRavitaillement(value,initField);
if (ProfileUtil.isAdmin())listComposite=newNotif icationDynaTable(requestFactory,provider,true);
else listComposite=newNotif icationDynaTable(requestFactory,provider,false);wrapperPanel.setChild(listComposite);wrapperPanel.setTitle(AdminNLS.constants().notif ication_table_text());wrapperPanel.setIcon(AdminIconConstants.NOTif ICATION_ICON);configureWrapperPanelForTable(requestFactory.getEventBus(),listComposite,formTypeUtil);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportButton!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(eventBus,BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportButton!=null)plusButton.addPopupPanelContent(exportButton);wrapperPanel.addHeaderWidget(plusButton);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newMedicamentEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newMedicamentEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newMedicamentEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newMedicamentEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.MEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.MEDICAMENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailReceptionMedicamentProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailReceptionMedicamentEditorNestedRow>editors=editor.getEditors();DetailReceptionMedicamentEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);subEditor.setCommande(currentCommande,true);subEditor.setCDT(currentCdt,true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.setCommande(value,true);
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.setCDT(value,true);
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailReceptionMedicamentEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailReceptionMedicamentProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (uploader.getEntity()!=null){thisValue=uploader.getEntity();
if (value!=null&&value.getId()!=null){setThumbnail(value.getId());setDownloadLink(value.getId());
if (value!=thisValue)setBinaryMetadata(value.getId());
if (editable){infoPanel.setVisible(false);editPanel.setVisible(true);//main.remove(infoPanel);//main.add(editPanel);
else {infoPanel.setVisible(true);editPanel.setVisible(false);//main.remove(editPanel);//main.add(infoPanel);
if (searchText==null)handler.listCandidatureFormation();
else handler.listCandidatureFormation(searchText);
if (dateBeforeBox.getValue()!=null){FilterCriteriadateBeforeCrit=newFilterCriteria();dateBeforeCrit.setField("date");dateBeforeCrit.setFieldDisplayName(NLS.constants().examenMicroscopie_field_date()+BaseNLS.constants().search_operator_inferior());dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateBeforeCrit.setValue(DateUtil.getDate(dateBeforeBox.getValue()));dateBeforeCrit.setValueDisplayName(DateUtil.getDate(dateBeforeBox.getValue()));criteria.add(dateBeforeCrit);
if (dateAfterBox.getValue()!=null){FilterCriteriadateAfterCrit=newFilterCriteria();dateAfterCrit.setField("date");dateAfterCrit.setFieldDisplayName(NLS.constants().examenMicroscopie_field_date()+BaseNLS.constants().search_operator_superior());dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateAfterCrit.setValue(DateUtil.getDate(dateAfterBox.getValue()));dateAfterCrit.setValueDisplayName(DateUtil.getDate(dateAfterBox.getValue()));criteria.add(dateAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())castb_patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())castb_patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadExamenMicroscopieExamen()){dateBeforeFilterBox.setVisible(false);dateAfterFilterBox.setVisible(false);
if (!AccessManager.canReadExamenMicroscopieExamen())raisonDepistageFilterBox.setVisible(false);
if (!AccessManager.canReadExamenMicroscopieExamen())resultatFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (actor!=null){returnsetSessionUser(actor);
if (parent!=null){editor=newRapportEditor(factory,true);
else editor=newRapportEditor(factory);isNew=true;setEditable(true);setTitle(BaseNLS.constants().rapport_create_title());createNewRapport();this.setContent(editor);
if (parent!=null){editor=newRapportEditor(factory,true);
else editor=newRapportEditor(factory);setModif iable(false);isNew=false;setEditable(false);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canExportPatient()&&editor.validateFields()){//Stringurl="";////récupérationdesinformationsdepuisl'interface//StringdateDebut=editor.getDate_debut();//StringdateFin=editor.getDate_fin();//StringtypeRapport=editor.getTypeRapport();////if (typeRapport.equals("registretb")||typeRapport.equals("tbregister")){//url=GWT.getHostPageBaseURL()+"registreTB.pdf?ReportName=registreTB&loc=fr&ReportFormat=pdf&cdt="+"\"jamot\"&"+"initPeriode="+dateDebut.toString()+"&"+"endPeriode="+dateFin.toString();////
if (parent!=null)parent.hide();
else {requestFactory.getEventBus().fireEvent(closeEvent);
if (AccessManager.canReadLieuDitDescription()){Column<LieuDitProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().lieuDit_field_s_nom());
if (AccessManager.canCreateLieuDit()&&AccessManager.canEditLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/lieudit/",true);
else returnnull;
if (AccessManager.canDeleteLieuDit()&&AccessManager.canEditLieuDit()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteLieuDit()&&AccessManager.canEditLieuDit()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<LieuDitProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().lieuDit_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(LieuDitProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getLieuDitRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedLieuDitentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListLieuDitEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.LD_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=lieuDit_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (initField==null)handler.saveDetailInventaire(value);
else handler.saveDetailInventaire(value,initField);
if (parent==null){returnnewVector<CentreDiagTrait>();
if (parent==null){returnnewVector<LieuDit>();
if (property==null){property="modif ied";
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if therelationfieldbuttonsshallbehiddenpublicNotif icationEditor(AdminRequestFactoryfactory,booleanhideButtons,FormTypeUtilformTypeUtil,ImogBeanRendererrenderer){this.requestFactory=factory;//this.hideButtons=hideButtons;this.formTypeUtil=formTypeUtil;this.renderer=renderer;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenactorRecipients=newImogMultiRelationBox<ImogActorProxy>(actorRecipientsDataProvider,renderer,true);//
else {//inwrapperpanel,relationbuttonsenabled//actorRecipients=newImogMultiRelationBox<ImogActorProxy>(//false,actorRecipientsDataProvider,//AdminRenderer.get(),null);//
if (hideButtons)//inpopup,relationbuttonshidden//
else {//inwrapperpanel,relationbuttonsenabled//roleRecipients=newImogMultiRelationBox<ImogRoleProxy>(false,//roleRecipientsDataProvider,AdminRenderer.get(),null);//
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();name.setEdited(isEdited);method.setEdited(isEdited);formType.setEdited(isEdited);operation.setEdited(isEdited);title.setEdited(isEdited);message.setEdited(isEdited);actorRecipients.setEdited(isEdited);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (!ProfileUtil.isAdmin())recipientsSection.setVisible(false);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (!ProfileUtil.isAdmin())recipientsSection.setVisible(false);
if (!actorRecipients.isEmpty()//&&actorRecipients.getSelectedEntities().size()>0){////ImogActorProxyvalue=actorRecipients//.getSelectedEntities().get(0);//RelationPopupPanelrelationPopup=newRelationPopupPanel();//AppliUserFormPanelform=newAppliUserFormPanel(//requestFactory,value.getId(),relationPopup,//"actorRecipients",false);//relationPopup.addWidget(form);//relationPopup.show();//
if (!roleRecipients.isEmpty()//&&roleRecipients.getSelectedEntities().size()>0){////ImogRoleProxyvalue=roleRecipients.getSelectedEntities()//.get(0);//RelationPopupPanelrelationPopup=newRelationPopupPanel();//ImogRoleFormPanelform=newImogRoleFormPanel(//requestFactory,value.getId(),relationPopup,//"roleRecipients",false);//relationPopup.addWidget(form);//relationPopup.show();//
if (!enabled){textBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");
if theenteredvalueisavalidInteger*@returnpublicbooleanisValid(){returnisValid;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCommandeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCommandeEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newCommandeEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newCommandeEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCommandeEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.COMMANDE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.COMMANDE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCommandeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if (initField==null)handler.saveReception(value);
else handler.saveReception(value,initField);
if (entity.getRegime()!=null){bck.setRegime(entity.getRegime().getId());
if (entity.getMedicament()!=null){bck.setMedicament(entity.getMedicament().getId());
if (searchText==null)handler.listRavitaillement();
else handler.listRavitaillement(searchText);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(EntityProfileEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(EntityProfileEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (chkValue!=null)setBoxesValues(chkValue,CREATE);
if (chkValue!=null)setBoxesValues(chkValue,DELETE);
if (chkValue!=null)setBoxesValues(chkValue,DIRECTACCESS);
if (chkValue!=null)setBoxesValues(chkValue,EXPORT);
if (editors!=null&&editors.size()>0){for(EntityProfileEditorNestedRowsubEditor:editors){
if (type.equals(CREATE))subEditor.setCreateBoxValue(value);
else 
if (type.equals(DELETE))subEditor.setDeleteBoxValue(value);
else 
if (type.equals(DIRECTACCESS))subEditor.setDirectAccessBoxValue(value);
else 
if (type.equals(EXPORT))subEditor.setExportBoxValue(value);
if (editors!=null&&editors.size()>0){for(EntityProfileEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (parent==null){returnnewVector<Qualif ication>();
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicSortieLotDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSortieLot(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedSortieLotReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listSortieLot(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSortieLot(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedSortieLotReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listSortieLot(start,numRows,"modif ied",false,filterCriteria);
else result=request.getSortieLotEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSortieLot(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedSortieLotReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listSortieLot(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSortieLot(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedSortieLotReverse(start,numRows,"modif ied",false,property);
else result=request.listSortieLot(start,numRows,"modif ied",false);
if (isFiltered){result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
else {result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listSortieLot(start,numRows,property,asc,searchCriterions);
else result=request.listSortieLot(start,numRows,property,asc,filterCriteria);
else result=request.getSortieLotEmptyList();
else {
if (searchCriterions!=null)result=request.listSortieLot(start,numRows,property,asc,searchCriterions);
else result=request.listSortieLot(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSortieLot(property,searchCriterions);
else returnrequest.countNonAffectedSortieLotReverse(property,searchCriterions);
else returnrequest.countSortieLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSortieLot(property,filterCriteria);
else returnrequest.countNonAffectedSortieLotReverse(property,filterCriteria);
else returnrequest.countSortieLot(filterCriteria);
else returnrequest.countNonAffectedSortieLot("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSortieLot(property,searchCriterions);
else returnrequest.countNonAffectedSortieLotReverse(property,searchCriterions);
else returnrequest.countSortieLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSortieLot(property);
else returnrequest.countNonAffectedSortieLotReverse(property);
else returnrequest.countSortieLot();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();SortieLotRequestrequest=(SortieLotRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNumeroBasicCriteriaProxylot_numeroCrit=request.create(BasicCriteriaProxy.class);lot_numeroCrit.setField("lot.numero");lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_numeroCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_numero()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_numeroCrit);//SearchfieldIdentif iantBasicCriteriaProxylot_intrant_identif iantCrit=request.create(BasicCriteriaProxy.class);lot_intrant_identif iantCrit.setField("lot.intrant.identif iant");lot_intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_intrant_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_intrant_identif iantCrit);//SearchfieldDesignationBasicCriteriaProxylot_medicament_designationCrit=request.create(BasicCriteriaProxy.class);lot_medicament_designationCrit.setField("lot.medicament.designation");lot_medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_medicament_designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_medicament_designationCrit);//SearchfieldQuantitetry{Integer.valueOf(text);BasicCriteriaProxylot_quantiteCrit=request.create(BasicCriteriaProxy.class);lot_quantiteCrit.setField("lot.quantite");lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);lot_quantiteCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_quantite()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_quantiteCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (lot_quantiteBox.getValue()==null)lot_quantiteCrit.setValue(null);
else lot_quantiteCrit.setValue(String.valueOf(lot_quantiteBox.getValue()));lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_quantiteBox.getValue()));criteria.add(lot_quantiteCrit);FilterCriteriaquantiteTheoriqueCrit=newFilterCriteria();quantiteTheoriqueCrit.setField("quantiteTheorique");quantiteTheoriqueCrit.setFieldDisplayName(NLS.constants().detailInventaire_field_quantiteTheorique());quantiteTheoriqueCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteTheoriqueBox.getValue()==null)quantiteTheoriqueCrit.setValue(null);
else quantiteTheoriqueCrit.setValue(String.valueOf(quantiteTheoriqueBox.getValue()));quantiteTheoriqueCrit.setValueDisplayName(String.valueOf(quantiteTheoriqueBox.getValue()));criteria.add(quantiteTheoriqueCrit);FilterCriteriaquantiteReelleCrit=newFilterCriteria();quantiteReelleCrit.setField("quantiteReelle");quantiteReelleCrit.setFieldDisplayName(NLS.constants().detailInventaire_field_quantiteReelle());quantiteReelleCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteReelleBox.getValue()==null)quantiteReelleCrit.setValue(null);
else quantiteReelleCrit.setValue(String.valueOf(quantiteReelleBox.getValue()));quantiteReelleCrit.setValueDisplayName(String.valueOf(quantiteReelleBox.getValue()));criteria.add(quantiteReelleCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLotDescription())lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteTheoriqueFilterBox.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteReelleFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (initField==null)handler.saveCasTuberculose(value);
else handler.saveCasTuberculose(value,initField);
if (!ProfileUtil.isAdmin()){nameFilterBox.setVisible(false);formTypeFilterBox.setVisible(false);methodFilterBox.setVisible(false);operationFilterBox.setVisible(false);
if (parent!=null){editor=newSmsPredefiniEditor(factory,true);this.initField=initField;
else editor=newSmsPredefiniEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().smsPredefini_create_title());createDriver();createNewSmsPredefini();this.setContent(editor);
if (parent!=null){editor=newSmsPredefiniEditor(factory,true);this.initField=initField;
else editor=newSmsPredefiniEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchSmsPredefini(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getObjet()==null){LocalizedTextProxynewObjet=request.create(LocalizedTextProxy.class);current.setObjet(newObjet);
if (current.getMessage()==null){LocalizedTextProxynewMessage=request.create(LocalizedTextProxy.class);current.setMessage(newMessage);
if (AccessManager.canEditSmsPredefini())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("SmsPredefinif ormnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewSmsPredefiniEvent(current.getId(),closeEvent));
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<PriseMedicamentRegimeProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<PriseMedicamentRegimeEditorNestedRow>editors=editor.getEditors();PriseMedicamentRegimeEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(PriseMedicamentRegimeEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(PriseMedicamentRegimeEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(PriseMedicamentRegimeEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(PriseMedicamentRegimeEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){PriseMedicamentRegimeProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Receptionentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedmedicamentsList<DetailReceptionMedicament>recaf=entity.getMedicaments();
if (recaf!=null){for(DetailReceptionMedicamentrecafItem:recaf){handlerHelper.prepare(recafItem);//managerelatedentreeLotEntreeLotdet_rec_medad=recafItem.getEntreeLot();
if (det_rec_medad!=null){handlerHelper.prepare(det_rec_medad);
if (recag!=null){for(DetailReceptionIntrantrecagItem:recag){handlerHelper.prepare(recagItem);//managerelatedentreeLotEntreeLotdet_rec_intad=recagItem.getEntreeLot();
if (det_rec_intad!=null){handlerHelper.prepare(det_rec_intad);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Reception>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Reception>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Reception>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Receptionentity:entities)delete(entity);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (commande_cDT_nom!=null&&!commande_cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("commande.cDT.nom");criteria.setValue(commande_cDT_nom);junction.add(criteria);
if (commande_dateBefore!=null&&!commande_dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("commande.date");criteria.setValue(commande_dateBefore);junction.add(criteria);
if (commande_dateAfter!=null&&!commande_dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("commande.date");criteria.setValue(commande_dateAfter);junction.add(criteria);
if (dateReceptionBefore!=null&&!dateReceptionBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateReception");criteria.setValue(dateReceptionBefore);junction.add(criteria);
if (dateReceptionAfter!=null&&!dateReceptionAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateReception");criteria.setValue(dateReceptionAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (handler==null)initHandler();returnhandler.getById(id);
if therelationfieldbuttonsshallbehiddenpublicLaboratoireReferenceEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();nom=newImogLocalizedTextBox(locales,NLS.constants().locale());description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLieuDit()&&AccessManager.canEditLieuDit())lieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),null);
else lieuxDits=newImogMultiRelationBox<LieuDitProxy>(false,lieuxDitsDataProvider,EpicamRenderer.get(),null);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();nom.setEdited(isEdited);nature.setEdited(isEdited);description.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);coordonnees.setEdited(isEdited);lieuxDits.setEdited(isEdited);
if (!AccessManager.canReadLaboratoireReferenceDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadLaboratoireReferenceAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditLaboratoireReferenceDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditLaboratoireReferenceAdresse())adresseSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSante.hideButtons(true);districtSanteDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (!lieuxDits.isEmpty()&&lieuxDits.getSelectedEntities().size()>0){LieuDitProxyvalue=lieuxDits.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();LieuDitFormPanelform=newLieuDitFormPanel(requestFactory,value.getId(),relationPopup,"lieuxDits");relationPopup.addWidget(form);relationPopup.show();
if (!lieuxDits.isPresent(value))lieuxDits.addValue(value);
if (initField.equals("lieuxDits")){
if (lieuxDits.isPresent(value))lieuxDits.replaceValue(value);
else lieuxDits.addValue(value,true);
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");//natureisarequiredfield
if (nature.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nature");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");
if (errors!=null&&errors.size()>0){List<EditorError>nomFieldErrors=newArrayList<EditorError>();List<EditorError>natureFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("nature"))natureFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (natureFieldErrors.size()>0)nature.showErrors(natureFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicQualif icationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newQualif icationEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newQualif icationEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newQualif icationEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newQualif icationEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.QUALif ICATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.QUALif ICATION_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicQualif icationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,false*otherwisepublicRapportFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newRapportEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newRapportEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newRapportEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newRapportEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicRapportFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (handler==null)initHandler();returnhandler.getById(id);
if (initField==null)handler.saveSortieLot(value);
else handler.saveSortieLot(value,initField);
if (initField==null)handler.saveIntrant(value);
else handler.saveIntrant(value,initField);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicCentreDiagTraitDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCentreDiagTrait(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedCentreDiagTraitReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listCentreDiagTrait(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCentreDiagTrait(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedCentreDiagTraitReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listCentreDiagTrait(start,numRows,"nom",true,filterCriteria);
else result=request.getCentreDiagTraitEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCentreDiagTrait(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedCentreDiagTraitReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listCentreDiagTrait(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCentreDiagTrait(start,numRows,"nom",true,property);
else result=request.listNonAffectedCentreDiagTraitReverse(start,numRows,"nom",true,property);
else result=request.listCentreDiagTrait(start,numRows,"nom",true);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listCentreDiagTrait(start,numRows,property,asc,searchCriterions);
else result=request.listCentreDiagTrait(start,numRows,property,asc,filterCriteria);
else result=request.getCentreDiagTraitEmptyList();
else {
if (searchCriterions!=null)result=request.listCentreDiagTrait(start,numRows,property,asc,searchCriterions);
else result=request.listCentreDiagTrait(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCentreDiagTrait(property,searchCriterions);
else returnrequest.countNonAffectedCentreDiagTraitReverse(property,searchCriterions);
else returnrequest.countCentreDiagTrait(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCentreDiagTrait(property,filterCriteria);
else returnrequest.countNonAffectedCentreDiagTraitReverse(property,filterCriteria);
else returnrequest.countCentreDiagTrait(filterCriteria);
else returnrequest.countNonAffectedCentreDiagTrait("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCentreDiagTrait(property,searchCriterions);
else returnrequest.countNonAffectedCentreDiagTraitReverse(property,searchCriterions);
else returnrequest.countCentreDiagTrait(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCentreDiagTrait(property);
else returnrequest.countNonAffectedCentreDiagTraitReverse(property);
else returnrequest.countCentreDiagTrait();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();CentreDiagTraitRequestrequest=(CentreDiagTraitRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxyregion_nomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(text);buffer.append("("+NLS.constants().region_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(region_nomCrit);//SearchfieldNomBasicCriteriaProxydistrictSante_nomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))districtSante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtSante_nomCrit.setField("districtSante.nom.english");districtSante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtSante_nomCrit.setValue(text);buffer.append("("+NLS.constants().districtSante_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(districtSante_nomCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailRavitaillementProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailRavitaillementEditorNestedRow>editors=editor.getEditors();DetailRavitaillementEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);subEditor.setCDTEntrant(currentCdtEntrant,true);subEditor.setCDTSortant(currentCdtSortant,true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.setCDTEntrant(value,true);
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.setCDTSortant(value,true);
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailRavitaillementEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailRavitaillementProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (object==null)returntrue;try{Datelimit=DateUtil.parseDate(limitDate);
if (object.after(limit))returntrue;
else returnfalse;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicExamenBiologiqueDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenBiologique(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedExamenBiologiqueReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listExamenBiologique(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenBiologique(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedExamenBiologiqueReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listExamenBiologique(start,numRows,"modif ied",false,filterCriteria);
else result=request.getExamenBiologiqueEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenBiologique(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedExamenBiologiqueReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listExamenBiologique(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenBiologique(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedExamenBiologiqueReverse(start,numRows,"modif ied",false,property);
else result=request.listExamenBiologique(start,numRows,"modif ied",false);
if (isFiltered){result.with("patient");
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listExamenBiologique(start,numRows,property,asc,searchCriterions);
else result=request.listExamenBiologique(start,numRows,property,asc,filterCriteria);
else result=request.getExamenBiologiqueEmptyList();
else {
if (searchCriterions!=null)result=request.listExamenBiologique(start,numRows,property,asc,searchCriterions);
else result=request.listExamenBiologique(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenBiologique(property,searchCriterions);
else returnrequest.countNonAffectedExamenBiologiqueReverse(property,searchCriterions);
else returnrequest.countExamenBiologique(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenBiologique(property,filterCriteria);
else returnrequest.countNonAffectedExamenBiologiqueReverse(property,filterCriteria);
else returnrequest.countExamenBiologique(filterCriteria);
else returnrequest.countNonAffectedExamenBiologique("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenBiologique(property,searchCriterions);
else returnrequest.countNonAffectedExamenBiologiqueReverse(property,searchCriterions);
else returnrequest.countExamenBiologique(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenBiologique(property);
else returnrequest.countNonAffectedExamenBiologiqueReverse(property);
else returnrequest.countExamenBiologique();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ExamenBiologiqueRequestrequest=(ExamenBiologiqueRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxypatient_identif iantCrit=request.create(BasicCriteriaProxy.class);patient_identif iantCrit.setField("patient.identif iant");patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatient_nomCrit=request.create(BasicCriteriaProxy.class);patient_nomCrit.setField("patient.nom");patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxydateCrit=request.create(BasicCriteriaProxy.class);dateCrit.setField("date");dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateCrit.setValue(text);buffer.append("("+NLS.constants().examenBiologique_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicCasIndexDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasIndex(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedCasIndexReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listCasIndex(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasIndex(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedCasIndexReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listCasIndex(start,numRows,"modif ied",false,filterCriteria);
else result=request.getCasIndexEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasIndex(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedCasIndexReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listCasIndex(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasIndex(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedCasIndexReverse(start,numRows,"modif ied",false,property);
else result=request.listCasIndex(start,numRows,"modif ied",false);
if (isFiltered){result.with("patient");result.with("patientLie");
else {result.with("patient");result.with("patientLie");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listCasIndex(start,numRows,property,asc,searchCriterions);
else result=request.listCasIndex(start,numRows,property,asc,filterCriteria);
else result=request.getCasIndexEmptyList();
else {
if (searchCriterions!=null)result=request.listCasIndex(start,numRows,property,asc,searchCriterions);
else result=request.listCasIndex(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasIndex(property,searchCriterions);
else returnrequest.countNonAffectedCasIndexReverse(property,searchCriterions);
else returnrequest.countCasIndex(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasIndex(property,filterCriteria);
else returnrequest.countNonAffectedCasIndexReverse(property,filterCriteria);
else returnrequest.countCasIndex(filterCriteria);
else returnrequest.countNonAffectedCasIndex("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasIndex(property,searchCriterions);
else returnrequest.countNonAffectedCasIndexReverse(property,searchCriterions);
else returnrequest.countCasIndex(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasIndex(property);
else returnrequest.countNonAffectedCasIndexReverse(property);
else returnrequest.countCasIndex();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();CasIndexRequestrequest=(CasIndexRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxypatient_identif iantCrit=request.create(BasicCriteriaProxy.class);patient_identif iantCrit.setField("patient.identif iant");patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatient_nomCrit=request.create(BasicCriteriaProxy.class);patient_nomCrit.setField("patient.nom");patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_nomCrit);//SearchfieldTypeRelationBasicCriteriaProxytypeRelationCrit=request.create(BasicCriteriaProxy.class);typeRelationCrit.setField("typeRelation");typeRelationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);typeRelationCrit.setValue(text);buffer.append("("+NLS.constants().casIndex_field_typeRelation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeRelationCrit);//SearchfieldIdentif iantBasicCriteriaProxypatientLie_identif iantCrit=request.create(BasicCriteriaProxy.class);patientLie_identif iantCrit.setField("patientLie.identif iant");patientLie_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patientLie_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patientLie_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatientLie_nomCrit=request.create(BasicCriteriaProxy.class);patientLie_nomCrit.setField("patientLie.nom");patientLie_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patientLie_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patientLie_nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (dateNaissanceBeforeBox.getValue()!=null){FilterCriteriadateNaissanceBeforeCrit=newFilterCriteria();dateNaissanceBeforeCrit.setField("dateNaissance");dateNaissanceBeforeCrit.setFieldDisplayName(NLS.constants().patient_field_dateNaissance()+BaseNLS.constants().search_operator_inferior());dateNaissanceBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateNaissanceBeforeCrit.setValue(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));dateNaissanceBeforeCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));criteria.add(dateNaissanceBeforeCrit);
if (dateNaissanceAfterBox.getValue()!=null){FilterCriteriadateNaissanceAfterCrit=newFilterCriteria();dateNaissanceAfterCrit.setField("dateNaissance");dateNaissanceAfterCrit.setFieldDisplayName(NLS.constants().patient_field_dateNaissance()+BaseNLS.constants().search_operator_superior());dateNaissanceAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateNaissanceAfterCrit.setValue(DateUtil.getDate(dateNaissanceAfterBox.getValue()));dateNaissanceAfterCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceAfterBox.getValue()));criteria.add(dateNaissanceAfterCrit);
if (ageBox.getValue()==null)ageCrit.setValue(null);
else ageCrit.setValue(String.valueOf(ageBox.getValue()));ageCrit.setValueDisplayName(String.valueOf(ageBox.getValue()));criteria.add(ageCrit);FilterCriteriasexeCrit=newFilterCriteria();sexeCrit.setField("sexe");sexeCrit.setFieldDisplayName(NLS.constants().patient_field_sexe());sexeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);sexeCrit.setValue(sexeBox.getValue(sexeBox.getSelectedIndex()));sexeCrit.setValueDisplayName(EpicamRenderer.get().getEnumDisplayValue(PatientProxy.class,"sexe",sexeBox.getValue(sexeBox.getSelectedIndex())));criteria.add(sexeCrit);FilterCriteriaprofessionCrit=newFilterCriteria();professionCrit.setField("profession");professionCrit.setFieldDisplayName(NLS.constants().patient_field_profession());professionCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);professionCrit.setValue(professionBox.getValue());professionCrit.setValueDisplayName(professionBox.getValue());criteria.add(professionCrit);FilterCriteriatelephoneUnCrit=newFilterCriteria();telephoneUnCrit.setField("telephoneUn");telephoneUnCrit.setFieldDisplayName(NLS.constants().patient_field_telephoneUn());telephoneUnCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);telephoneUnCrit.setValue(telephoneUnBox.getValue());telephoneUnCrit.setValueDisplayName(telephoneUnBox.getValue());criteria.add(telephoneUnCrit);FilterCriteriatelephoneDeuxCrit=newFilterCriteria();telephoneDeuxCrit.setField("telephoneDeux");telephoneDeuxCrit.setFieldDisplayName(NLS.constants().patient_field_telephoneDeux());telephoneDeuxCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);telephoneDeuxCrit.setValue(telephoneDeuxBox.getValue());telephoneDeuxCrit.setValueDisplayName(telephoneDeuxBox.getValue());criteria.add(telephoneDeuxCrit);FilterCriteriapacNomCrit=newFilterCriteria();pacNomCrit.setField("pacNom");pacNomCrit.setFieldDisplayName(NLS.constants().patient_field_pacNom());pacNomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);pacNomCrit.setValue(pacNomBox.getValue());pacNomCrit.setValueDisplayName(pacNomBox.getValue());criteria.add(pacNomCrit);FilterCriteriapacTelephoneUnCrit=newFilterCriteria();pacTelephoneUnCrit.setField("pacTelephoneUn");pacTelephoneUnCrit.setFieldDisplayName(NLS.constants().patient_field_pacTelephoneUn());pacTelephoneUnCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);pacTelephoneUnCrit.setValue(pacTelephoneUnBox.getValue());pacTelephoneUnCrit.setValueDisplayName(pacTelephoneUnBox.getValue());criteria.add(pacTelephoneUnCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())nomFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication()){dateNaissanceBeforeFilterBox.setVisible(false);dateNaissanceAfterFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())ageFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())sexeFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())professionFilterBox.setVisible(false);
if (!AccessManager.canReadPatientContact())telephoneUnFilterBox.setVisible(false);
if (!AccessManager.canReadPatientContact())telephoneDeuxFilterBox.setVisible(false);
if (!AccessManager.canReadPatientPersonneContact())pacNomFilterBox.setVisible(false);
if (!AccessManager.canReadPatientPersonneContact())pacTelephoneUnFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (searchText==null)handler.listDetailRavitaillement();
else handler.listDetailRavitaillement(searchText);
if (searchText==null)handler.listDynamicFieldTemplate();
else handler.listDynamicFieldTemplate(searchText);
if (parent!=null){editor=newDetailCommandeMedicamentEditor(factory,true);this.initField=initField;
else editor=newDetailCommandeMedicamentEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailCommandeMedicament_create_title());createDriver();createNewDetailCommandeMedicament();this.setContent(editor);
if (parent!=null){editor=newDetailCommandeMedicamentEditor(factory,true);this.initField=initField;
else editor=newDetailCommandeMedicamentEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailCommandeMedicament(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditDetailCommandeMedicament())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailCommandeMedicamentformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailCommandeMedicamentEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editor.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editor.setMedicament(value,isLocked);
if (EpicamIconConstants.DEPARTPERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DEPARTPERSONNEL_ICON);DepartPersonnelDataProviderprovider=newDepartPersonnelDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDepartPersonnel()&&AccessManager.canEditDepartPersonnel())listComposite=newDepartPersonnelDynaTable(requestFactory,provider,true);
else listComposite=newDepartPersonnelDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (searchText==null)handler.listReception();
else handler.listReception(searchText);
if (EpicamIconConstants.SORTIELOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.SORTIELOT_ICON);SortieLotDataProviderprovider=newSortieLotDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteSortieLot()&&AccessManager.canEditSortieLot())listComposite=newSortieLotDynaTable(requestFactory,provider,true);
else listComposite=newSortieLotDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (object==null)returntrue;return(object>=minValue);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DistrictSanteentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DistrictSante>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DistrictSante>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DistrictSante>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DistrictSanteentity:entities)delete(entity);
if (region_nom_francais!=null&&!region_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.francais");criteria.setValue(region_nom_francais);junction.add(criteria);
if (region_nom_english!=null&&!region_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.english");criteria.setValue(region_nom_english);junction.add(criteria);
if (nom_francais!=null&&!nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.francais");criteria.setValue(nom_francais);junction.add(criteria);
if (nom_english!=null&&!nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.english");criteria.setValue(nom_english);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (beaninstanceofCardEntityProxy)returngetDisplayValue((CardEntityProxy)bean);
else 
if (beaninstanceofFieldGroupProxy)returngetDisplayValue((FieldGroupProxy)bean);return"";
if (id.equals("patient")){returnNLS.constants().patient_name();
if (id.equals("casindex")){returnNLS.constants().casIndex_name();
if (id.equals("castuberculose")){returnNLS.constants().casTuberculose_name();
if (id.equals("examenserologie")){returnNLS.constants().examenSerologie_name();
if (id.equals("examenbiologique")){returnNLS.constants().examenBiologique_name();
if (id.equals("examenmicroscopie")){returnNLS.constants().examenMicroscopie_name();
if (id.equals("examenatb")){returnNLS.constants().examenATB_name();
if (id.equals("prisemedicamenteuse")){returnNLS.constants().priseMedicamenteuse_name();
if (id.equals("rendezvous")){returnNLS.constants().rendezVous_name();
if (id.equals("transfertreference")){returnNLS.constants().transfertReference_name();
if (id.equals("lot")){returnNLS.constants().lot_name();
if (id.equals("horsusage")){returnNLS.constants().horsUsage_name();
if (id.equals("entreelot")){returnNLS.constants().entreeLot_name();
if (id.equals("sortielot")){returnNLS.constants().sortieLot_name();
if (id.equals("commande")){returnNLS.constants().commande_name();
if (id.equals("detailcommandemedicament")){returnNLS.constants().detailCommandeMedicament_name();
if (id.equals("detailcommandeintrant")){returnNLS.constants().detailCommandeIntrant_name();
if (id.equals("reception")){returnNLS.constants().reception_name();
if (id.equals("detailreceptionmedicament")){returnNLS.constants().detailReceptionMedicament_name();
if (id.equals("detailreceptionintrant")){returnNLS.constants().detailReceptionIntrant_name();
if (id.equals("ravitaillement")){returnNLS.constants().ravitaillement_name();
if (id.equals("detailravitaillement")){returnNLS.constants().detailRavitaillement_name();
if (id.equals("inventaire")){returnNLS.constants().inventaire_name();
if (id.equals("detailinventaire")){returnNLS.constants().detailInventaire_name();
if (id.equals("personnel")){returnNLS.constants().personnel_name();
if (id.equals("departpersonnel")){returnNLS.constants().departPersonnel_name();
if (id.equals("arriveepersonnel")){returnNLS.constants().arriveePersonnel_name();
if (id.equals("region")){returnNLS.constants().region_name();
if (id.equals("districtsante")){returnNLS.constants().districtSante_name();
if (id.equals("centrediagtrait")){returnNLS.constants().centreDiagTrait_name();
if (id.equals("laboratoirereference")){returnNLS.constants().laboratoireReference_name();
if (id.equals("lieudit")){returnNLS.constants().lieuDit_name();
if (id.equals("regime")){returnNLS.constants().regime_name();
if (id.equals("prisemedicamentregime")){returnNLS.constants().priseMedicamentRegime_name();
if (id.equals("medicament")){returnNLS.constants().medicament_name();
if (id.equals("intrant")){returnNLS.constants().intrant_name();
if (id.equals("formation")){returnNLS.constants().formation_name();
if (id.equals("candidatureformation")){returnNLS.constants().candidatureFormation_name();
if (id.equals("qualif ication")){returnNLS.constants().qualif ication_name();
if (id.equals("tutoriel")){returnNLS.constants().tutoriel_name();
if (id.equals("smspredefini")){returnNLS.constants().smsPredefini_name();
if (id.equals("outbox")){returnNLS.constants().outBox_name();
if (id.equals("utilisateur")){returnNLS.constants().utilisateur_name();
if (id.equals("profile")){returnAdminNLS.constants().profile_name();
if (id.equals("entityProfile")){returnAdminNLS.constants().entityProfile_name();
if (id.equals("fieldGroupProfile")){returnAdminNLS.constants().fieldGroupProfile_name();
if (id.equals("cardEntity")){returnAdminNLS.constants().cardEntity_name();
if (id.equals("fieldGroup")){returnAdminNLS.constants().fieldGroup_name();
if (id.equals("notif ication")){returnAdminNLS.constants().notif ication_name();
if (id.equals("dynamicFieldTemplate")){returnDynFieldsNLS.constants().dynamicField_Template_name();
if (id.equals("dynamicFieldInstance")){returnDynFieldsNLS.constants().dynamicField_Instance_name();
if (id.equals("binary")){returnAdminNLS.constants().binary_name();
if (id.equals("defaultUser")){returnAdminNLS.constants().imogActor_name();
if (id.equals("patient.identif ication")){returnNLS.constants().patient_group_identif ication();
if (id.equals("patient.contact")){returnNLS.constants().patient_group_contact();
if (id.equals("patient.personnecontact")){returnNLS.constants().patient_group_personneContact();
if (id.equals("patient.tuberculose")){returnNLS.constants().patient_group_tuberculose();
if (id.equals("patient.examens")){returnNLS.constants().patient_group_examens();
if (id.equals("casindex.description")){returnNLS.constants().casIndex_group_description();
if (id.equals("castuberculose.informations")){returnNLS.constants().casTuberculose_group_informations();
if (id.equals("castuberculose.examen")){returnNLS.constants().casTuberculose_group_examen();
if (id.equals("castuberculose.traitement")){returnNLS.constants().casTuberculose_group_traitement();
if (id.equals("castuberculose.fintraitement")){returnNLS.constants().casTuberculose_group_finTraitement();
if (id.equals("examenserologie.description")){returnNLS.constants().examenSerologie_group_description();
if (id.equals("examenbiologique.description")){returnNLS.constants().examenBiologique_group_description();
if (id.equals("examenmicroscopie.centreexamen")){returnNLS.constants().examenMicroscopie_group_centreExamen();
if (id.equals("examenmicroscopie.examen")){returnNLS.constants().examenMicroscopie_group_examen();
if (id.equals("examenatb.centreexamen")){returnNLS.constants().examenATB_group_centreExamen();
if (id.equals("examenatb.examen")){returnNLS.constants().examenATB_group_examen();
if (id.equals("prisemedicamenteuse.description")){returnNLS.constants().priseMedicamenteuse_group_description();
if (id.equals("rendezvous.description")){returnNLS.constants().rendezVous_group_description();
if (id.equals("transfertreference.informationsdepart")){returnNLS.constants().transfertReference_group_informationsDepart();
if (id.equals("transfertreference.informationarrivee")){returnNLS.constants().transfertReference_group_informationArrivee();
if (id.equals("lot.description")){returnNLS.constants().lot_group_description();
if (id.equals("horsusage.description")){returnNLS.constants().horsUsage_group_description();
if (id.equals("entreelot.description")){returnNLS.constants().entreeLot_group_description();
if (id.equals("sortielot.description")){returnNLS.constants().sortieLot_group_description();
if (id.equals("commande.informationsdepart")){returnNLS.constants().commande_group_informationsDepart();
if (id.equals("commande.regionapprobation")){returnNLS.constants().commande_group_regionApprobation();
if (id.equals("commande.gtcapprobation")){returnNLS.constants().commande_group_gtcApprobation();
if (id.equals("detailcommandemedicament.description")){returnNLS.constants().detailCommandeMedicament_group_description();
if (id.equals("detailcommandeintrant.description")){returnNLS.constants().detailCommandeIntrant_group_description();
if (id.equals("reception.description")){returnNLS.constants().reception_group_description();
if (id.equals("detailreceptionmedicament.description")){returnNLS.constants().detailReceptionMedicament_group_description();
if (id.equals("detailreceptionintrant.description")){returnNLS.constants().detailReceptionIntrant_group_description();
if (id.equals("ravitaillement.informationsdepart")){returnNLS.constants().ravitaillement_group_informationsDepart();
if (id.equals("ravitaillement.informationarrivee")){returnNLS.constants().ravitaillement_group_informationArrivee();
if (id.equals("ravitaillement.detail")){returnNLS.constants().ravitaillement_group_detail();
if (id.equals("detailravitaillement.description")){returnNLS.constants().detailRavitaillement_group_description();
if (id.equals("detailravitaillement.sortie")){returnNLS.constants().detailRavitaillement_group_sortie();
if (id.equals("detailravitaillement.entree")){returnNLS.constants().detailRavitaillement_group_entree();
if (id.equals("inventaire.informationsdepart")){returnNLS.constants().inventaire_group_informationsDepart();
if (id.equals("detailinventaire.description")){returnNLS.constants().detailInventaire_group_description();
if (id.equals("personnel.identif ication")){returnNLS.constants().personnel_group_identif ication();
if (id.equals("personnel.contact")){returnNLS.constants().personnel_group_contact();
if (id.equals("personnel.situation")){returnNLS.constants().personnel_group_situation();
if (id.equals("personnel.niveauaccess")){returnNLS.constants().personnel_group_niveauAccess();
if (id.equals("departpersonnel.personnel")){returnNLS.constants().departPersonnel_group_personnel();
if (id.equals("departpersonnel.description")){returnNLS.constants().departPersonnel_group_description();
if (id.equals("arriveepersonnel.description")){returnNLS.constants().arriveePersonnel_group_description();
if (id.equals("region.description")){returnNLS.constants().region_group_description();
if (id.equals("region.adresse")){returnNLS.constants().region_group_adresse();
if (id.equals("districtsante.description")){returnNLS.constants().districtSante_group_description();
if (id.equals("districtsante.adresse")){returnNLS.constants().districtSante_group_adresse();
if (id.equals("centrediagtrait.description")){returnNLS.constants().centreDiagTrait_group_description();
if (id.equals("centrediagtrait.adresse")){returnNLS.constants().centreDiagTrait_group_adresse();
if (id.equals("laboratoirereference.description")){returnNLS.constants().laboratoireReference_group_description();
if (id.equals("laboratoirereference.adresse")){returnNLS.constants().laboratoireReference_group_adresse();
if (id.equals("lieudit.description")){returnNLS.constants().lieuDit_group_description();
if (id.equals("lieudit.adresse")){returnNLS.constants().lieuDit_group_adresse();
if (id.equals("regime.description")){returnNLS.constants().regime_group_description();
if (id.equals("prisemedicamentregime.description")){returnNLS.constants().priseMedicamentRegime_group_description();
if (id.equals("medicament.description")){returnNLS.constants().medicament_group_description();
if (id.equals("intrant.description")){returnNLS.constants().intrant_group_description();
if (id.equals("formation.description")){returnNLS.constants().formation_group_description();
if (id.equals("candidatureformation.description")){returnNLS.constants().candidatureFormation_group_description();
if (id.equals("candidatureformation.regionapprobation")){returnNLS.constants().candidatureFormation_group_regionApprobation();
if (id.equals("candidatureformation.gtcapprobation")){returnNLS.constants().candidatureFormation_group_gtcApprobation();
if (id.equals("qualif ication.description")){returnNLS.constants().qualif ication_group_description();
if (id.equals("tutoriel.description")){returnNLS.constants().tutoriel_group_description();
if (id.equals("smspredefini.description")){returnNLS.constants().smsPredefini_group_description();
if (id.equals("outbox.adresse")){returnNLS.constants().outBox_group_adresse();
if (id.equals("outbox.messageinformation")){returnNLS.constants().outBox_group_messageInformation();
if (id.equals("utilisateur.identif ication")){returnNLS.constants().utilisateur_group_identif ication();
if (id.equals("utilisateur.contact")){returnNLS.constants().utilisateur_group_contact();
if (entity.getCandidatures()!=null){StringBuilderbuilder=newStringBuilder();for(CandidatureFormationi:entity.getCandidatures()){builder.append(i.getId()).append(";");
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicUtilisateurDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedUtilisateur(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedUtilisateurReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listUtilisateur(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedUtilisateur(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedUtilisateurReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listUtilisateur(start,numRows,"modif ied",false,filterCriteria);
else result=request.getUtilisateurEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedUtilisateur(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedUtilisateurReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listUtilisateur(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedUtilisateur(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedUtilisateurReverse(start,numRows,"modif ied",false,property);
else result=request.listUtilisateur(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listUtilisateur(start,numRows,property,asc,searchCriterions);
else result=request.listUtilisateur(start,numRows,property,asc,filterCriteria);
else result=request.getUtilisateurEmptyList();
else {
if (searchCriterions!=null)result=request.listUtilisateur(start,numRows,property,asc,searchCriterions);
else result=request.listUtilisateur(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedUtilisateur(property,searchCriterions);
else returnrequest.countNonAffectedUtilisateurReverse(property,searchCriterions);
else returnrequest.countUtilisateur(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedUtilisateur(property,filterCriteria);
else returnrequest.countNonAffectedUtilisateurReverse(property,filterCriteria);
else returnrequest.countUtilisateur(filterCriteria);
else returnrequest.countNonAffectedUtilisateur("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedUtilisateur(property,searchCriterions);
else returnrequest.countNonAffectedUtilisateurReverse(property,searchCriterions);
else returnrequest.countUtilisateur(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedUtilisateur(property);
else returnrequest.countNonAffectedUtilisateurReverse(property);
else returnrequest.countUtilisateur();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();UtilisateurRequestrequest=(UtilisateurRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().utilisateur_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldProfessionBasicCriteriaProxyprofessionCrit=request.create(BasicCriteriaProxy.class);professionCrit.setField("profession");professionCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);professionCrit.setValue(text);buffer.append("("+NLS.constants().utilisateur_field_profession()+":"+text+")"+SYMBOL_OR+"");criterionList.add(professionCrit);//SearchfieldDateNaissancetry{DateUtil.parseDate(text);BasicCriteriaProxydateNaissanceCrit=request.create(BasicCriteriaProxy.class);dateNaissanceCrit.setField("dateNaissance");dateNaissanceCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateNaissanceCrit.setValue(text);buffer.append("("+NLS.constants().utilisateur_field_dateNaissance()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateNaissanceCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (initField==null)handler.saveCardEntity(value);
else handler.saveCardEntity(value,initField);
if (uploader.getEntity()!=null){thisValue=uploader.getEntity();
if (editable){infoPanel.setVisible(false);editPanel.setVisible(true);//main.remove(infoPanel);//main.add(editPanel);
else {infoPanel.setVisible(true);editPanel.setVisible(false);//main.remove(editPanel);//main.add(infoPanel);
if (AccessManager.canReadPriseMedicamentRegimeDescription()){Column<PriseMedicamentRegimeProxy,String>medicamentColumn=newMedicamentColumn();medicamentColumn.setSortable(true);table.addColumn(medicamentColumn,NLS.constants().priseMedicamentRegime_field_s_medicament());
if (AccessManager.canCreatePriseMedicamentRegime()&&AccessManager.canEditPriseMedicamentRegime()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/prisemedicamentregime/",true);
else returnnull;
if (AccessManager.canDeletePriseMedicamentRegime()&&AccessManager.canEditPriseMedicamentRegime()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeletePriseMedicamentRegime()&&AccessManager.canEditPriseMedicamentRegime()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<PriseMedicamentRegimeProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().priseMedicamentRegime_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(PriseMedicamentRegimeProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getPriseMedicamentRegimeRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedPriseMedicamentRegimeentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListPriseMedicamentRegimeEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportPriseMedicamentRegime()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.PRIS_REG_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=priseMedicamentRegime_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getMedicament()==null)value="";
else value=renderer.getDisplayValue(object.getMedicament());
if (parent==null){returnnewVector<LieuDit>();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(CentreDiagTraitentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<CentreDiagTrait>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<CentreDiagTrait>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<CentreDiagTrait>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(CentreDiagTraitentity:entities)delete(entity);
if (region_nom_francais!=null&&!region_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.francais");criteria.setValue(region_nom_francais);junction.add(criteria);
if (region_nom_english!=null&&!region_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.english");criteria.setValue(region_nom_english);junction.add(criteria);
if (districtSante_nom_francais!=null&&!districtSante_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.francais");criteria.setValue(districtSante_nom_francais);junction.add(criteria);
if (districtSante_nom_english!=null&&!districtSante_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.english");criteria.setValue(districtSante_nom_english);junction.add(criteria);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailReceptionMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailReceptionMedicamentEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailReceptionMedicamentEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailReceptionMedicamentEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailReceptionMedicamentEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILRECEPTIONMEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRECEPTIONMEDICAMENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailReceptionMedicamentFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){editorWorkflow.setReception(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editorWorkflow.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeMedicamentProxyvalue,booleanisLocked){editorWorkflow.setDetailCommande(value,isLocked);
if (parent!=null){editor=newLieuDitEditor(factory,true);this.initField=initField;
else editor=newLieuDitEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().lieuDit_create_title());createDriver();createNewLieuDit();this.setContent(editor);
if (parent!=null){editor=newLieuDitEditor(factory,true);this.initField=initField;
else editor=newLieuDitEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchLieuDit(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (current.getCoordonnees()==null){GeoFieldProxynewCoordonnees=request.create(GeoFieldProxy.class);current.setCoordonnees(newCoordonnees);
if (AccessManager.canEditLieuDit())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("LieuDitformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewLieuDitEvent(current.getId(),closeEvent));
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCardEntityFormPanel(AdminRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField,ImogBeanRendererrenderer){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCardEntityEditorWorkflow(requestFactory,entityId,titleContainer,renderer);
else {editorWorkflow=newCardEntityEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField,renderer);
else {
if (parent==null){editorWorkflow=newCardEntityEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCardEntityEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCardEntityFormPanel(AdminRequestFactoryrequestFactory,StringentityId,ImogBeanRendererrenderer){this(requestFactory,entityId,null,null,renderer);
if therelationfieldbuttonsshallbehiddenpublicExamenSerologieEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateTest.setEdited(isEdited);nature.setEdited(isEdited);resultatCD4.setEdited(isEdited);resultatVIH.setEdited(isEdited);
if (!AccessManager.canReadExamenSerologieDescription())dateTest.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())nature.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatCD4.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatVIH.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())dateTest.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())nature.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())resultatCD4.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())resultatVIH.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("1"))){resultatCD4.setVisible(true);
else {resultatCD4.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("0"))){resultatVIH.setVisible(true);
else {resultatVIH.setVisible(false);
if (dateTest.getValueWithoutParseException()==null&&dateTest.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateTest");//natureisarequiredfield
if (nature.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nature");
if (errors!=null&&errors.size()>0){List<EditorError>dateTestFieldErrors=newArrayList<EditorError>();List<EditorError>natureFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateTest"))dateTestFieldErrors.add(error);
if (field.equals("nature"))natureFieldErrors.add(error);
if (dateTestFieldErrors.size()>0)dateTest.showErrors(dateTestFieldErrors);
if (natureFieldErrors.size()>0)nature.showErrors(natureFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDepartPersonnelDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDepartPersonnel(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedDepartPersonnelReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listDepartPersonnel(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDepartPersonnel(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listNonAffectedDepartPersonnelReverse(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listDepartPersonnel(start,numRows,"dateDepart",false,filterCriteria);
else result=request.getDepartPersonnelEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDepartPersonnel(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedDepartPersonnelReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listDepartPersonnel(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDepartPersonnel(start,numRows,"dateDepart",false,property);
else result=request.listNonAffectedDepartPersonnelReverse(start,numRows,"dateDepart",false,property);
else result=request.listDepartPersonnel(start,numRows,"dateDepart",false);
if (isFiltered){result.with("region");result.with("region.nom");result.with("districtSante");result.with("districtSante.nom");result.with("CDT");result.with("personnel");
else {result.with("personnel");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDepartPersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listDepartPersonnel(start,numRows,property,asc,filterCriteria);
else result=request.getDepartPersonnelEmptyList();
else {
if (searchCriterions!=null)result=request.listDepartPersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listDepartPersonnel(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDepartPersonnel(property,searchCriterions);
else returnrequest.countNonAffectedDepartPersonnelReverse(property,searchCriterions);
else returnrequest.countDepartPersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDepartPersonnel(property,filterCriteria);
else returnrequest.countNonAffectedDepartPersonnelReverse(property,filterCriteria);
else returnrequest.countDepartPersonnel(filterCriteria);
else returnrequest.countNonAffectedDepartPersonnel("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDepartPersonnel(property,searchCriterions);
else returnrequest.countNonAffectedDepartPersonnelReverse(property,searchCriterions);
else returnrequest.countDepartPersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDepartPersonnel(property);
else returnrequest.countNonAffectedDepartPersonnelReverse(property);
else returnrequest.countDepartPersonnel();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DepartPersonnelRequestrequest=(DepartPersonnelRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDateDeparttry{DateUtil.parseDate(text);BasicCriteriaProxydateDepartCrit=request.create(BasicCriteriaProxy.class);dateDepartCrit.setField("dateDepart");dateDepartCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateDepartCrit.setValue(text);buffer.append("("+NLS.constants().departPersonnel_field_dateDepart()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateDepartCrit);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(text);buffer.append("("+NLS.constants().region_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(region_nomCrit);//SearchfieldNomBasicCriteriaProxydistrictSante_nomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))districtSante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtSante_nomCrit.setField("districtSante.nom.english");districtSante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtSante_nomCrit.setValue(text);buffer.append("("+NLS.constants().districtSante_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(districtSante_nomCrit);//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldNomBasicCriteriaProxypersonnel_nomCrit=request.create(BasicCriteriaProxy.class);personnel_nomCrit.setField("personnel.nom");personnel_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);personnel_nomCrit.setValue(text);buffer.append("("+NLS.constants().personnel_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(personnel_nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (EpicamIconConstants.PATIENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PATIENT_ICON);PatientDataProviderprovider=newPatientDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeletePatient()&&AccessManager.canEditPatient())listComposite=newPatientDynaTable(requestFactory,provider,true);
else listComposite=newPatientDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (commande_dateBeforeBox.getValue()!=null){FilterCriteriacommande_dateBeforeCrit=newFilterCriteria();commande_dateBeforeCrit.setField("commande.date");commande_dateBeforeCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_inferior());commande_dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);commande_dateBeforeCrit.setValue(DateUtil.getDate(commande_dateBeforeBox.getValue()));commande_dateBeforeCrit.setValueDisplayName(DateUtil.getDate(commande_dateBeforeBox.getValue()));criteria.add(commande_dateBeforeCrit);
if (commande_dateAfterBox.getValue()!=null){FilterCriteriacommande_dateAfterCrit=newFilterCriteria();commande_dateAfterCrit.setField("commande.date");commande_dateAfterCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_superior());commande_dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);commande_dateAfterCrit.setValue(DateUtil.getDate(commande_dateAfterBox.getValue()));commande_dateAfterCrit.setValueDisplayName(DateUtil.getDate(commande_dateAfterBox.getValue()));criteria.add(commande_dateAfterCrit);
if (detailcommande_quantiteRequiseBox.getValue()==null)detailcommande_quantiteRequiseCrit.setValue(null);
else detailcommande_quantiteRequiseCrit.setValue(String.valueOf(detailcommande_quantiteRequiseBox.getValue()));detailcommande_quantiteRequiseCrit.setValueDisplayName(String.valueOf(detailcommande_quantiteRequiseBox.getValue()));criteria.add(detailcommande_quantiteRequiseCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())commande_cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCommandeInformationsDepart()){commande_dateBeforeFilterBox.setVisible(false);commande_dateAfterFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())detailcommande_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())detailcommande_quantiteRequiseFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (ProfileUtil.isAdmin())listComposite=newDynamicFieldTemplateDynaTable(requestFactory,provider,false);wrapperPanel.setTitle(DynFieldsNLS.constants().dynamicField_Template_table_text());wrapperPanel.setIcon(AdminIconConstants.DYNAMICFIELD_TEMPLATE_ICON);configureWrapperPanelForTable(formTypeUtil);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setFieldDisplayName(NLS.constants().laboratoireReference_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriterianatureCrit=newFilterCriteria();natureCrit.setField("nature");natureCrit.setFieldDisplayName(NLS.constants().laboratoireReference_field_nature());natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(natureBox.getValue(natureBox.getSelectedIndex()));natureCrit.setValueDisplayName(EpicamRenderer.get().getEnumDisplayValue(LaboratoireReferenceProxy.class,"nature",natureBox.getValue(natureBox.getSelectedIndex())));criteria.add(natureCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLaboratoireReferenceDescription())nomFilterBox.setVisible(false);
if (!AccessManager.canReadLaboratoireReferenceDescription())natureFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (delegate!=null){delegate.setObject(delegate.ensureMutable(toSet));delegate.setDirty(false);
if (asValue!=null){//CallsetValueforValueAware,non-leafeditorsasValue.setValue(toSet);
else {LeafValueEditor<Q>asLeaf=ctx.asLeafValueEditor();
if (asLeaf!=null){//CallsetvalueforLeafValueEditors.asLeaf.setValue(toSet);
if therelationfieldbuttonsshallbehiddenpublicPatientEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencentres=newImogMultiRelationBox<CentreDiagTraitProxy>(centresDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())centres=newImogMultiRelationBox<CentreDiagTraitProxy>(centresDataProvider,EpicamRenderer.get(),null);
else centres=newImogMultiRelationBox<CentreDiagTraitProxy>(false,centresDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddenlieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLieuDit()&&AccessManager.canEditLieuDit())lieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),null);
else lieuxDits=newImogMultiRelationBox<LieuDitProxy>(false,lieuxDitsDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddencasTuberculose=newImogMultiRelationBox<CasTuberculoseProxy>(casTuberculoseDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())casTuberculose=newImogMultiRelationBox<CasTuberculoseProxy>(casTuberculoseDataProvider,EpicamRenderer.get(),null);
else casTuberculose=newImogMultiRelationBox<CasTuberculoseProxy>(false,casTuberculoseDataProvider,EpicamRenderer.get(),null);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldidentif iant.setEdited(false);nom.setEdited(isEdited);sexe.setEdited(isEdited);dateNaissance.setEdited(isEdited);age.setEdited(isEdited);profession.setEdited(isEdited);centres.setEdited(isEdited);nationalite.setEdited(isEdited);precisionSurNationalite.setEdited(isEdited);recevoirCarnetTelPortable.setEdited(isEdited);telephoneUn.setEdited(isEdited);telephoneDeux.setEdited(isEdited);telephoneTrois.setEdited(isEdited);email.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);lieuxDits.setEdited(isEdited);pacNom.setEdited(isEdited);pacTelephoneUn.setEdited(isEdited);pacTelephoneDeux.setEdited(isEdited);pacTelephoneTrois.setEdited(isEdited);pacEmail.setEdited(isEdited);pacLibelle.setEdited(isEdited);pacComplementAdresse.setEdited(isEdited);pacQuartier.setEdited(isEdited);pacVille.setEdited(isEdited);pacCodePostal.setEdited(isEdited);casTuberculose.setEdited(isEdited);casIndex.setEdited(isEdited);examensBiologiques.setEdited(isEdited);serologies.setEdited(isEdited);
if (!AccessManager.canReadPatientIdentif ication())identif icationSection.setVisible(false);
if (!AccessManager.canReadPatientContact())contactSection.setVisible(false);
if (!AccessManager.canReadPatientPersonneContact())personneContactSection.setVisible(false);
if (!AccessManager.canReadPatientTuberculose())tuberculoseSection.setVisible(false);
if (!AccessManager.canReadPatientExamens())examensSection.setVisible(false);
if (!AccessManager.canEditPatientIdentif ication())identif icationSection.setVisible(false);
if (!AccessManager.canEditPatientContact())contactSection.setVisible(false);
if (!AccessManager.canEditPatientPersonneContact())personneContactSection.setVisible(false);
if (!AccessManager.canEditPatientTuberculose())tuberculoseSection.setVisible(false);
if (!AccessManager.canEditPatientExamens())examensSection.setVisible(false);
if (field.equals(dateNaissance)){Datebirthday=dateNaissance.getValue();
if (birthday!=null){age.setValue(getAge(birthday));
else {age.setValue(null);
else 
if (field.equals(age)){Integeragei=age.getValue();
if (agei!=null){dateNaissance.setValue(getBirthday(agei));
else {dateNaissance.setValue(null);
if (field.equals(centres)||field.equals(nationalite)){updateIdentif iant();
if (allValidation||source.equals(nationalite)){
if ((nationalite.getValue()!=null&&nationalite.getValue().matches("1"))){precisionSurNationalite.setVisible(true);
else {precisionSurNationalite.setVisible(false);
if (!centres.isEmpty()&&centres.getSelectedEntities().size()>0){CentreDiagTraitProxyvalue=centres.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,value.getId(),relationPopup,"centres");relationPopup.addWidget(form);relationPopup.show();
if (!centres.isPresent(value))centres.addValue(value);
if (initField.equals("centres")){
if (centres.isPresent(value))centres.replaceValue(value);
else centres.addValue(value,true);
if (!lieuxDits.isEmpty()&&lieuxDits.getSelectedEntities().size()>0){LieuDitProxyvalue=lieuxDits.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();LieuDitFormPanelform=newLieuDitFormPanel(requestFactory,value.getId(),relationPopup,"lieuxDits");relationPopup.addWidget(form);relationPopup.show();
if (!lieuxDits.isPresent(value))lieuxDits.addValue(value);
if (initField.equals("lieuxDits")){
if (lieuxDits.isPresent(value))lieuxDits.replaceValue(value);
else lieuxDits.addValue(value,true);
if (!casTuberculose.isEmpty()&&casTuberculose.getSelectedEntities().size()>0){CasTuberculoseProxyvalue=casTuberculose.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,value.getId(),relationPopup,"casTuberculose");relationPopup.addWidget(form);relationPopup.show();
if (!casTuberculose.isPresent(value))casTuberculose.addValue(value);
if (initField.equals("casTuberculose")){
if (casTuberculose.isPresent(value))casTuberculose.replaceValue(value);
else casTuberculose.addValue(value,true);
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");//ageshallbesuperiororequalto'0'
if (age.getValueWithoutParseException()!=null&&!(age.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().patient_field_age_min()),null,"age");//ageshallbeinferiororequalto'120'
if (age.getValueWithoutParseException()!=null&&!(age.getValueWithoutParseException()<=120))delegate.recordError(BaseNLS.messages().error_max_num(NLS.constants().patient_field_age_max()),null,"age");//centresisarequiredfield
if (centres.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"centres");//casIndexnestedformshallbevalidatedcasIndex.validateFields();//examensBiologiquesnestedformshallbevalidatedexamensBiologiques.validateFields();//serologiesnestedformshallbevalidatedserologies.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>nomFieldErrors=newArrayList<EditorError>();List<EditorError>ageFieldErrors=newArrayList<EditorError>();List<EditorError>centresFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("age"))ageFieldErrors.add(error);
if (field.equals("centres"))centresFieldErrors.add(error);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (ageFieldErrors.size()>0)age.showErrors(ageFieldErrors);
if (centresFieldErrors.size()>0)centres.showErrors(centresFieldErrors);
if (birthday.getMonth()>nowMonth){result--;
else 
if (birthday.getMonth()==nowMonth){intnowDay=now.getDate();
if (birthday.getDate()>nowDay){result--;
if (nationalite.getValue()!=null){
if (EpicamEnumConstants.PATIENT_NATIONALITE_CAMEROUNAIS.equals(nationalite.getValue())){builder.append('N');
else 
if (EpicamEnumConstants.PATIENT_NATIONALITE_ETRANGER.equals(nationalite.getValue())){builder.append('E');
if (centres.getValue()!=null&&centres.getValue().size()>0){builder.append(centres.getValue().get(0).getCode());
switch(response.toString().length()){case1:builder.append("0000");break;case2:builder.append("000");break;case3:builder.append("00");break;case4:builder.append("0");break;default:break;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicProfileFormPanel(AdminRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField,ImogBeanRendererrenderer){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newProfileEditorWorkflow(requestFactory,entityId,titleContainer,renderer);
else {editorWorkflow=newProfileEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField,renderer);
else {
if (parent==null){editorWorkflow=newProfileEditorWorkflow(requestFactory,titleContainer,renderer);
else {editorWorkflow=newProfileEditorWorkflow(requestFactory,titleContainer,parent,initField,renderer);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicProfileFormPanel(AdminRequestFactoryrequestFactory,StringentityId,ImogBeanRendererrenderer){this(requestFactory,entityId,null,null,renderer);
if (searchText==null)handler.listRegion();
else handler.listRegion(searchText);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicOutBoxFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newOutBoxEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newOutBoxEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newOutBoxEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newOutBoxEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.OUTBOX_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.OUTBOX_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicOutBoxFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
if (dateDepartBeforeBox.getValue()!=null){FilterCriteriadateDepartBeforeCrit=newFilterCriteria();dateDepartBeforeCrit.setField("dateDepart");dateDepartBeforeCrit.setFieldDisplayName(NLS.constants().departPersonnel_field_dateDepart()+BaseNLS.constants().search_operator_inferior());dateDepartBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateDepartBeforeCrit.setValue(DateUtil.getDate(dateDepartBeforeBox.getValue()));dateDepartBeforeCrit.setValueDisplayName(DateUtil.getDate(dateDepartBeforeBox.getValue()));criteria.add(dateDepartBeforeCrit);
if (dateDepartAfterBox.getValue()!=null){FilterCriteriadateDepartAfterCrit=newFilterCriteria();dateDepartAfterCrit.setField("dateDepart");dateDepartAfterCrit.setFieldDisplayName(NLS.constants().departPersonnel_field_dateDepart()+BaseNLS.constants().search_operator_superior());dateDepartAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateDepartAfterCrit.setValue(DateUtil.getDate(dateDepartAfterBox.getValue()));dateDepartAfterCrit.setValueDisplayName(DateUtil.getDate(dateDepartAfterBox.getValue()));criteria.add(dateDepartAfterCrit);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setFieldDisplayName(NLS.constants().region_field_nom());region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(region_nomBox.getValue());region_nomCrit.setValueDisplayName(region_nomBox.getValue());criteria.add(region_nomCrit);FilterCriteriadistrictsante_nomCrit=newFilterCriteria();
if (locale.equals("fr"))districtsante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtsante_nomCrit.setField("districtSante.nom.english");districtsante_nomCrit.setFieldDisplayName(NLS.constants().districtSante_field_nom());districtsante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtsante_nomCrit.setValue(districtsante_nomBox.getValue());districtsante_nomCrit.setValueDisplayName(districtsante_nomBox.getValue());criteria.add(districtsante_nomCrit);FilterCriteriacdt_nomCrit=newFilterCriteria();cdt_nomCrit.setField("cDT.nom");cdt_nomCrit.setFieldDisplayName(NLS.constants().centreDiagTrait_field_nom());cdt_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cdt_nomCrit.setValue(cdt_nomBox.getValue());cdt_nomCrit.setValueDisplayName(cdt_nomBox.getValue());criteria.add(cdt_nomCrit);FilterCriteriapersonnel_nomCrit=newFilterCriteria();personnel_nomCrit.setField("personnel.nom");personnel_nomCrit.setFieldDisplayName(NLS.constants().personnel_field_nom());personnel_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);personnel_nomCrit.setValue(personnel_nomBox.getValue());personnel_nomCrit.setValueDisplayName(personnel_nomBox.getValue());criteria.add(personnel_nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadDepartPersonnelDescription()){dateDepartBeforeFilterBox.setVisible(false);dateDepartAfterFilterBox.setVisible(false);
if (!AccessManager.canReadRegionDescription())region_nomFilterBox.setVisible(false);
if (!AccessManager.canReadDistrictSanteDescription())districtsante_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadPersonnelIdentif ication())personnel_nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (entity.getInventaire()!=null){bck.setInventaire(entity.getInventaire().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getLot()!=null){bck.setLot(entity.getLot().getId());
if (!enabled){textBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");
if (textBox.getValue().isEmpty())returnnull;
else returntextBox.getValue();
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionIntrantEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant())detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionIntrantDescription())commande.setVisible(false);
if (!AccessManager.canReadDetailReceptionIntrantDescription())detailCommande.setVisible(false);
if (!AccessManager.canReadDetailReceptionIntrantDescription())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())commande.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())detailCommande.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())entreeLot.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeIntrantProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeIntrantFormPanelform=newDetailCommandeIntrantFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if (searchText==null)handler.listHorsUsage();
else handler.listHorsUsage(searchText);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailCommandeIntrantProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailCommandeIntrantEditorNestedRow>editors=editor.getEditors();DetailCommandeIntrantEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailCommandeIntrantEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailCommandeIntrantEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailCommandeIntrantEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailCommandeIntrantEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailCommandeIntrantProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (initField==null)handler.saveExamenBiologique(value);
else handler.saveExamenBiologique(value,initField);
if (handler==null)initHandler();returnhandler.getById(id);
if (initField==null)handler.saveProfile(value);
else handler.saveProfile(value,initField);
if (key.equals(id))list.removeItem(i);
else returnnull;
if truenotif ychangespublicvoidsetValue(List<T>pValue){values=newHashMap<String,T>();list.clear();if (pValue!=null){for(Tentity:pValue){values.put(entity.getId(),entity);list.addItem(beanRenderer.getDisplayValue(entity),entity.getId());
if (isEmpty)isEmpty=false;
if (isEmpty)isEmpty=false;setButtonVisibility();
if truenotif ychangespublicvoidaddValue(Tvalue,booleannotif yChange){addValue(value);this.notif yChanges=notif yChange;if (notif yChange)notif yListChange();
if (list.getValue(i).equals(entity.getId())){removeValue(entity);addValue(entity);
if thespecif iedentityisattachedtothisfield*@paramtoTesttheentitytotest*@returntrueistheentityisalreadypresent.publicbooleanisPresent(TtoTest){for(inti=0;i<list.getItemCount();i++){
if (list.getValue(i).equals(toTest.getId()))returntrue;
else addImage.setVisible(true);if (!isEmpty&&!hideClearButton)clearImage.setVisible(true);
else clearImage.setVisible(false);
else {affectImage.setVisible(false);clearImage.setVisible(false);addImage.setVisible(false);
else {addImage.setVisible(false);affectImage.setVisible(false);clearImage.setVisible(false);
else viewImage.setVisible(true);
if (EpicamIconConstants.INTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.INTRANT_ICON);IntrantDataProviderprovider=newIntrantDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteIntrant()&&AccessManager.canEditIntrant())listComposite=newIntrantDynaTable(requestFactory,provider,true);
else listComposite=newIntrantDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (object==null)returntrue;return(object<=maxValue);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<CasIndexProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<CasIndexEditorNestedRow>editors=editor.getEditors();CasIndexEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(CasIndexEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(CasIndexEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(CasIndexEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(CasIndexEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){CasIndexProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if theopenbuttonshallbehiddenineditmode*defaultisfalse*@paramhideOpenButtonpublicvoidsetHideOpenButton(booleanhideOpenButton){singleRelationBox.setHideOpenButton(hideOpenButton);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,false*otherwisepublicEnvoiSMSFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newEnvoiSMSEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newEnvoiSMSEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newEnvoiSMSEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newEnvoiSMSEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicEnvoiSMSFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetSms(SmsPredefiniProxyvalue,booleanisLocked){editorWorkflow.setSms(value,isLocked);
if (parent!=null){editor=newCandidatureFormationEditor(factory,true);this.initField=initField;
else editor=newCandidatureFormationEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().candidatureFormation_create_title());createDriver();createNewCandidatureFormation();this.setContent(editor);
if (parent!=null){editor=newCandidatureFormationEditor(factory,true);this.initField=initField;
else editor=newCandidatureFormationEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCandidatureFormation(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditCandidatureFormation())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("CandidatureFormationformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCandidatureFormationEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetFormation(FormationProxyvalue,booleanisLocked){editor.setFormation(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editor.setPersonnel(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicCandidatureFormationEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);personnel.setEdited(isEdited);approuveeRegion.setEdited(isEdited);motif RejetRegion.setEdited(isEdited);approuveeGTC.setEdited(isEdited);motif RejetGTC.setEdited(isEdited);
if (!AccessManager.canReadCandidatureFormationDescription())region.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())districtSante.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())CDT.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())personnel.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())approuveeRegion.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())motif RejetRegion.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())approuveeGTC.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())motif RejetGTC.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())region.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())districtSante.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())CDT.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())personnel.setVisible(false);
if (!AccessManager.canEditCandidatureFormationRegionApprobation())approuveeRegion.setVisible(false);
if (!AccessManager.canEditCandidatureFormationRegionApprobation())motif RejetRegion.setVisible(false);
if (!AccessManager.canEditCandidatureFormationGtcApprobation())approuveeGTC.setVisible(false);
if (!AccessManager.canEditCandidatureFormationGtcApprobation())motif RejetGTC.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());
if (allValidation||source.equals(approuveeRegion)){
if ((approuveeRegion.getValue()!=null&&!approuveeRegion.getValue())){motif RejetRegion.setVisible(true);
else {motif RejetRegion.setVisible(false);
if (allValidation||source.equals(approuveeGTC)){
if ((approuveeGTC.getValue()!=null&&!approuveeGTC.getValue())){motif RejetGTC.setVisible(true);
else {motif RejetGTC.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pCDT!=null){
if (!hideButtons)personnel.hideButtons(false);personnelDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {personnel.hideButtons(true);personnelDataProvider.setFilterCriteria(null);
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldPersonneldependsonthevalueoffieldcDTclearPersonnelWidget();getPersonnelFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){personnel.setLocked(isLocked);personnel.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (personnel.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PersonnelFormPanelform=newPersonnelFormPanel(requestFactory,personnel.getValue().getId(),relationPopup,"personnel");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (CDT.getValue()!=null)form.setCDT(CDT.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("personnel"))personnel.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//personnelisarequiredfield
if (personnel.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"personnel");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>personnelFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("personnel"))personnelFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (personnelFieldErrors.size()>0)personnel.showErrors(personnelFieldErrors);
if (searchText==null)handler.listArriveePersonnel();
else handler.listArriveePersonnel(searchText);
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeMedicamentEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldcommande.setEdited(false);medicament.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DynamicFieldInstanceentity,booleanisNew){
if (entity!=null&&entity.getFieldValue()!=null&&!entity.getFieldValue().equals(""))dao.saveOrUpdate(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DynamicFieldInstance>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DynamicFieldInstance>beans=dao.load(sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DynamicFieldInstance>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DynamicFieldInstance>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DynamicFieldInstanceentity:entities)delete(entity);
if itisanewentityaddedforthefirsttime.publicvoidsaveFieldTemplate(DynamicFieldTemplateentity,booleanisNew){fieldTemplateHandler.save(entity,isNew);
if therelationfieldbuttonsshallbehiddenpublicDynamicFieldTemplateEditor(ImogRequestFactoryfactory,booleanhideButtons,booleanisNew,FormTypeUtilformTypeUtil){this.requestFactory=factory;this.hideButtons=hideButtons;this.isNew=isNew;this.formTypeUtil=formTypeUtil;templateCreator=newImogBeanEditorWithoutUi<ImogActorProxy>();initWidget(BINDER.createAndBindUi(this));properties();
if therelationfieldbuttonsshallbehiddenpublicDynamicFieldTemplateEditor(ImogRequestFactoryfactory,booleanhideButtons,FormTypeUtilformTypeUtil){this(factory,hideButtons,false,formTypeUtil);
if (!ProfileUtil.isAdmin())administrationSection.setVisible(false);fieldName.setEdited(isEdited);if (isNew)fieldType.setEdited(isEdited);
else fieldType.setEdited(false);parameters.setEdited(isEdited);
if (hideButtons)//inpopupformType.setEdited(false);
else formType.setEdited(isEdited);//
if (hideButtons)//inpopup//templateCreator.setEnabled(false);//else //templateCreator.setEnabled(isEdited);description.setEdited(isEdited);reason.setEdited(isEdited);isDefault.setEdited(isEdited);requiredValue.setEdited(isEdited);fieldPosition.setEdited(isEdited);minimumValue.setEdited(isEdited);maximumValue.setEdited(isEdited);defaultValue.setEdited(isEdited);allUsers.setEdited(isEdited);isActivated.setEdited(isEdited);
if (allValidation||source.equals(fieldType)){
if ((fieldType.getValue()!=null&&fieldType.getValue().matches(DFConstants.FIELD_TYPE_ENUM_S+"|"+DFConstants.FIELD_TYPE_ENUM_M))){parameters.setVisible(true);
else {parameters.setVisible(false);
if (allValidation||source.equals(fieldType)){
if ((fieldType.getValue()!=null&&fieldType.getValue().matches(DFConstants.FIELD_TYPE_INT+"|"+DFConstants.FIELD_TYPE_FLOAT+"|"+DFConstants.FIELD_TYPE_DATE))){minimumValue.setVisible(true);
else {minimumValue.setVisible(false);
if (allValidation||source.equals(fieldType)){
if ((fieldType.getValue()!=null&&fieldType.getValue().matches(DFConstants.FIELD_TYPE_INT+"|"+DFConstants.FIELD_TYPE_FLOAT+"|"+DFConstants.FIELD_TYPE_DATE))){maximumValue.setVisible(true);
else {maximumValue.setVisible(false);
if (allValidation||source.equals(fieldType)){
if ((fieldType.getValue()!=null&&fieldType.getValue().matches(DFConstants.FIELD_TYPE_INT+"|"+DFConstants.FIELD_TYPE_FLOAT+"|"+DFConstants.FIELD_TYPE_DATE+"|"+DFConstants.FIELD_TYPE_BOOL+"|"+DFConstants.FIELD_TYPE_ENUM_S))){defaultValue.setVisible(true);
else {defaultValue.setVisible(false);
if (fieldName.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"fieldName");//fieldTypeisarequiredfield
if (fieldType.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"fieldType");//formTypeisarequiredfield
if (formType.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"formType");StringfieldTypeValue=fieldType.getValue();if (fieldTypeValue!=null){//validateenumvaluesif (fieldTypeValue.equals(DFConstants.FIELD_TYPE_ENUM_S)||fieldTypeValue.equals(DFConstants.FIELD_TYPE_ENUM_M)){booleanisValid=false;StringenumValues=parameters.getValue();if (enumValues!=null&&!enumValues.isEmpty()){String[]valuesTab=enumValues.split(DFConstants.ENUM_SEPARATOR);
if (valuesTab.length==0||valuesTab.length==1||enumValues.startsWith(DFConstants.ENUM_SEPARATOR)||enumValues.endsWith(DFConstants.ENUM_SEPARATOR))isValid=false;
else {StringBuffermsg=newStringBuffer();for(StringenumValue:valuesTab){msg.append("-"+enumValue+"\n");
if relationfieldshallbelocked(noneditable)publicvoidsetTemplateCreator(ImogActorProxyvalue,booleanisLocked){//templateCreator.setLocked(isLocked);templateCreator.setValue(value);
if (field.equals("fieldName"))fieldNameFieldErrors.add(error);
if (field.equals("fieldType"))fieldTypeFieldErrors.add(error);
if (field.equals("formType"))formTypeFieldErrors.add(error);
if (field.equals("parameters"))parametersFieldErrors.add(error);
if (field.equals("minimumValue"))minimumValueFieldErrors.add(error);
if (field.equals("maximumValue"))maximumValueFieldErrors.add(error);
if (field.equals("defaultValue"))defaultValueFieldErrors.add(error);
if (field.equals("fieldPosition"))fieldPositionFieldErrors.add(error);
if (fieldNameFieldErrors.size()>0)fieldName.showErrors(fieldNameFieldErrors);
if (fieldTypeFieldErrors.size()>0)fieldType.showErrors(fieldTypeFieldErrors);
if (formTypeFieldErrors.size()>0)formType.showErrors(formTypeFieldErrors);
if (parametersFieldErrors.size()>0)parameters.showErrors(parametersFieldErrors);
if (minimumValueFieldErrors.size()>0)minimumValue.showErrors(minimumValueFieldErrors);
if (maximumValueFieldErrors.size()>0)maximumValue.showErrors(maximumValueFieldErrors);
if (defaultValueFieldErrors.size()>0)defaultValue.showErrors(defaultValueFieldErrors);
if (fieldPositionFieldErrors.size()>0)fieldPosition.showErrors(fieldPositionFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicCandidatureFormationEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenformation=newImogSingleRelationBox<FormationProxy>(formationDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateFormation()&&AccessManager.canEditFormation())formation=newImogSingleRelationBox<FormationProxy>(formationDataProvider,EpicamRenderer.get());
else formation=newImogSingleRelationBox<FormationProxy>(false,formationDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();formation.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);personnel.setEdited(isEdited);approuveeRegion.setEdited(isEdited);motif RejetRegion.setEdited(isEdited);approuveeGTC.setEdited(isEdited);motif RejetGTC.setEdited(isEdited);
if (!AccessManager.canReadCandidatureFormationDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())regionApprobationSection.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())gtcApprobationSection.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditCandidatureFormationRegionApprobation())regionApprobationSection.setVisible(false);
if (!AccessManager.canEditCandidatureFormationGtcApprobation())gtcApprobationSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (allValidation||source.equals(approuveeRegion)){
if ((approuveeRegion.getValue()!=null&&!approuveeRegion.getValue())){motif RejetRegion.setVisible(true);
else {motif RejetRegion.setVisible(false);
if (allValidation||source.equals(approuveeGTC)){
if ((approuveeGTC.getValue()!=null&&!approuveeGTC.getValue())){motif RejetGTC.setVisible(true);
else {motif RejetGTC.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pCDT!=null){
if (!hideButtons)personnel.hideButtons(false);personnelDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {personnel.hideButtons(true);personnelDataProvider.setFilterCriteria(null);
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetFormation(FormationProxyvalue,booleanisLocked){formation.setLocked(isLocked);formation.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldPersonneldependsonthevalueoffieldcDTclearPersonnelWidget();getPersonnelFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){personnel.setLocked(isLocked);personnel.setValue(value);
if (formation.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();FormationFormPanelform=newFormationFormPanel(requestFactory,formation.getValue().getId(),relationPopup,"formation");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("formation"))formation.setValue(value,true);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (personnel.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PersonnelFormPanelform=newPersonnelFormPanel(requestFactory,personnel.getValue().getId(),relationPopup,"personnel");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (CDT.getValue()!=null)form.setCDT(CDT.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("personnel"))personnel.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//personnelisarequiredfield
if (personnel.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"personnel");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>personnelFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("personnel"))personnelFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (personnelFieldErrors.size()>0)personnel.showErrors(personnelFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionIntrantEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenreception=newImogSingleRelationBox<ReceptionProxy>(receptionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateReception()&&AccessManager.canEditReception())reception=newImogSingleRelationBox<ReceptionProxy>(receptionDataProvider,EpicamRenderer.get());
else reception=newImogSingleRelationBox<ReceptionProxy>(false,receptionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant())detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldreception.setEdited(false);commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionIntrantDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())descriptionSection.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){reception.setLocked(isLocked);reception.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeIntrantProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (reception.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();ReceptionFormPanelform=newReceptionFormPanel(requestFactory,reception.getValue().getId(),relationPopup,"reception");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("reception"))reception.setValue(value,true);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeIntrantFormPanelform=newDetailCommandeIntrantFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if (behavior==null){thisBehavior=newDefaultAddressBehavior();
else {thisBehavior=behavior;
if (!enabled){textBox.addStyleDependentName("disabled");viewOnMap.addStyleDependentName("clickable");
else {textBox.removeStyleDependentName("disabled");viewOnMap.removeStyleDependentName("clickable");
if (clickable&&textBox.getText().length()>0)thisBehavior.addressAction(textBox.getText());
if (textBox.getValue().isEmpty())returnnull;
else returntextBox.getValue();
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicPersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newPersonnelEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newPersonnelEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newPersonnelEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newPersonnelEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.PERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PERSONNEL_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicPersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setFieldDisplayName(NLS.constants().region_field_nom());region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(region_nomBox.getValue());region_nomCrit.setValueDisplayName(region_nomBox.getValue());criteria.add(region_nomCrit);FilterCriterianomCrit=newFilterCriteria();
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setFieldDisplayName(NLS.constants().districtSante_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadRegionDescription())region_nomFilterBox.setVisible(false);
if (!AccessManager.canReadDistrictSanteDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (value!=null){intvalueHours=(int)value.doubleValue();hours.setSelectedIndex(getIndexForValue(hours,String.valueOf(valueHours)));longvalueMinutes=Math.round((value-valueHours)*60);minutes.setSelectedIndex(getIndexForValue(minutes,String.valueOf(valueMinutes)));
else {hours.setSelectedIndex(0);minutes.setSelectedIndex(0);
else returnnull;
if (!enabled){hours.addStyleDependentName("disabled");minutes.addStyleDependentName("disabled");
else {hours.removeStyleDependentName("disabled");minutes.removeStyleDependentName("disabled");
if (value!=null){for(inti=0;i<box.getItemCount();i++){
if (value.equals(box.getValue(i)))returni;
if (entity.getFormation()!=null){bck.setFormation(entity.getFormation().getId());
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getPersonnel()!=null){bck.setPersonnel(entity.getPersonnel().getId());
if (searchText==null)handler.listDetailReceptionMedicament();
else handler.listDetailReceptionMedicament(searchText);
if (parent==null){returnnewVector<LieuDit>();
if (instance==null)instance=newCloneFactoryImpl();returninstance;
if (sourceinstanceofPatient)returncloneEntity((Patient)source);
if (sourceinstanceofCasIndex)returncloneEntity((CasIndex)source);
if (sourceinstanceofCasTuberculose)returncloneEntity((CasTuberculose)source);
if (sourceinstanceofExamenSerologie)returncloneEntity((ExamenSerologie)source);
if (sourceinstanceofExamenBiologique)returncloneEntity((ExamenBiologique)source);
if (sourceinstanceofExamenMicroscopie)returncloneEntity((ExamenMicroscopie)source);
if (sourceinstanceofExamenATB)returncloneEntity((ExamenATB)source);
if (sourceinstanceofPriseMedicamenteuse)returncloneEntity((PriseMedicamenteuse)source);
if (sourceinstanceofRendezVous)returncloneEntity((RendezVous)source);
if (sourceinstanceofTransfertReference)returncloneEntity((TransfertReference)source);
if (sourceinstanceofLot)returncloneEntity((Lot)source);
if (sourceinstanceofHorsUsage)returncloneEntity((HorsUsage)source);
if (sourceinstanceofEntreeLot)returncloneEntity((EntreeLot)source);
if (sourceinstanceofSortieLot)returncloneEntity((SortieLot)source);
if (sourceinstanceofCommande)returncloneEntity((Commande)source);
if (sourceinstanceofDetailCommandeMedicament)returncloneEntity((DetailCommandeMedicament)source);
if (sourceinstanceofDetailCommandeIntrant)returncloneEntity((DetailCommandeIntrant)source);
if (sourceinstanceofReception)returncloneEntity((Reception)source);
if (sourceinstanceofDetailReceptionMedicament)returncloneEntity((DetailReceptionMedicament)source);
if (sourceinstanceofDetailReceptionIntrant)returncloneEntity((DetailReceptionIntrant)source);
if (sourceinstanceofRavitaillement)returncloneEntity((Ravitaillement)source);
if (sourceinstanceofDetailRavitaillement)returncloneEntity((DetailRavitaillement)source);
if (sourceinstanceofInventaire)returncloneEntity((Inventaire)source);
if (sourceinstanceofDetailInventaire)returncloneEntity((DetailInventaire)source);
if (sourceinstanceofPersonnel)returncloneEntity((Personnel)source);
if (sourceinstanceofDepartPersonnel)returncloneEntity((DepartPersonnel)source);
if (sourceinstanceofArriveePersonnel)returncloneEntity((ArriveePersonnel)source);
if (sourceinstanceofRegion)returncloneEntity((Region)source);
if (sourceinstanceofDistrictSante)returncloneEntity((DistrictSante)source);
if (sourceinstanceofCentreDiagTrait)returncloneEntity((CentreDiagTrait)source);
if (sourceinstanceofLaboratoireReference)returncloneEntity((LaboratoireReference)source);
if (sourceinstanceofLieuDit)returncloneEntity((LieuDit)source);
if (sourceinstanceofRegime)returncloneEntity((Regime)source);
if (sourceinstanceofPriseMedicamentRegime)returncloneEntity((PriseMedicamentRegime)source);
if (sourceinstanceofMedicament)returncloneEntity((Medicament)source);
if (sourceinstanceofIntrant)returncloneEntity((Intrant)source);
if (sourceinstanceofFormation)returncloneEntity((Formation)source);
if (sourceinstanceofCandidatureFormation)returncloneEntity((CandidatureFormation)source);
if (sourceinstanceofQualif ication)returncloneEntity((Qualif ication)source);
if (sourceinstanceofTutoriel)returncloneEntity((Tutoriel)source);
if (sourceinstanceofSmsPredefini)returncloneEntity((SmsPredefini)source);
if (sourceinstanceofOutBox)returncloneEntity((OutBox)source);
if (sourceinstanceofUtilisateur)returncloneEntity((Utilisateur)source);returnnull;
if (initField==null)handler.saveFieldGroup(value);
else handler.saveFieldGroup(value,initField);
if (EpicamIconConstants.EXAMENSEROLOGIE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENSEROLOGIE_ICON);ExamenSerologieDataProviderprovider=newExamenSerologieDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteExamenSerologie()&&AccessManager.canEditExamenSerologie())listComposite=newExamenSerologieDynaTable(requestFactory,provider,true);
else listComposite=newExamenSerologieDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicCentreDiagTraitEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLieuDit()&&AccessManager.canEditLieuDit())lieuxDits=newImogMultiRelationBox<LieuDitProxy>(lieuxDitsDataProvider,EpicamRenderer.get(),null);
else lieuxDits=newImogMultiRelationBox<LieuDitProxy>(false,lieuxDitsDataProvider,EpicamRenderer.get(),null);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);coordonnees.setEdited(isEdited);lieuxDits.setEdited(isEdited);
if (!AccessManager.canReadCentreDiagTraitDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditCentreDiagTraitDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditCentreDiagTraitAdresse())adresseSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSante.hideButtons(true);districtSanteDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (!lieuxDits.isEmpty()&&lieuxDits.getSelectedEntities().size()>0){LieuDitProxyvalue=lieuxDits.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();LieuDitFormPanelform=newLieuDitFormPanel(requestFactory,value.getId(),relationPopup,"lieuxDits");relationPopup.addWidget(form);relationPopup.show();
if (!lieuxDits.isPresent(value))lieuxDits.addValue(value);
if (initField.equals("lieuxDits")){
if (lieuxDits.isPresent(value))lieuxDits.replaceValue(value);
else lieuxDits.addValue(value,true);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (beaninstanceofProfileProxy){returngetDisplayValue((ProfileProxy)bean);
if (beaninstanceofEntityProfileProxy){returngetDisplayValue((EntityProfileProxy)bean);
if (beaninstanceofFieldGroupProfileProxy){returngetDisplayValue((FieldGroupProfileProxy)bean);
if (beaninstanceofCardEntityProxy){returngetDisplayValue((CardEntityProxy)bean);
if (beaninstanceofFieldGroupProxy){returngetDisplayValue((FieldGroupProxy)bean);
if (beaninstanceofNotif icationProxy){returngetDisplayValue((Notif icationProxy)bean);
if (bean.getName()!=null){value=value+bean.getName()+"";
if (bean.getProfile()!=null)value=value+getDisplayValue(bean.getProfile())+"";
if (bean.getEntity()!=null)value=value+getDisplayValue(bean.getEntity())+"";returnvalue.trim();
if (bean.getProfile()!=null)value=value+getDisplayValue(bean.getProfile())+"";
if (bean.getFieldGroup()!=null)value=value+getDisplayValue(bean.getFieldGroup())+"";returnvalue.trim();
if (bean.getName()!=null){value=value+bean.getName()+"";
if (bean.getEntity()!=null){value=value+getDisplayValue(bean.getEntity())+"";
if (bean.getName()!=null){value=value+bean.getName()+"";
if (bean.getName()!=null){value=value+bean.getName()+"";
if (fieldValue!=null&&!fieldValue.equals("")){
if (beanClass.equals(ProfileProxy.class)){returngetProfileEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(EntityProfileProxy.class)){returngetEntityProfileEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(FieldGroupProfileProxy.class)){returngetFieldGroupProfileEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(FieldGroupProxy.class)){returngetFieldGroupEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CardEntityProxy.class)){returngetCardEntityEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Notif icationProxy.class)){returngetNotif icationEnumDisplayValue(fieldName,fieldValue);
if (fieldName.equals("method")){
if (fieldValue.equals(Notif icationConstants.EMAIL_NOTif ))value=AdminNLS.constants().notif ication_method_mail_option();
else 
if (fieldValue.equals(Notif icationConstants.SMS_NOTif ))value=AdminNLS.constants().notif ication_method_sMS_option();
if (fieldName.equals("formType")){
if (formTypeUtil!=null){List<FormType>formTypes=formTypeUtil.getFormTypes();for(FormTypetype:formTypes){
if (fieldValue.equals(type.getValue()))value=type.getDisplayValue();
if (fieldName.equals("operation")){
if (fieldValue.equals(Notif icationConstants.CREATE_OP))value=AdminNLS.constants().notif ication_operation_create_option();
else 
if (fieldValue.equals(Notif icationConstants.UPDATE_OP))value=AdminNLS.constants().notif ication_operation_update_option();
else 
if (fieldValue.equals(Notif icationConstants.DELETE_OP))value=AdminNLS.constants().notif ication_operation_delete_option();
if (parent!=null){editor=newRendezVousEditor(factory,true);this.initField=initField;
else editor=newRendezVousEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().rendezVous_create_title());createDriver();createNewRendezVous();this.setContent(editor);
if (parent!=null){editor=newRendezVousEditor(factory,true);this.initField=initField;
else editor=newRendezVousEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchRendezVous(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditRendezVous())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("RendezVousformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewRendezVousEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editor.setCasTb(value,isLocked);
if (searchText==null)handler.listMedicament();
else handler.listMedicament(searchText);
if (AccessManager.canReadPriseMedicamenteuseDescription()){Column<PriseMedicamenteuseProxy,String>dateEffectiveColumn=newDateEffectiveColumn();dateEffectiveColumn.setSortable(true);table.addColumn(dateEffectiveColumn,NLS.constants().priseMedicamenteuse_field_s_dateEffective());
if (AccessManager.canCreatePriseMedicamenteuse()&&AccessManager.canEditPriseMedicamenteuse()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/prisemedicamenteuse/",true);
else returnnull;
if (AccessManager.canDeletePriseMedicamenteuse()&&AccessManager.canEditPriseMedicamenteuse()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeletePriseMedicamenteuse()&&AccessManager.canEditPriseMedicamenteuse()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<PriseMedicamenteuseProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().priseMedicamenteuse_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(PriseMedicamenteuseProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getPriseMedicamenteuseRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedPriseMedicamenteuseentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListPriseMedicamenteuseEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportPriseMedicamenteuse()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.PRIS_MED_INIT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=priseMedicamenteuse_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getDateEffective()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateEffective());
if therelationfieldbuttonsshallbehiddenpublicFieldGroupEditor(AdminRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenentity=newImogSingleRelationBox<CardEntityProxy>(entityDataProvider,AdminRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (ProfileUtil.isAdmin())entity=newImogSingleRelationBox<CardEntityProxy>(entityDataProvider,AdminRenderer.get());
else entity=newImogSingleRelationBox<CardEntityProxy>(false,entityDataProvider,AdminRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();name.setEdited(isEdited);entity.setEdited(isEdited);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetEntity(CardEntityProxyvalue,booleanisLocked){entity.setLocked(isLocked);entity.setValue(value);
if (handler==null)initHandler();returnhandler.getById(id);
if (handler==null)initHandler();returnhandler.getById(id);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicLotDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLot(start,numRows,"datePeremption",false,searchCriterions,property);
else result=request.listNonAffectedLotReverse(start,numRows,"datePeremption",false,searchCriterions,property);
else result=request.listLot(start,numRows,"datePeremption",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLot(start,numRows,"datePeremption",false,filterCriteria,property);
else result=request.listNonAffectedLotReverse(start,numRows,"datePeremption",false,filterCriteria,property);
else result=request.listLot(start,numRows,"datePeremption",false,filterCriteria);
else result=request.getLotEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLot(start,numRows,"datePeremption",false,searchCriterions,property);
else result=request.listNonAffectedLotReverse(start,numRows,"datePeremption",false,searchCriterions,property);
else result=request.listLot(start,numRows,"datePeremption",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLot(start,numRows,"datePeremption",false,property);
else result=request.listNonAffectedLotReverse(start,numRows,"datePeremption",false,property);
else result=request.listLot(start,numRows,"datePeremption",false);
if (isFiltered){result.with("CDT");result.with("intrant");result.with("medicament");
else {result.with("intrant");result.with("medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listLot(start,numRows,property,asc,searchCriterions);
else result=request.listLot(start,numRows,property,asc,filterCriteria);
else result=request.getLotEmptyList();
else {
if (searchCriterions!=null)result=request.listLot(start,numRows,property,asc,searchCriterions);
else result=request.listLot(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLot(property,searchCriterions);
else returnrequest.countNonAffectedLotReverse(property,searchCriterions);
else returnrequest.countLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLot(property,filterCriteria);
else returnrequest.countNonAffectedLotReverse(property,filterCriteria);
else returnrequest.countLot(filterCriteria);
else returnrequest.countNonAffectedLot("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLot(property,searchCriterions);
else returnrequest.countNonAffectedLotReverse(property,searchCriterions);
else returnrequest.countLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLot(property);
else returnrequest.countNonAffectedLotReverse(property);
else returnrequest.countLot();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();LotRequestrequest=(LotRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldNumeroBasicCriteriaProxynumeroCrit=request.create(BasicCriteriaProxy.class);numeroCrit.setField("numero");numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);numeroCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_numero()+":"+text+")"+SYMBOL_OR+"");criterionList.add(numeroCrit);//SearchfieldQuantitetry{Integer.valueOf(text);BasicCriteriaProxyquantiteCrit=request.create(BasicCriteriaProxy.class);quantiteCrit.setField("quantite");quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);quantiteCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_quantite()+":"+text+")"+SYMBOL_OR+"");criterionList.add(quantiteCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (EpicamIconConstants.QUALif ICATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.QUALif ICATION_ICON);Qualif icationDataProviderprovider=newQualif icationDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteQualif ication()&&AccessManager.canEditQualif ication())listComposite=newQualif icationDynaTable(requestFactory,provider,true);
else listComposite=newQualif icationDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (AccessManager.canReadExamenATBExamen()){Column<ExamenATBProxy,String>casTbColumn=newCasTbColumn();casTbColumn.setSortable(true);table.addColumn(casTbColumn,NLS.constants().examenATB_field_s_casTb());
if (AccessManager.canReadExamenATBExamen()){Column<ExamenATBProxy,String>dateExamenColumn=newDateExamenColumn();dateExamenColumn.setSortable(true);table.addColumn(dateExamenColumn,NLS.constants().examenATB_field_s_dateExamen());
if (AccessManager.canReadExamenATBExamen()){Column<ExamenATBProxy,String>raisonDepistageColumn=newRaisonDepistageColumn();raisonDepistageColumn.setSortable(true);table.addColumn(raisonDepistageColumn,NLS.constants().examenATB_field_s_raisonDepistage());
if (AccessManager.canReadExamenATBExamen()){Column<ExamenATBProxy,String>resultatColumn=newResultatColumn();resultatColumn.setSortable(true);table.addColumn(resultatColumn,NLS.constants().examenATB_field_s_resultat());
if (AccessManager.canCreateExamenATB()&&AccessManager.canEditExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/examenatb/",true);
else returnnull;
if (AccessManager.canDeleteExamenATB()&&AccessManager.canEditExamenATB()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteExamenATB()&&AccessManager.canEditExamenATB()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ExamenATBProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().examenATB_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ExamenATBProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getExamenATBRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedExamenATBentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListExamenATBEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.EXAM_ATB_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=examenATB_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCasTb()==null)value="";
else value=renderer.getDisplayValue(object.getCasTb());
if (object!=null){
if (object.getDateExamen()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateExamen());
if (object!=null){
if (object.getRaisonDepistage()==null)value="";
else value=renderer.getEnumDisplayValue(ExamenATBProxy.class,"raisonDepistage",object.getRaisonDepistage());
if (object!=null){
if (object.getResultat()==null)value="";
else value=object.getResultat();
if (AccessManager.canReadDetailReceptionMedicamentDescription()){Column<DetailReceptionMedicamentProxy,String>commandeColumn=newCommandeColumn();commandeColumn.setSortable(true);table.addColumn(commandeColumn,NLS.constants().detailReceptionMedicament_field_s_commande());
if (AccessManager.canReadDetailReceptionMedicamentDescription()){Column<DetailReceptionMedicamentProxy,String>detailCommandeColumn=newDetailCommandeColumn();detailCommandeColumn.setSortable(true);table.addColumn(detailCommandeColumn,NLS.constants().detailReceptionMedicament_field_s_detailCommande());
if (AccessManager.canCreateDetailReceptionMedicament()&&AccessManager.canEditDetailReceptionMedicament()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailreceptionmedicament/",true);
else returnnull;
if (AccessManager.canDeleteDetailReceptionMedicament()&&AccessManager.canEditDetailReceptionMedicament()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailReceptionMedicament()&&AccessManager.canEditDetailReceptionMedicament()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailReceptionMedicamentProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailReceptionMedicament_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailReceptionMedicamentProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailReceptionMedicamentRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailReceptionMedicamententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailReceptionMedicamentEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailReceptionMedicament()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_REC_MED_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailReceptionMedicament_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCommande()==null)value="";
else value=renderer.getDisplayValue(object.getCommande());
if (object!=null){
if (object.getDetailCommande()==null)value="";
else value=renderer.getDisplayValue(object.getDetailCommande());
if therelationfieldbuttonsshallbehiddenpublicExamenSerologieEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateTest.setEdited(isEdited);nature.setEdited(isEdited);resultatCD4.setEdited(isEdited);resultatVIH.setEdited(isEdited);
if (!AccessManager.canReadExamenSerologieDescription())dateTest.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())nature.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatCD4.setVisible(false);
if (!AccessManager.canReadExamenSerologieDescription())resultatVIH.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())dateTest.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())nature.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())resultatCD4.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())resultatVIH.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("1"))){resultatCD4.setVisible(true);
else {resultatCD4.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("0"))){resultatVIH.setVisible(true);
else {resultatVIH.setVisible(false);
if (dateTest.getValueWithoutParseException()==null&&dateTest.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateTest");//natureisarequiredfield
if (nature.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nature");
if (errors!=null&&errors.size()>0){List<EditorError>dateTestFieldErrors=newArrayList<EditorError>();List<EditorError>natureFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateTest"))dateTestFieldErrors.add(error);
if (field.equals("nature"))natureFieldErrors.add(error);
if (dateTestFieldErrors.size()>0)dateTest.showErrors(dateTestFieldErrors);
if (natureFieldErrors.size()>0)nature.showErrors(natureFieldErrors);
if (entity.getCasTb()!=null){bck.setCasTb(entity.getCasTb().getId());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(SmsPredefinientity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<SmsPredefini>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<SmsPredefini>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<SmsPredefini>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(SmsPredefinientity:entities)delete(entity);
if (type!=null&&!type.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("type");criteria.setValue(type);junction.add(criteria);
if (objet_francais!=null&&!objet_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("objet.francais");criteria.setValue(objet_francais);junction.add(criteria);
if (objet_english!=null&&!objet_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("objet.english");criteria.setValue(objet_english);junction.add(criteria);
if (message_francais!=null&&!message_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("message.francais");criteria.setValue(message_francais);junction.add(criteria);
if (message_english!=null&&!message_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("message.english");criteria.setValue(message_english);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getLaboratoireReference()!=null){bck.setLaboratoireReference(entity.getLaboratoireReference().getId());
if (entity.getCasTb()!=null){bck.setCasTb(entity.getCasTb().getId());
if (handler==null)initHandler();returnhandler.findById(id);
if (handler==null)initHandler();returnhandler.getById(id);
if therelationfieldbuttonsshallbehiddenpublicRendezVousEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateRendezVous.setEdited(isEdited);commentaire.setEdited(isEdited);honore.setEdited(isEdited);
if (!AccessManager.canReadRendezVousDescription())dateRendezVous.setVisible(false);
if (!AccessManager.canReadRendezVousDescription())commentaire.setVisible(false);
if (!AccessManager.canReadRendezVousDescription())honore.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())dateRendezVous.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())commentaire.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())honore.setVisible(false);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (EpicamIconConstants.LABORATOIREREFERENCE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LABORATOIREREFERENCE_ICON);LaboratoireReferenceDataProviderprovider=newLaboratoireReferenceDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteLaboratoireReference()&&AccessManager.canEditLaboratoireReference())listComposite=newLaboratoireReferenceDynaTable(requestFactory,provider,true);
else listComposite=newLaboratoireReferenceDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicPersonnelEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenqualif ication=newImogMultiRelationBox<Qualif icationProxy>(qualif icationDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateQualif ication()&&AccessManager.canEditQualif ication())qualif ication=newImogMultiRelationBox<Qualif icationProxy>(qualif icationDataProvider,EpicamRenderer.get(),null);
else qualif ication=newImogMultiRelationBox<Qualif icationProxy>(false,qualif icationDataProvider,EpicamRenderer.get(),null);
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();nom.setEdited(isEdited);dateNaissance.setEdited(isEdited);profession.setEdited(isEdited);telephoneUn.setEdited(isEdited);telephoneDeux.setEdited(isEdited);telephoneTrois.setEdited(isEdited);email.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);dateDepart.setEdited(isEdited);dateArrivee.setEdited(isEdited);//readonlyfieldAEteForme.setEdited(false);qualif ication.setEdited(isEdited);niveau.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);actif .setEdited(isEdited);login.setEdited(isEdited);password.setEdited(isEdited);passwordConfirm.setEdited(isEdited);profiles.setEdited(isEdited);idLink.setVisible(!isEdited);synchronizables.setEdited(isEdited);
if (!AccessManager.canReadPersonnelIdentif ication()||!showIdentif icationSection)identif icationSection.setVisible(false);
if (!AccessManager.canReadPersonnelContact()||!showContactSection)contactSection.setVisible(false);
if (!AccessManager.canReadPersonnelSituation()||!showSituationSection)situationSection.setVisible(false);
if (!AccessManager.canReadPersonnelNiveauAccess()||!showNiveauAccessSection)niveauAccessSection.setVisible(false);
if (!ProfileUtil.isAdmin()){administrationSection.setVisible(false);synchronizationSection.setVisible(false);
if (!AccessManager.canEditPersonnelIdentif ication()||!showIdentif icationSection)identif icationSection.setVisible(false);
if (!AccessManager.canEditPersonnelContact()||!showContactSection)contactSection.setVisible(false);
if (!AccessManager.canEditPersonnelSituation()||!showSituationSection)situationSection.setVisible(false);
if (!AccessManager.canEditPersonnelNiveauAccess()||!showNiveauAccessSection)niveauAccessSection.setVisible(false);
if (!ProfileUtil.isAdmin()){administrationSection.setVisible(false);synchronizationSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (allValidation||source.equals(niveau)){
if ((niveau.getValue()!=null&&niveau.getValue().matches("1|2|3"))){region.setVisible(true);
else {region.setVisible(false);
if (allValidation||source.equals(niveau)){
if ((niveau.getValue()!=null&&niveau.getValue().matches("2|3"))){districtSante.setVisible(true);
else {districtSante.setVisible(false);
if (allValidation||source.equals(niveau)){
if ((niveau.getValue()!=null&&niveau.getValue().matches("3"))){CDT.setVisible(true);
else {CDT.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if (!qualif ication.isEmpty()&&qualif ication.getSelectedEntities().size()>0){Qualif icationProxyvalue=qualif ication.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();Qualif icationFormPanelform=newQualif icationFormPanel(requestFactory,value.getId(),relationPopup,"qualif ication");relationPopup.addWidget(form);relationPopup.show();
if (!qualif ication.isPresent(value))qualif ication.addValue(value);
if (initField.equals("qualif ication")){
if (qualif ication.isPresent(value))qualif ication.replaceValue(value);
else qualif ication.addValue(value,true);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (newLogin!=null){
if (currentLogin!=null){
if (!currentLogin.equals(newLogin)){
if (!passwordChanged())delegate.recordError(AdminNLS.constants().login_without_password_error(),null,"login");
else {
if (!passwordChanged())delegate.recordError(AdminNLS.constants().login_without_password_error(),null,"login");
if (!(password1==null&&password2==null)){
if ((password1!=null&&password2==null)||(password2!=null&&password1==null)){delegate.recordError(AdminNLS.constants().password_confirm_error(),null,"password");isValid=false;
if (!password1.equals(password2)){delegate.recordError(AdminNLS.constants().password_confirm_error(),null,"password");isValid=false;
if thepasswordhasbeenchangedpublicbooleanpasswordChanged(){return!(password.getValue()==null&&passwordConfirm.getValue()==null);
if (errors!=null&&errors.size()>0){List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("password")){List<EditorError>fieldErrors=newArrayList<EditorError>();fieldErrors.add(error);passwordConfirm.showErrors(fieldErrors);
if (field.equals("login")){List<EditorError>fieldErrors=newArrayList<EditorError>();fieldErrors.add(error);login.showErrors(fieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (initField==null)handler.saveTransfertReference(value);
else handler.saveTransfertReference(value,initField);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getMedicament()!=null){bck.setMedicament(entity.getMedicament().getId());
if (entity.getIntrant()!=null){bck.setIntrant(entity.getIntrant().getId());
if (searchText==null)handler.listDetailCommandeMedicament();
else handler.listDetailCommandeMedicament(searchText);
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeIntrantEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenintrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateIntrant()&&AccessManager.canEditIntrant())intrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get());
else intrant=newImogSingleRelationBox<IntrantProxy>(false,intrantDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();intrant.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())intrant.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())quantiteEnStock.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())intrant.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())quantiteEnStock.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){intrant.setLocked(isLocked);intrant.setValue(value);
if (intrant.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();IntrantFormPanelform=newIntrantFormPanel(requestFactory,intrant.getValue().getId(),relationPopup,"intrant");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("intrant"))intrant.setValue(value,true);
if (intrant.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"intrant");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>intrantFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("intrant"))intrantFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (intrantFieldErrors.size()>0)intrant.showErrors(intrantFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDynamicFieldTemplateDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse,FormTypeUtilformTypeUtil){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;this.formTypeUtil=formTypeUtil;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){result=request.listDynamicFieldTemplate(start,numRows,"formType",false,searchCriterions);
else {result=request.listDynamicFieldTemplate(start,numRows,"formType",false,filterCriteria);
else result=request.getDynamicFieldTemplateEmptyList();
else {
if (searchCriterions!=null){result=request.listDynamicFieldTemplate(start,numRows,"formType",false,searchCriterions);
else {result=request.listDynamicFieldTemplate(start,numRows,"formType",false);
if (isFiltered){result.with("templateCreator");
else {
if (getSearchCriterions()==null)result=request.listDynamicFieldTemplate(start,numRows,property,asc);
else result=request.listDynamicFieldTemplate(start,numRows,property,asc,getSearchCriterions());result.with("templateCreator");returnresult;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDynamicFieldTemplate(property,searchCriterions);
else returnrequest.countNonAffectedDynamicFieldTemplateReverse(property,searchCriterions);
else returnrequest.countDynamicFieldTemplate(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDynamicFieldTemplate(property,filterCriteria);
else returnrequest.countNonAffectedDynamicFieldTemplateReverse(property,filterCriteria);
else returnrequest.countDynamicFieldTemplate(filterCriteria);
else returnrequest.countNonAffectedDynamicFieldTemplate("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDynamicFieldTemplate(property,searchCriterions);
else returnrequest.countNonAffectedDynamicFieldTemplateReverse(property,searchCriterions);
else returnrequest.countDynamicFieldTemplate(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDynamicFieldTemplate(property);
else returnrequest.countNonAffectedDynamicFieldTemplateReverse(property);
else returnrequest.countDynamicFieldTemplate();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {DynamicFieldTemplateRequestrequest=(DynamicFieldTemplateRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldFieldNameBasicCriteriaProxyfieldNameCrit=request.create(BasicCriteriaProxy.class);fieldNameCrit.setField("fieldName");fieldNameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);fieldNameCrit.setValue(text);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldName()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldNameCrit);//SearchfieldFieldType
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_string_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_STRING);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_text_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_TEXT);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_integer_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_INT);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_float_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_FLOAT);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_date_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_DATE);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_boolean_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_BOOL);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_singleEnumeration_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_ENUM_S);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_multiEnumeration_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_ENUM_M);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_binary_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_BIN);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_image_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_IMG);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_geoField_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_GEO);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(DynFieldsNLS.constants().dynamicField_Template_fieldType_barCode_option().toLowerCase())){BasicCriteriaProxyfieldTypeCrit=request.create(BasicCriteriaProxy.class);fieldTypeCrit.setField("fieldType");fieldTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);fieldTypeCrit.setValue(DFConstants.FIELD_TYPE_BCODE);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_fieldType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(fieldTypeCrit);
if (text.toLowerCase().equals(type.getDisplayValue().toLowerCase())){BasicCriteriaProxyformTypeCrit=request.create(BasicCriteriaProxy.class);formTypeCrit.setField("formType");formTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);formTypeCrit.setValue(type.getValue());buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_formType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(formTypeCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyisDefaultCrit=request.create(BasicCriteriaProxy.class);isDefaultCrit.setField("isDefault");isDefaultCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);isDefaultCrit.setValue(text);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_isDefault()+":"+text+")"+SYMBOL_OR+"");criterionList.add(isDefaultCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyallUsersCrit=request.create(BasicCriteriaProxy.class);allUsersCrit.setField("allUsers");allUsersCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);allUsersCrit.setValue(text);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_allUsers()+":"+text+")"+SYMBOL_OR+"");criterionList.add(allUsersCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyisActivatedCrit=request.create(BasicCriteriaProxy.class);isActivatedCrit.setField("isActivated");isActivatedCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);isActivatedCrit.setValue(text);buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_isActivated()+":"+text+")"+SYMBOL_OR+"");criterionList.add(isActivatedCrit);
if exists
if (isFiltered&&filterCriteria!=null){ImogJunctionProxyconJunctionFilt=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionListFilt=newArrayList<ImogCriterionProxy>();criterionListFilt.add(filterCriteria);criterionListFilt.add(disJunction);conJunctionFilt.setCriterions(criterionListFilt);setSearchCriterions(conJunctionFilt);
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (parent!=null){editor=newEntreeLotEditor(factory,true);this.initField=initField;
else editor=newEntreeLotEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().entreeLot_create_title());createDriver();createNewEntreeLot();this.setContent(editor);
if (parent!=null){editor=newEntreeLotEditor(factory,true);this.initField=initField;
else editor=newEntreeLotEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchEntreeLot(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditEntreeLot())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("EntreeLotformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewEntreeLotEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editor.setLot(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicDynamicFieldEditorForList(ImogRequestFactoryfactory,booleanisNew){this.requestFactory=factory;this.isNew=isNew;templateButton=newPopupButton(DynFieldsNLS.constants().dynamicfield_button_main());templateButton.addStyleName("dfTemplateButton");initWidget(BINDER.createAndBindUi(this));
else returnnull;
else {value.setFieldValue(resultValue);returnvalue;
else if (fieldType.equals(DFConstants.FIELD_TYPE_INT)){fieldValue=newImogIntegerBox();//setdefaultvalueif (isNew){if (template!=null&&template.getDefaultValue()!=null){try{IntegerdefaultValue=NumericUtil.parseToInteger(template.getDefaultValue());((ImogIntegerBox)fieldValue).setValue(defaultValue);
else if (fieldType.equals(DFConstants.FIELD_TYPE_FLOAT)){fieldValue=newImogDoubleBox();//setdefaultvalueif (isNew){if (template!=null&&template.getDefaultValue()!=null){try{DoubledefaultValue=NumericUtil.parseToDouble(template.getDefaultValue());((ImogDoubleBox)fieldValue).setValue(defaultValue);
else if (fieldType.equals(DFConstants.FIELD_TYPE_DATE)){fieldValue=newImogDateBox(true);//setdefaultvalueif (isNew){if (template!=null&&template.getDefaultValue()!=null){if (template.getDefaultValue().equals(DFConstants.CURRENT_DATE))((ImogDateBox)fieldValue).setValue(newDate());
else {try{DatedefaultValue=DateUtil.parseDate(template.getDefaultValue());((ImogDateBox)fieldValue).setValue(defaultValue);
else if (fieldType.equals(DFConstants.FIELD_TYPE_BOOL)){fieldValue=newImogBooleanBox();if (isNew){//setdefaultvalueif (template!=null&&template.getDefaultValue()!=null){BooleandefaultValue=newBoolean(template.getDefaultValue());((ImogBooleanBox)fieldValue).setValue(defaultValue);
else {//setvalueif (inValue!=null)fieldValue.setValue(newBoolean(inValue));
else fieldValue.setValue(null);
else if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_S)){fieldValue=newImogSingleEnumBox();ImogSingleEnumBoxlist=(ImogSingleEnumBox)fieldValue;if (template!=null&&template.getParameters()!=null){StringstrValues=template.getParameters();String[]enumValues=strValues.split(DFConstants.ENUM_SEPARATOR);for(StringenumValue:enumValues){if (!enumValue.trim().isEmpty())list.addItem(enumValue,enumValue);
else {//setvaluefieldValue.setValue(inValue);
else if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_M)){fieldValue=newImogMultiEnumBox();ImogMultiEnumBoxlist=(ImogMultiEnumBox)fieldValue;if (template!=null&&template.getParameters()!=null){StringstrValues=template.getParameters();String[]enumValues=strValues.split(DFConstants.ENUM_SEPARATOR);for(StringenumValue:enumValues){if (!enumValue.trim().isEmpty()){CheckBoxchk=newCheckBox(enumValue);chk.setFormValue(enumValue);list.addItem(chk);
else if (fieldType.equals(DFConstants.FIELD_TYPE_BIN)){fieldValue=newImogBinaryBox(requestFactory);if (inValue!=null&&!inValue.isEmpty()){BinaryRequestrequest=requestFactory.binaryRequest();request.getBinary(inValue).fire(newReceiver<BinaryProxy>(){@OverridepublicvoidonSuccess(BinaryProxyresponse){fieldValue.setValue(response);
else if (fieldType.equals(DFConstants.FIELD_TYPE_IMG)){fieldValue=newImogPhotoBox(requestFactory);if (inValue!=null&&!inValue.isEmpty()){BinaryRequestrequest=requestFactory.binaryRequest();request.getBinary(inValue).fire(newReceiver<BinaryProxy>(){@OverridepublicvoidonSuccess(BinaryProxyresponse){fieldValue.setValue(response);
else if (fieldType.equals(DFConstants.FIELD_TYPE_GEO)){fieldValue=newImogGeoBoxAsString();fieldValue.setValue(inValue);
else if (fieldType.equals(DFConstants.FIELD_TYPE_BCODE)){fieldValue=newImogQRCodeBox(requestFactory);fieldValue.setValue(inValue);
else {fieldValue=newImogTextBox();fieldValue.setValue(inValue);
if definedStringminValueStr=null;StringmaxValueStr=null;DynamicFieldTemplateProxytemplate=value.getFieldTemplate();if (template!=null){if (template.getMinimumValue()!=null&&!template.getMinimumValue().isEmpty())minValueStr=template.getMinimumValue();if (template.getMaximumValue()!=null&&!template.getMaximumValue().isEmpty())maxValueStr=template.getMaximumValue();
else if (fieldType.equals(DFConstants.FIELD_TYPE_INT)){try{IntegerintResult=((ImogIntegerBox)fieldValue).getValueWithParseException();if (intResult!=null){result=intResult.toString();//validateminvalueif (minValueStr!=null){IntegerminValue=NumericUtil.parseToInteger(minValueStr);if (intResult<minValue)delegate.recordError(BaseNLS.messages().error_min_num(minValueStr),result,null);
else if (fieldType.equals(DFConstants.FIELD_TYPE_FLOAT)){try{DoubledoubleResult=((ImogDoubleBox)fieldValue).getValueWithParseException();if (doubleResult!=null){result=doubleResult.toString();//validateminvalueif (minValueStr!=null){DoubleminValue=NumericUtil.parseToDouble(minValueStr);if (doubleResult<minValue)delegate.recordError(BaseNLS.messages().error_min_num(minValueStr),result,null);
else if (fieldType.equals(DFConstants.FIELD_TYPE_DATE)){try{Daterdate=((ImogDateBox)fieldValue).getValueWithParseException();if (rdate!=null){result=DateUtil.getDate(rdate);//validateminvalueif (minValueStr!=null){DateminValue=DateUtil.parseDate(minValueStr);if (rdate.before(minValue))delegate.recordError(BaseNLS.messages().error_min_date(minValueStr),result,null);
else if (fieldType.equals(DFConstants.FIELD_TYPE_BOOL)){Booleanrboolean=(Boolean)fieldValue.getValue();if (rboolean!=null)result=rboolean.toString();
else if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_S)){Stringrstring=(String)fieldValue.getValue();if (rstring!=null){result=rstring.toString();
else if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_M)){Stringrstring=(String)fieldValue.getValue();if (rstring!=null)result=rstring.toString();
else if (fieldType.equals(DFConstants.FIELD_TYPE_BIN)){BinaryProxyrbin=(BinaryProxy)fieldValue.getValue();if (rbin!=null){result=rbin.getId();
else if (fieldType.equals(DFConstants.FIELD_TYPE_IMG)){BinaryProxyrbin=(BinaryProxy)fieldValue.getValue();if (rbin!=null){result=rbin.getId();
else if (fieldType.equals(DFConstants.FIELD_TYPE_GEO)){try{Stringrstring=((ImogGeoBoxAsString)fieldValue).getValueWithParseException();if (rstring!=null)result=rstring.toString();
else if (fieldType.equals(DFConstants.FIELD_TYPE_BCODE)){Stringrstring=(String)fieldValue.getValue();if (rstring!=null)result=rstring.toString();
else {Stringrstring=(String)fieldValue.getValue();if (rstring!=null)result=rstring.toString();
if thefieldisrequired*@paramresultprivatevoidvalidateRequiredValueValue(Stringresult,DynamicFieldTemplateProxytemplate){if (template!=null){if (template.getRequiredValue()!=null&&template.getRequiredValue()){if (result==null||result.isEmpty())delegate.recordError(BaseNLS.messages().error_required(),result,null);
if abinaryisbeinguploadedbytheeditor*@returntrue
if theeditorisuploadingabinarypublicbooleanisUploading(){booleanresult=false;
if (fieldValue!=null){if (fieldValueinstanceofImogBinaryBox){ImogBinaryBoxfield=(ImogBinaryBox)fieldValue;returnfield.isUploading();
else 
if (fieldValueinstanceofImogPhotoBox){ImogPhotoBoxfield=(ImogPhotoBox)fieldValue;returnfield.isUploading();
if (templateButton!=null){registrations.add(requestFactory.getEventBus().addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){templateButton.hidePopup();
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicTutorielDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTutoriel(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedTutorielReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listTutoriel(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTutoriel(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedTutorielReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listTutoriel(start,numRows,"nom",true,filterCriteria);
else result=request.getTutorielEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTutoriel(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedTutorielReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listTutoriel(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTutoriel(start,numRows,"nom",true,property);
else result=request.listNonAffectedTutorielReverse(start,numRows,"nom",true,property);
else result=request.listTutoriel(start,numRows,"nom",true);
if (isFiltered){result.with("nom");
else {result.with("nom");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listTutoriel(start,numRows,property,asc,searchCriterions);
else result=request.listTutoriel(start,numRows,property,asc,filterCriteria);
else result=request.getTutorielEmptyList();
else {
if (searchCriterions!=null)result=request.listTutoriel(start,numRows,property,asc,searchCriterions);
else result=request.listTutoriel(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTutoriel(property,searchCriterions);
else returnrequest.countNonAffectedTutorielReverse(property,searchCriterions);
else returnrequest.countTutoriel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTutoriel(property,filterCriteria);
else returnrequest.countNonAffectedTutorielReverse(property,filterCriteria);
else returnrequest.countTutoriel(filterCriteria);
else returnrequest.countNonAffectedTutoriel("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTutoriel(property,searchCriterions);
else returnrequest.countNonAffectedTutorielReverse(property,searchCriterions);
else returnrequest.countTutoriel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTutoriel(property);
else returnrequest.countNonAffectedTutorielReverse(property);
else returnrequest.countTutoriel();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();TutorielRequestrequest=(TutorielRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().tutoriel_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldReferenceBasicCriteriaProxyreferenceCrit=request.create(BasicCriteriaProxy.class);referenceCrit.setField("reference");referenceCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);referenceCrit.setValue(text);buffer.append("("+NLS.constants().tutoriel_field_reference()+":"+text+")"+SYMBOL_OR+"");criterionList.add(referenceCrit);//SearchfieldType
if (text.toLowerCase().equals(NLS.constants().tutoriel_type_texte_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.TUTORIEL_TYPE_TEXTE);buffer.append("("+NLS.constants().tutoriel_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().tutoriel_type_audio_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.TUTORIEL_TYPE_AUDIO);buffer.append("("+NLS.constants().tutoriel_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().tutoriel_type_video_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.TUTORIEL_TYPE_VIDEO);buffer.append("("+NLS.constants().tutoriel_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listCommande();
else handler.listCommande(searchText);
if (host!=null){url.append(host);
if (port!=PORT_UNSPECif IED){url.append(":").append(port);
if (path!=null&&!"".equals(path)){url.append("/").append(path);
if (val!=null){url.append(val);
if (hash!=null){url.append("#").append(hash);
if (hash!=null&&hash.startsWith("#")){hash=hash.substring(1);
if (host!=null&&host.contains(":")){String[]parts=host.split(":");
if (parts.length>2){thrownewIllegalArgumentException("Hostcontainsmorethanonecolon:"+host);
if (values.length==0){thrownewIllegalArgumentException("Valuescannotbeempty.TryusingremoveParameterinstead.");
if (path!=null&&path.startsWith("/")){path=path.substring(1);
if (protocol.endsWith("://")){protocol=protocol.substring(0,protocol.length()-3);
else 
if (protocol.endsWith(":/")){protocol=protocol.substring(0,protocol.length()-2);
else 
if (protocol.endsWith(":")){protocol=protocol.substring(0,protocol.length()-1);
if (protocol.contains(":")){thrownewIllegalArgumentException("Invalidprotocol:"+protocol);
if valueisnullprivatevoidassertNotNull(Objectvalue,Stringmessage)throwsIllegalArgumentException{
if (value==null){thrownewIllegalArgumentException(message);
if true,throwastateexceptioninstead*@throwsIllegalArgumentException
if valueisnull*@throwsIllegalStateException
if valueisnullandisStateistrueprivatevoidassertNotNullOrEmpty(Stringvalue,Stringmessage,booleanisState)throwsIllegalArgumentException{
if (value==null||value.length()==0){
if (isState){thrownewIllegalStateException(message);
else {thrownewIllegalArgumentException(message);
if (parent!=null){editor=newExamenSerologieEditor(factory,true);this.initField=initField;
else editor=newExamenSerologieEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().examenSerologie_create_title());createDriver();createNewExamenSerologie();this.setContent(editor);
if (parent!=null){editor=newExamenSerologieEditor(factory,true);this.initField=initField;
else editor=newExamenSerologieEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchExamenSerologie(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditExamenSerologie())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("ExamenSerologieformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewExamenSerologieEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if (EpicamIconConstants.INVENTAIRE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.INVENTAIRE_ICON);InventaireDataProviderprovider=newInventaireDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteInventaire()&&AccessManager.canEditInventaire())listComposite=newInventaireDynaTable(requestFactory,provider,true);
else listComposite=newInventaireDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"CDT.id"),personnel.getCDT().getId());
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<RendezVousProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<RendezVousEditorNestedRow>editors=editor.getEditors();RendezVousEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(RendezVousEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(RendezVousEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(RendezVousEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(RendezVousEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){RendezVousProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.CDT.id"),personnel.getCDT().getId());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicCommandeDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCommande(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedCommandeReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listCommande(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCommande(start,numRows,"date",false,filterCriteria,property);
else result=request.listNonAffectedCommandeReverse(start,numRows,"date",false,filterCriteria,property);
else result=request.listCommande(start,numRows,"date",false,filterCriteria);
else result=request.getCommandeEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCommande(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedCommandeReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listCommande(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCommande(start,numRows,"date",false,property);
else result=request.listNonAffectedCommandeReverse(start,numRows,"date",false,property);
else result=request.listCommande(start,numRows,"date",false);
if (isFiltered){result.with("CDT");
else {result.with("CDT");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listCommande(start,numRows,property,asc,searchCriterions);
else result=request.listCommande(start,numRows,property,asc,filterCriteria);
else result=request.getCommandeEmptyList();
else {
if (searchCriterions!=null)result=request.listCommande(start,numRows,property,asc,searchCriterions);
else result=request.listCommande(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCommande(property,searchCriterions);
else returnrequest.countNonAffectedCommandeReverse(property,searchCriterions);
else returnrequest.countCommande(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCommande(property,filterCriteria);
else returnrequest.countNonAffectedCommandeReverse(property,filterCriteria);
else returnrequest.countCommande(filterCriteria);
else returnrequest.countNonAffectedCommande("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCommande(property,searchCriterions);
else returnrequest.countNonAffectedCommandeReverse(property,searchCriterions);
else returnrequest.countCommande(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCommande(property);
else returnrequest.countNonAffectedCommandeReverse(property);
else returnrequest.countCommande();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();CommandeRequestrequest=(CommandeRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxydateCrit=request.create(BasicCriteriaProxy.class);dateCrit.setField("date");dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateCrit.setValue(text);buffer.append("("+NLS.constants().commande_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (initField==null)handler.saveEntreeLot(value);
else handler.saveEntreeLot(value,initField);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicHorsUsageFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newHorsUsageEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newHorsUsageEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newHorsUsageEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newHorsUsageEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.HORSUSAGE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.HORSUSAGE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicHorsUsageFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailReceptionIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailReceptionIntrantEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailReceptionIntrantEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailReceptionIntrantEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailReceptionIntrantEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILRECEPTIONINTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRECEPTIONINTRANT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailReceptionIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){editorWorkflow.setReception(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editorWorkflow.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeIntrantProxyvalue,booleanisLocked){editorWorkflow.setDetailCommande(value,isLocked);
if (initField==null)handler.saveInventaire(value);
else handler.saveInventaire(value,initField);
if (AccessManager.canReadDistrictSanteDescription()){Column<DistrictSanteProxy,String>regionColumn=newRegionColumn();regionColumn.setSortable(true);table.addColumn(regionColumn,NLS.constants().districtSante_field_s_region());
if (AccessManager.canReadDistrictSanteDescription()){Column<DistrictSanteProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().districtSante_field_s_nom());
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/districtsante/",true);
else returnnull;
if (AccessManager.canDeleteDistrictSante()&&AccessManager.canEditDistrictSante()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDistrictSante()&&AccessManager.canEditDistrictSante()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DistrictSanteProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().districtSante_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DistrictSanteProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDistrictSanteRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDistrictSanteentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDistrictSanteEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DST_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=districtSante_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getRegion()==null)value="";
else value=renderer.getDisplayValue(object.getRegion());
if (object!=null){
if (object.getNom()==null)value="";
else value=renderer.getLocalizedText(object.getNom());
if (locale.equals("fr"))return"nom.francais";
if (locale.equals("en"))return"nom.english";return"nom";
if (handler==null)initHandler();returnhandler.getById(id);
if (parent!=null){editor=newInventaireEditor(factory,true);this.initField=initField;
else editor=newInventaireEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().inventaire_create_title());createDriver();createNewInventaire();this.setContent(editor);
if (parent!=null){editor=newInventaireEditor(factory,true);this.initField=initField;
else editor=newInventaireEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchInventaire(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (details!=null&&details.size()>0){for(DetailInventaireProxyitem:details){
if (AccessManager.canEditInventaire())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Inventaireformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewInventaireEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicInventaireEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();date.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);details.setEdited(isEdited);
if (!AccessManager.canReadInventaireInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canEditInventaireInformationsDepart())informationsDepartSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());commonFieldUtil.setRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());commonFieldUtil.setDistrict(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);commonFieldUtil.setRegion(proxy);
if (field.equals(CDT)){updateCDTInNestedForms(CDT.getValue());
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();commonFieldUtil.setCdt(cdtValue);
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);commonFieldUtil.setRegion(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);commonFieldUtil.setDistrict(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (editedValue!=null){setCDTInNestedForms(editedValue.getCDT());//setsvalueforcommonfieldswhencreatinganewlotinchildeditorscommonFieldUtil.setRegion(editedValue.getRegion());commonFieldUtil.setDistrict(editedValue.getDistrictSante());commonFieldUtil.setCdt(editedValue.getCDT());
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//cDTisarequiredfield
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//detailsnestedformshallbevalidateddetails.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>cDTFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (EpicamIconConstants.DETAILCOMMANDEINTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILCOMMANDEINTRANT_ICON);DetailCommandeIntrantDataProviderprovider=newDetailCommandeIntrantDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant())listComposite=newDetailCommandeIntrantDynaTable(requestFactory,provider,true);
else listComposite=newDetailCommandeIntrantDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (actor.getProfiles()==null){return;
if (isAdmin){return;
if (profile.getFieldGroupProfiles()==null){continue;
if ("patient.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientIdentif ication&=group.getRead();
if (group.getWrite()!=null){canEditPatientIdentif ication&=group.getWrite();
else 
if ("patient.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientContact&=group.getRead();
if (group.getWrite()!=null){canEditPatientContact&=group.getWrite();
else 
if ("patient.personnecontact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientPersonneContact&=group.getRead();
if (group.getWrite()!=null){canEditPatientPersonneContact&=group.getWrite();
else 
if ("patient.tuberculose".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientTuberculose&=group.getRead();
if (group.getWrite()!=null){canEditPatientTuberculose&=group.getWrite();
else 
if ("patient.examens".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientExamens&=group.getRead();
if (group.getWrite()!=null){canEditPatientExamens&=group.getWrite();
else 
if ("casindex.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasIndexDescription&=group.getRead();
if (group.getWrite()!=null){canEditCasIndexDescription&=group.getWrite();
else 
if ("castuberculose.informations".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseInformations&=group.getRead();
if (group.getWrite()!=null){canEditCasTuberculoseInformations&=group.getWrite();
else 
if ("castuberculose.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseExamen&=group.getRead();
if (group.getWrite()!=null){canEditCasTuberculoseExamen&=group.getWrite();
else 
if ("castuberculose.traitement".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseTraitement&=group.getRead();
if (group.getWrite()!=null){canEditCasTuberculoseTraitement&=group.getWrite();
else 
if ("castuberculose.fintraitement".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseFinTraitement&=group.getRead();
if (group.getWrite()!=null){canEditCasTuberculoseFinTraitement&=group.getWrite();
else 
if ("examenserologie.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenSerologieDescription&=group.getRead();
if (group.getWrite()!=null){canEditExamenSerologieDescription&=group.getWrite();
else 
if ("examenbiologique.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenBiologiqueDescription&=group.getRead();
if (group.getWrite()!=null){canEditExamenBiologiqueDescription&=group.getWrite();
else 
if ("examenmicroscopie.centreexamen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenMicroscopieCentreExamen&=group.getRead();
if (group.getWrite()!=null){canEditExamenMicroscopieCentreExamen&=group.getWrite();
else 
if ("examenmicroscopie.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenMicroscopieExamen&=group.getRead();
if (group.getWrite()!=null){canEditExamenMicroscopieExamen&=group.getWrite();
else 
if ("examenatb.centreexamen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenATBCentreExamen&=group.getRead();
if (group.getWrite()!=null){canEditExamenATBCentreExamen&=group.getWrite();
else 
if ("examenatb.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenATBExamen&=group.getRead();
if (group.getWrite()!=null){canEditExamenATBExamen&=group.getWrite();
else 
if ("prisemedicamenteuse.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPriseMedicamenteuseDescription&=group.getRead();
if (group.getWrite()!=null){canEditPriseMedicamenteuseDescription&=group.getWrite();
else 
if ("rendezvous.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRendezVousDescription&=group.getRead();
if (group.getWrite()!=null){canEditRendezVousDescription&=group.getWrite();
else 
if ("transfertreference.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTransfertReferenceInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canEditTransfertReferenceInformationsDepart&=group.getWrite();
else 
if ("transfertreference.informationarrivee".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTransfertReferenceInformationArrivee&=group.getRead();
if (group.getWrite()!=null){canEditTransfertReferenceInformationArrivee&=group.getWrite();
else 
if ("lot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLotDescription&=group.getRead();
if (group.getWrite()!=null){canEditLotDescription&=group.getWrite();
else 
if ("horsusage.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadHorsUsageDescription&=group.getRead();
if (group.getWrite()!=null){canEditHorsUsageDescription&=group.getWrite();
else 
if ("entreelot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadEntreeLotDescription&=group.getRead();
if (group.getWrite()!=null){canEditEntreeLotDescription&=group.getWrite();
else 
if ("sortielot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadSortieLotDescription&=group.getRead();
if (group.getWrite()!=null){canEditSortieLotDescription&=group.getWrite();
else 
if ("commande.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canEditCommandeInformationsDepart&=group.getWrite();
else 
if ("commande.regionapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeRegionApprobation&=group.getRead();
if (group.getWrite()!=null){canEditCommandeRegionApprobation&=group.getWrite();
else 
if ("commande.gtcapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeGtcApprobation&=group.getRead();
if (group.getWrite()!=null){canEditCommandeGtcApprobation&=group.getWrite();
else 
if ("detailcommandemedicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailCommandeMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailCommandeMedicamentDescription&=group.getWrite();
else 
if ("detailcommandeintrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailCommandeIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailCommandeIntrantDescription&=group.getWrite();
else 
if ("reception.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadReceptionDescription&=group.getRead();
if (group.getWrite()!=null){canEditReceptionDescription&=group.getWrite();
else 
if ("detailreceptionmedicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailReceptionMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailReceptionMedicamentDescription&=group.getWrite();
else 
if ("detailreceptionintrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailReceptionIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailReceptionIntrantDescription&=group.getWrite();
else 
if ("ravitaillement.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canEditRavitaillementInformationsDepart&=group.getWrite();
else 
if ("ravitaillement.informationarrivee".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementInformationArrivee&=group.getRead();
if (group.getWrite()!=null){canEditRavitaillementInformationArrivee&=group.getWrite();
else 
if ("ravitaillement.detail".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementDetail&=group.getRead();
if (group.getWrite()!=null){canEditRavitaillementDetail&=group.getWrite();
else 
if ("detailravitaillement.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailRavitaillementDescription&=group.getWrite();
else 
if ("detailravitaillement.sortie".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementSortie&=group.getRead();
if (group.getWrite()!=null){canEditDetailRavitaillementSortie&=group.getWrite();
else 
if ("detailravitaillement.entree".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementEntree&=group.getRead();
if (group.getWrite()!=null){canEditDetailRavitaillementEntree&=group.getWrite();
else 
if ("inventaire.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadInventaireInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canEditInventaireInformationsDepart&=group.getWrite();
else 
if ("detailinventaire.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailInventaireDescription&=group.getRead();
if (group.getWrite()!=null){canEditDetailInventaireDescription&=group.getWrite();
else 
if ("personnel.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelIdentif ication&=group.getRead();
if (group.getWrite()!=null){canEditPersonnelIdentif ication&=group.getWrite();
else 
if ("personnel.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelContact&=group.getRead();
if (group.getWrite()!=null){canEditPersonnelContact&=group.getWrite();
else 
if ("personnel.situation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelSituation&=group.getRead();
if (group.getWrite()!=null){canEditPersonnelSituation&=group.getWrite();
else 
if ("personnel.niveauaccess".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelNiveauAccess&=group.getRead();
if (group.getWrite()!=null){canEditPersonnelNiveauAccess&=group.getWrite();
else 
if ("departpersonnel.personnel".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDepartPersonnelPersonnel&=group.getRead();
if (group.getWrite()!=null){canEditDepartPersonnelPersonnel&=group.getWrite();
else 
if ("departpersonnel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDepartPersonnelDescription&=group.getRead();
if (group.getWrite()!=null){canEditDepartPersonnelDescription&=group.getWrite();
else 
if ("arriveepersonnel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadArriveePersonnelDescription&=group.getRead();
if (group.getWrite()!=null){canEditArriveePersonnelDescription&=group.getWrite();
else 
if ("region.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegionDescription&=group.getRead();
if (group.getWrite()!=null){canEditRegionDescription&=group.getWrite();
else 
if ("region.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegionAdresse&=group.getRead();
if (group.getWrite()!=null){canEditRegionAdresse&=group.getWrite();
else 
if ("districtsante.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDistrictSanteDescription&=group.getRead();
if (group.getWrite()!=null){canEditDistrictSanteDescription&=group.getWrite();
else 
if ("districtsante.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDistrictSanteAdresse&=group.getRead();
if (group.getWrite()!=null){canEditDistrictSanteAdresse&=group.getWrite();
else 
if ("centrediagtrait.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCentreDiagTraitDescription&=group.getRead();
if (group.getWrite()!=null){canEditCentreDiagTraitDescription&=group.getWrite();
else 
if ("centrediagtrait.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCentreDiagTraitAdresse&=group.getRead();
if (group.getWrite()!=null){canEditCentreDiagTraitAdresse&=group.getWrite();
else 
if ("laboratoirereference.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLaboratoireReferenceDescription&=group.getRead();
if (group.getWrite()!=null){canEditLaboratoireReferenceDescription&=group.getWrite();
else 
if ("laboratoirereference.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLaboratoireReferenceAdresse&=group.getRead();
if (group.getWrite()!=null){canEditLaboratoireReferenceAdresse&=group.getWrite();
else 
if ("lieudit.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLieuDitDescription&=group.getRead();
if (group.getWrite()!=null){canEditLieuDitDescription&=group.getWrite();
else 
if ("lieudit.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLieuDitAdresse&=group.getRead();
if (group.getWrite()!=null){canEditLieuDitAdresse&=group.getWrite();
else 
if ("regime.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegimeDescription&=group.getRead();
if (group.getWrite()!=null){canEditRegimeDescription&=group.getWrite();
else 
if ("prisemedicamentregime.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPriseMedicamentRegimeDescription&=group.getRead();
if (group.getWrite()!=null){canEditPriseMedicamentRegimeDescription&=group.getWrite();
else 
if ("medicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canEditMedicamentDescription&=group.getWrite();
else 
if ("intrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canEditIntrantDescription&=group.getWrite();
else 
if ("formation.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadFormationDescription&=group.getRead();
if (group.getWrite()!=null){canEditFormationDescription&=group.getWrite();
else 
if ("candidatureformation.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationDescription&=group.getRead();
if (group.getWrite()!=null){canEditCandidatureFormationDescription&=group.getWrite();
else 
if ("candidatureformation.regionapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationRegionApprobation&=group.getRead();
if (group.getWrite()!=null){canEditCandidatureFormationRegionApprobation&=group.getWrite();
else 
if ("candidatureformation.gtcapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationGtcApprobation&=group.getRead();
if (group.getWrite()!=null){canEditCandidatureFormationGtcApprobation&=group.getWrite();
else 
if ("qualif ication.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadQualif icationDescription&=group.getRead();
if (group.getWrite()!=null){canEditQualif icationDescription&=group.getWrite();
else 
if ("tutoriel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTutorielDescription&=group.getRead();
if (group.getWrite()!=null){canEditTutorielDescription&=group.getWrite();
else 
if ("smspredefini.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadSmsPredefiniDescription&=group.getRead();
if (group.getWrite()!=null){canEditSmsPredefiniDescription&=group.getWrite();
else 
if ("outbox.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadOutBoxAdresse&=group.getRead();
if (group.getWrite()!=null){canEditOutBoxAdresse&=group.getWrite();
else 
if ("outbox.messageinformation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadOutBoxMessageInformation&=group.getRead();
if (group.getWrite()!=null){canEditOutBoxMessageInformation&=group.getWrite();
else 
if ("utilisateur.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadUtilisateurIdentif ication&=group.getRead();
if (group.getWrite()!=null){canEditUtilisateurIdentif ication&=group.getWrite();
else 
if ("utilisateur.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadUtilisateurContact&=group.getRead();
if (group.getWrite()!=null){canEditUtilisateurContact&=group.getWrite();
if thecurrentusercanaccessadomainobjectproperty*@parambeantheobjectwhosepropertyaccesshastobechecked*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessanObjectpropertypublicbooleancanAccessProperty(Objectbean,Stringproperty){
if (property.equals("password")){returnfalse;
if (isAdmin){returntrue;
if (beaninstanceofPatient){returncanAccessPatientProperty(property);
if (beaninstanceofCasIndex){returncanAccessCasIndexProperty(property);
if (beaninstanceofCasTuberculose){returncanAccessCasTuberculoseProperty(property);
if (beaninstanceofExamenSerologie){returncanAccessExamenSerologieProperty(property);
if (beaninstanceofExamenBiologique){returncanAccessExamenBiologiqueProperty(property);
if (beaninstanceofExamenMicroscopie){returncanAccessExamenMicroscopieProperty(property);
if (beaninstanceofExamenATB){returncanAccessExamenATBProperty(property);
if (beaninstanceofPriseMedicamenteuse){returncanAccessPriseMedicamenteuseProperty(property);
if (beaninstanceofRendezVous){returncanAccessRendezVousProperty(property);
if (beaninstanceofTransfertReference){returncanAccessTransfertReferenceProperty(property);
if (beaninstanceofLot){returncanAccessLotProperty(property);
if (beaninstanceofHorsUsage){returncanAccessHorsUsageProperty(property);
if (beaninstanceofEntreeLot){returncanAccessEntreeLotProperty(property);
if (beaninstanceofSortieLot){returncanAccessSortieLotProperty(property);
if (beaninstanceofCommande){returncanAccessCommandeProperty(property);
if (beaninstanceofDetailCommandeMedicament){returncanAccessDetailCommandeMedicamentProperty(property);
if (beaninstanceofDetailCommandeIntrant){returncanAccessDetailCommandeIntrantProperty(property);
if (beaninstanceofReception){returncanAccessReceptionProperty(property);
if (beaninstanceofDetailReceptionMedicament){returncanAccessDetailReceptionMedicamentProperty(property);
if (beaninstanceofDetailReceptionIntrant){returncanAccessDetailReceptionIntrantProperty(property);
if (beaninstanceofRavitaillement){returncanAccessRavitaillementProperty(property);
if (beaninstanceofDetailRavitaillement){returncanAccessDetailRavitaillementProperty(property);
if (beaninstanceofInventaire){returncanAccessInventaireProperty(property);
if (beaninstanceofDetailInventaire){returncanAccessDetailInventaireProperty(property);
if (beaninstanceofPersonnel){returncanAccessPersonnelProperty(property);
if (beaninstanceofDepartPersonnel){returncanAccessDepartPersonnelProperty(property);
if (beaninstanceofArriveePersonnel){returncanAccessArriveePersonnelProperty(property);
if (beaninstanceofRegion){returncanAccessRegionProperty(property);
if (beaninstanceofDistrictSante){returncanAccessDistrictSanteProperty(property);
if (beaninstanceofCentreDiagTrait){returncanAccessCentreDiagTraitProperty(property);
if (beaninstanceofLaboratoireReference){returncanAccessLaboratoireReferenceProperty(property);
if (beaninstanceofLieuDit){returncanAccessLieuDitProperty(property);
if (beaninstanceofRegime){returncanAccessRegimeProperty(property);
if (beaninstanceofPriseMedicamentRegime){returncanAccessPriseMedicamentRegimeProperty(property);
if (beaninstanceofMedicament){returncanAccessMedicamentProperty(property);
if (beaninstanceofIntrant){returncanAccessIntrantProperty(property);
if (beaninstanceofFormation){returncanAccessFormationProperty(property);
if (beaninstanceofCandidatureFormation){returncanAccessCandidatureFormationProperty(property);
if (beaninstanceofQualif ication){returncanAccessQualif icationProperty(property);
if (beaninstanceofTutoriel){returncanAccessTutorielProperty(property);
if (beaninstanceofSmsPredefini){returncanAccessSmsPredefiniProperty(property);
if (beaninstanceofOutBox){returncanAccessOutBoxProperty(property);
if (beaninstanceofUtilisateur){returncanAccessUtilisateurProperty(property);
if thecurrentusercanupdateadomainobjectproperty*@parambeantheobjectwhosepropertyupdateprivilegehastobechecked*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateanObjectpropertypublicbooleancanUpdateProperty(Objectbean,Stringproperty){
if (isAdmin){returntrue;
if (beaninstanceofPatient){returncanUpdatePatientProperty(property);
if (beaninstanceofCasIndex){returncanUpdateCasIndexProperty(property);
if (beaninstanceofCasTuberculose){returncanUpdateCasTuberculoseProperty(property);
if (beaninstanceofExamenSerologie){returncanUpdateExamenSerologieProperty(property);
if (beaninstanceofExamenBiologique){returncanUpdateExamenBiologiqueProperty(property);
if (beaninstanceofExamenMicroscopie){returncanUpdateExamenMicroscopieProperty(property);
if (beaninstanceofExamenATB){returncanUpdateExamenATBProperty(property);
if (beaninstanceofPriseMedicamenteuse){returncanUpdatePriseMedicamenteuseProperty(property);
if (beaninstanceofRendezVous){returncanUpdateRendezVousProperty(property);
if (beaninstanceofTransfertReference){returncanUpdateTransfertReferenceProperty(property);
if (beaninstanceofLot){returncanUpdateLotProperty(property);
if (beaninstanceofHorsUsage){returncanUpdateHorsUsageProperty(property);
if (beaninstanceofEntreeLot){returncanUpdateEntreeLotProperty(property);
if (beaninstanceofSortieLot){returncanUpdateSortieLotProperty(property);
if (beaninstanceofCommande){returncanUpdateCommandeProperty(property);
if (beaninstanceofDetailCommandeMedicament){returncanUpdateDetailCommandeMedicamentProperty(property);
if (beaninstanceofDetailCommandeIntrant){returncanUpdateDetailCommandeIntrantProperty(property);
if (beaninstanceofReception){returncanUpdateReceptionProperty(property);
if (beaninstanceofDetailReceptionMedicament){returncanUpdateDetailReceptionMedicamentProperty(property);
if (beaninstanceofDetailReceptionIntrant){returncanUpdateDetailReceptionIntrantProperty(property);
if (beaninstanceofRavitaillement){returncanUpdateRavitaillementProperty(property);
if (beaninstanceofDetailRavitaillement){returncanUpdateDetailRavitaillementProperty(property);
if (beaninstanceofInventaire){returncanUpdateInventaireProperty(property);
if (beaninstanceofDetailInventaire){returncanUpdateDetailInventaireProperty(property);
if (beaninstanceofPersonnel){returncanUpdatePersonnelProperty(property);
if (beaninstanceofDepartPersonnel){returncanUpdateDepartPersonnelProperty(property);
if (beaninstanceofArriveePersonnel){returncanUpdateArriveePersonnelProperty(property);
if (beaninstanceofRegion){returncanUpdateRegionProperty(property);
if (beaninstanceofDistrictSante){returncanUpdateDistrictSanteProperty(property);
if (beaninstanceofCentreDiagTrait){returncanUpdateCentreDiagTraitProperty(property);
if (beaninstanceofLaboratoireReference){returncanUpdateLaboratoireReferenceProperty(property);
if (beaninstanceofLieuDit){returncanUpdateLieuDitProperty(property);
if (beaninstanceofRegime){returncanUpdateRegimeProperty(property);
if (beaninstanceofPriseMedicamentRegime){returncanUpdatePriseMedicamentRegimeProperty(property);
if (beaninstanceofMedicament){returncanUpdateMedicamentProperty(property);
if (beaninstanceofIntrant){returncanUpdateIntrantProperty(property);
if (beaninstanceofFormation){returncanUpdateFormationProperty(property);
if (beaninstanceofCandidatureFormation){returncanUpdateCandidatureFormationProperty(property);
if (beaninstanceofQualif ication){returncanUpdateQualif icationProperty(property);
if (beaninstanceofTutoriel){returncanUpdateTutorielProperty(property);
if (beaninstanceofSmsPredefini){returncanUpdateSmsPredefiniProperty(property);
if (beaninstanceofOutBox){returncanUpdateOutBoxProperty(property);
if (beaninstanceofUtilisateur){returncanUpdateUtilisateurProperty(property);
if thecurrentusercanaccessaPatientproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaPatientpropertyprivatebooleancanAccessPatientProperty(Stringproperty){
if ("identif iant".equals(property)){returncanReadPatientIdentif ication;
if ("nom".equals(property)){returncanReadPatientIdentif ication;
if ("sexe".equals(property)){returncanReadPatientIdentif ication;
if ("dateNaissance".equals(property)){returncanReadPatientIdentif ication;
if ("age".equals(property)){returncanReadPatientIdentif ication;
if ("profession".equals(property)){returncanReadPatientIdentif ication;
if ("centres".equals(property)){returncanReadPatientIdentif ication;
if ("nationalite".equals(property)){returncanReadPatientIdentif ication;
if ("precisionSurNationalite".equals(property)){returncanReadPatientIdentif ication;
if ("recevoirCarnetTelPortable".equals(property)){returncanReadPatientIdentif ication;
if ("telephoneUn".equals(property)){returncanReadPatientContact;
if ("telephoneDeux".equals(property)){returncanReadPatientContact;
if ("telephoneTrois".equals(property)){returncanReadPatientContact;
if ("email".equals(property)){returncanReadPatientContact;
if ("libelle".equals(property)){returncanReadPatientContact;
if ("complementAdresse".equals(property)){returncanReadPatientContact;
if ("quartier".equals(property)){returncanReadPatientContact;
if ("ville".equals(property)){returncanReadPatientContact;
if ("codePostal".equals(property)){returncanReadPatientContact;
if ("lieuxDits".equals(property)){returncanReadPatientContact;
if ("pacNom".equals(property)){returncanReadPatientPersonneContact;
if ("pacTelephoneUn".equals(property)){returncanReadPatientPersonneContact;
if ("pacTelephoneDeux".equals(property)){returncanReadPatientPersonneContact;
if ("pacTelephoneTrois".equals(property)){returncanReadPatientPersonneContact;
if ("pacEmail".equals(property)){returncanReadPatientPersonneContact;
if ("pacLibelle".equals(property)){returncanReadPatientPersonneContact;
if ("pacComplementAdresse".equals(property)){returncanReadPatientPersonneContact;
if ("pacQuartier".equals(property)){returncanReadPatientPersonneContact;
if ("pacVille".equals(property)){returncanReadPatientPersonneContact;
if ("pacCodePostal".equals(property)){returncanReadPatientPersonneContact;
if ("casTuberculose".equals(property)){returncanReadPatientTuberculose;
if ("casIndex".equals(property)){returncanReadPatientTuberculose;
if ("examensBiologiques".equals(property)){returncanReadPatientExamens;
if ("serologies".equals(property)){returncanReadPatientExamens;
if thecurrentusercanupdateaPatientproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaPatientpropertyprivatebooleancanUpdatePatientProperty(Stringproperty){
if ("identif iant".equals(property)){returncanEditPatientIdentif ication;
if ("nom".equals(property)){returncanEditPatientIdentif ication;
if ("sexe".equals(property)){returncanEditPatientIdentif ication;
if ("dateNaissance".equals(property)){returncanEditPatientIdentif ication;
if ("age".equals(property)){returncanEditPatientIdentif ication;
if ("profession".equals(property)){returncanEditPatientIdentif ication;
if ("centres".equals(property)){returncanEditPatientIdentif ication;
if ("nationalite".equals(property)){returncanEditPatientIdentif ication;
if ("precisionSurNationalite".equals(property)){returncanEditPatientIdentif ication;
if ("recevoirCarnetTelPortable".equals(property)){returncanEditPatientIdentif ication;
if ("telephoneUn".equals(property)){returncanEditPatientContact;
if ("telephoneDeux".equals(property)){returncanEditPatientContact;
if ("telephoneTrois".equals(property)){returncanEditPatientContact;
if ("email".equals(property)){returncanEditPatientContact;
if ("libelle".equals(property)){returncanEditPatientContact;
if ("complementAdresse".equals(property)){returncanEditPatientContact;
if ("quartier".equals(property)){returncanEditPatientContact;
if ("ville".equals(property)){returncanEditPatientContact;
if ("codePostal".equals(property)){returncanEditPatientContact;
if ("lieuxDits".equals(property)){returncanEditPatientContact;
if ("pacNom".equals(property)){returncanEditPatientPersonneContact;
if ("pacTelephoneUn".equals(property)){returncanEditPatientPersonneContact;
if ("pacTelephoneDeux".equals(property)){returncanEditPatientPersonneContact;
if ("pacTelephoneTrois".equals(property)){returncanEditPatientPersonneContact;
if ("pacEmail".equals(property)){returncanEditPatientPersonneContact;
if ("pacLibelle".equals(property)){returncanEditPatientPersonneContact;
if ("pacComplementAdresse".equals(property)){returncanEditPatientPersonneContact;
if ("pacQuartier".equals(property)){returncanEditPatientPersonneContact;
if ("pacVille".equals(property)){returncanEditPatientPersonneContact;
if ("pacCodePostal".equals(property)){returncanEditPatientPersonneContact;
if ("casTuberculose".equals(property)){returncanEditPatientTuberculose;
if ("casIndex".equals(property)){returncanEditPatientTuberculose;
if ("examensBiologiques".equals(property)){returncanEditPatientExamens;
if ("serologies".equals(property)){returncanEditPatientExamens;
if thecurrentusercanaccessaCasIndexproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaCasIndexpropertyprivatebooleancanAccessCasIndexProperty(Stringproperty){
if ("patient".equals(property)){returncanReadCasIndexDescription;
if ("patientLie".equals(property)){returncanReadCasIndexDescription;
if ("typeRelation".equals(property)){returncanReadCasIndexDescription;
if thecurrentusercanupdateaCasIndexproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaCasIndexpropertyprivatebooleancanUpdateCasIndexProperty(Stringproperty){
if ("patient".equals(property)){returncanEditCasIndexDescription;
if ("patientLie".equals(property)){returncanEditCasIndexDescription;
if ("typeRelation".equals(property)){returncanEditCasIndexDescription;
if thecurrentusercanaccessaCasTuberculoseproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaCasTuberculosepropertyprivatebooleancanAccessCasTuberculoseProperty(Stringproperty){
if ("identif iant".equals(property)){returncanReadCasTuberculoseInformations;
if ("numRegTB".equals(property)){returncanReadCasTuberculoseInformations;
if ("patient".equals(property)){returncanReadCasTuberculoseInformations;
if ("dateDebutTraitement".equals(property)){returncanReadCasTuberculoseInformations;
if ("typePatient".equals(property)){returncanReadCasTuberculoseInformations;
if ("typePatientPrecisions".equals(property)){returncanReadCasTuberculoseInformations;
if ("formeMaladie".equals(property)){returncanReadCasTuberculoseInformations;
if ("extraPulmonairePrecisions".equals(property)){returncanReadCasTuberculoseInformations;
if ("cotrimoxazole".equals(property)){returncanReadCasTuberculoseInformations;
if ("antiRetroViraux".equals(property)){returncanReadCasTuberculoseInformations;
if ("fumeur".equals(property)){returncanReadCasTuberculoseInformations;
if ("fumeurArreter".equals(property)){returncanReadCasTuberculoseInformations;
if ("examensMiscrocopies".equals(property)){returncanReadCasTuberculoseExamen;
if ("examensATB".equals(property)){returncanReadCasTuberculoseExamen;
if ("regimePhaseInitiale".equals(property)){returncanReadCasTuberculoseTraitement;
if ("regimePhaseContinuation".equals(property)){returncanReadCasTuberculoseTraitement;
if ("priseMedicamenteusePhaseInitiale".equals(property)){returncanReadCasTuberculoseTraitement;
if ("priseMedicamenteusePhaseContinuation".equals(property)){returncanReadCasTuberculoseTraitement;
if ("rendezVous".equals(property)){returncanReadCasTuberculoseTraitement;
if ("dateFinTraitement".equals(property)){returncanReadCasTuberculoseFinTraitement;
if ("devenirMalade".equals(property)){returncanReadCasTuberculoseFinTraitement;
if ("observation".equals(property)){returncanReadCasTuberculoseFinTraitement;
if thecurrentusercanupdateaCasTuberculoseproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaCasTuberculosepropertyprivatebooleancanUpdateCasTuberculoseProperty(Stringproperty){
if ("identif iant".equals(property)){returncanEditCasTuberculoseInformations;
if ("numRegTB".equals(property)){returncanEditCasTuberculoseInformations;
if ("patient".equals(property)){returncanEditCasTuberculoseInformations;
if ("dateDebutTraitement".equals(property)){returncanEditCasTuberculoseInformations;
if ("typePatient".equals(property)){returncanEditCasTuberculoseInformations;
if ("typePatientPrecisions".equals(property)){returncanEditCasTuberculoseInformations;
if ("formeMaladie".equals(property)){returncanEditCasTuberculoseInformations;
if ("extraPulmonairePrecisions".equals(property)){returncanEditCasTuberculoseInformations;
if ("cotrimoxazole".equals(property)){returncanEditCasTuberculoseInformations;
if ("antiRetroViraux".equals(property)){returncanEditCasTuberculoseInformations;
if ("fumeur".equals(property)){returncanEditCasTuberculoseInformations;
if ("fumeurArreter".equals(property)){returncanEditCasTuberculoseInformations;
if ("examensMiscrocopies".equals(property)){returncanEditCasTuberculoseExamen;
if ("examensATB".equals(property)){returncanEditCasTuberculoseExamen;
if ("regimePhaseInitiale".equals(property)){returncanEditCasTuberculoseTraitement;
if ("regimePhaseContinuation".equals(property)){returncanEditCasTuberculoseTraitement;
if ("priseMedicamenteusePhaseInitiale".equals(property)){returncanEditCasTuberculoseTraitement;
if ("priseMedicamenteusePhaseContinuation".equals(property)){returncanEditCasTuberculoseTraitement;
if ("rendezVous".equals(property)){returncanEditCasTuberculoseTraitement;
if ("dateFinTraitement".equals(property)){returncanEditCasTuberculoseFinTraitement;
if ("devenirMalade".equals(property)){returncanEditCasTuberculoseFinTraitement;
if ("observation".equals(property)){returncanEditCasTuberculoseFinTraitement;
if thecurrentusercanaccessaExamenSerologieproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaExamenSerologiepropertyprivatebooleancanAccessExamenSerologieProperty(Stringproperty){
if ("patient".equals(property)){returncanReadExamenSerologieDescription;
if ("dateTest".equals(property)){returncanReadExamenSerologieDescription;
if ("nature".equals(property)){returncanReadExamenSerologieDescription;
if ("resultatVIH".equals(property)){returncanReadExamenSerologieDescription;
if ("resultatCD4".equals(property)){returncanReadExamenSerologieDescription;
if thecurrentusercanupdateaExamenSerologieproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaExamenSerologiepropertyprivatebooleancanUpdateExamenSerologieProperty(Stringproperty){
if ("patient".equals(property)){returncanEditExamenSerologieDescription;
if ("dateTest".equals(property)){returncanEditExamenSerologieDescription;
if ("nature".equals(property)){returncanEditExamenSerologieDescription;
if ("resultatVIH".equals(property)){returncanEditExamenSerologieDescription;
if ("resultatCD4".equals(property)){returncanEditExamenSerologieDescription;
if thecurrentusercanaccessaExamenBiologiqueproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaExamenBiologiquepropertyprivatebooleancanAccessExamenBiologiqueProperty(Stringproperty){
if ("patient".equals(property)){returncanReadExamenBiologiqueDescription;
if ("date".equals(property)){returncanReadExamenBiologiqueDescription;
if ("poids".equals(property)){returncanReadExamenBiologiqueDescription;
if ("observations".equals(property)){returncanReadExamenBiologiqueDescription;
if thecurrentusercanupdateaExamenBiologiqueproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaExamenBiologiquepropertyprivatebooleancanUpdateExamenBiologiqueProperty(Stringproperty){
if ("patient".equals(property)){returncanEditExamenBiologiqueDescription;
if ("date".equals(property)){returncanEditExamenBiologiqueDescription;
if ("poids".equals(property)){returncanEditExamenBiologiqueDescription;
if ("observations".equals(property)){returncanEditExamenBiologiqueDescription;
if thecurrentusercanaccessaExamenMicroscopieproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaExamenMicroscopiepropertyprivatebooleancanAccessExamenMicroscopieProperty(Stringproperty){
if ("CDT".equals(property)){returncanReadExamenMicroscopieCentreExamen;
if ("laboratoireReference".equals(property)){returncanReadExamenMicroscopieCentreExamen;
if ("casTb".equals(property)){returncanReadExamenMicroscopieExamen;
if ("date".equals(property)){returncanReadExamenMicroscopieExamen;
if ("raisonDepistage".equals(property)){returncanReadExamenMicroscopieExamen;
if ("resultat".equals(property)){returncanReadExamenMicroscopieExamen;
if ("observations".equals(property)){returncanReadExamenMicroscopieExamen;
if thecurrentusercanupdateaExamenMicroscopieproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaExamenMicroscopiepropertyprivatebooleancanUpdateExamenMicroscopieProperty(Stringproperty){
if ("CDT".equals(property)){returncanEditExamenMicroscopieCentreExamen;
if ("laboratoireReference".equals(property)){returncanEditExamenMicroscopieCentreExamen;
if ("casTb".equals(property)){returncanEditExamenMicroscopieExamen;
if ("date".equals(property)){returncanEditExamenMicroscopieExamen;
if ("raisonDepistage".equals(property)){returncanEditExamenMicroscopieExamen;
if ("resultat".equals(property)){returncanEditExamenMicroscopieExamen;
if ("observations".equals(property)){returncanEditExamenMicroscopieExamen;
if thecurrentusercanaccessaExamenATBproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaExamenATBpropertyprivatebooleancanAccessExamenATBProperty(Stringproperty){
if ("CDT".equals(property)){returncanReadExamenATBCentreExamen;
if ("laboratoireReference".equals(property)){returncanReadExamenATBCentreExamen;
if ("casTb".equals(property)){returncanReadExamenATBExamen;
if ("dateExamen".equals(property)){returncanReadExamenATBExamen;
if ("raisonDepistage".equals(property)){returncanReadExamenATBExamen;
if ("resultat".equals(property)){returncanReadExamenATBExamen;
if ("observations".equals(property)){returncanReadExamenATBExamen;
if thecurrentusercanupdateaExamenATBproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaExamenATBpropertyprivatebooleancanUpdateExamenATBProperty(Stringproperty){
if ("CDT".equals(property)){returncanEditExamenATBCentreExamen;
if ("laboratoireReference".equals(property)){returncanEditExamenATBCentreExamen;
if ("casTb".equals(property)){returncanEditExamenATBExamen;
if ("dateExamen".equals(property)){returncanEditExamenATBExamen;
if ("raisonDepistage".equals(property)){returncanEditExamenATBExamen;
if ("resultat".equals(property)){returncanEditExamenATBExamen;
if ("observations".equals(property)){returncanEditExamenATBExamen;
if thecurrentusercanaccessaPriseMedicamenteuseproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaPriseMedicamenteusepropertyprivatebooleancanAccessPriseMedicamenteuseProperty(Stringproperty){
if ("phaseIntensive".equals(property)){returncanReadPriseMedicamenteuseDescription;
if ("phaseContinuation".equals(property)){returncanReadPriseMedicamenteuseDescription;
if ("dateEffective".equals(property)){returncanReadPriseMedicamenteuseDescription;
if ("prise".equals(property)){returncanReadPriseMedicamenteuseDescription;
if ("cotrimoxazole".equals(property)){returncanReadPriseMedicamenteuseDescription;
if thecurrentusercanupdateaPriseMedicamenteuseproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaPriseMedicamenteusepropertyprivatebooleancanUpdatePriseMedicamenteuseProperty(Stringproperty){
if ("phaseIntensive".equals(property)){returncanEditPriseMedicamenteuseDescription;
if ("phaseContinuation".equals(property)){returncanEditPriseMedicamenteuseDescription;
if ("dateEffective".equals(property)){returncanEditPriseMedicamenteuseDescription;
if ("prise".equals(property)){returncanEditPriseMedicamenteuseDescription;
if ("cotrimoxazole".equals(property)){returncanEditPriseMedicamenteuseDescription;
if thecurrentusercanaccessaRendezVousproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaRendezVouspropertyprivatebooleancanAccessRendezVousProperty(Stringproperty){
if ("casTb".equals(property)){returncanReadRendezVousDescription;
if ("dateRendezVous".equals(property)){returncanReadRendezVousDescription;
if ("honore".equals(property)){returncanReadRendezVousDescription;
if ("nombreSMSEnvoye".equals(property)){returncanReadRendezVousDescription;
if ("commentaire".equals(property)){returncanReadRendezVousDescription;
if thecurrentusercanupdateaRendezVousproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaRendezVouspropertyprivatebooleancanUpdateRendezVousProperty(Stringproperty){
if ("casTb".equals(property)){returncanEditRendezVousDescription;
if ("dateRendezVous".equals(property)){returncanEditRendezVousDescription;
if ("honore".equals(property)){returncanEditRendezVousDescription;
if ("nombreSMSEnvoye".equals(property)){returncanEditRendezVousDescription;
if ("commentaire".equals(property)){returncanEditRendezVousDescription;
if thecurrentusercanaccessaTransfertReferenceproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaTransfertReferencepropertyprivatebooleancanAccessTransfertReferenceProperty(Stringproperty){
if ("nature".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("region".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("districtSante".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("CDTDepart".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("patient".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("dateDepart".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("motif Depart".equals(property)){returncanReadTransfertReferenceInformationsDepart;
if ("regionArrivee".equals(property)){returncanReadTransfertReferenceInformationArrivee;
if ("districtSanteArrivee".equals(property)){returncanReadTransfertReferenceInformationArrivee;
if ("CDTArrivee".equals(property)){returncanReadTransfertReferenceInformationArrivee;
if ("dateArrivee".equals(property)){returncanReadTransfertReferenceInformationArrivee;
if thecurrentusercanupdateaTransfertReferenceproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaTransfertReferencepropertyprivatebooleancanUpdateTransfertReferenceProperty(Stringproperty){
if ("nature".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("region".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("districtSante".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("CDTDepart".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("patient".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("dateDepart".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("motif Depart".equals(property)){returncanEditTransfertReferenceInformationsDepart;
if ("regionArrivee".equals(property)){returncanEditTransfertReferenceInformationArrivee;
if ("districtSanteArrivee".equals(property)){returncanEditTransfertReferenceInformationArrivee;
if ("CDTArrivee".equals(property)){returncanEditTransfertReferenceInformationArrivee;
if ("dateArrivee".equals(property)){returncanEditTransfertReferenceInformationArrivee;
if thecurrentusercanaccessaLotproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaLotpropertyprivatebooleancanAccessLotProperty(Stringproperty){
if ("region".equals(property)){returncanReadLotDescription;
if ("districtSante".equals(property)){returncanReadLotDescription;
if ("CDT".equals(property)){returncanReadLotDescription;
if ("numero".equals(property)){returncanReadLotDescription;
if ("type".equals(property)){returncanReadLotDescription;
if ("medicament".equals(property)){returncanReadLotDescription;
if ("intrant".equals(property)){returncanReadLotDescription;
if ("quantiteInitiale".equals(property)){returncanReadLotDescription;
if ("quantite".equals(property)){returncanReadLotDescription;
if ("datePeremption".equals(property)){returncanReadLotDescription;
if thecurrentusercanupdateaLotproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaLotpropertyprivatebooleancanUpdateLotProperty(Stringproperty){
if ("region".equals(property)){returncanEditLotDescription;
if ("districtSante".equals(property)){returncanEditLotDescription;
if ("CDT".equals(property)){returncanEditLotDescription;
if ("numero".equals(property)){returncanEditLotDescription;
if ("type".equals(property)){returncanEditLotDescription;
if ("medicament".equals(property)){returncanEditLotDescription;
if ("intrant".equals(property)){returncanEditLotDescription;
if ("quantiteInitiale".equals(property)){returncanEditLotDescription;
if ("quantite".equals(property)){returncanEditLotDescription;
if ("datePeremption".equals(property)){returncanEditLotDescription;
if thecurrentusercanaccessaHorsUsageproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaHorsUsagepropertyprivatebooleancanAccessHorsUsageProperty(Stringproperty){
if ("lot".equals(property)){returncanReadHorsUsageDescription;
if ("type".equals(property)){returncanReadHorsUsageDescription;
if ("motif ".equals(property)){returncanReadHorsUsageDescription;
if thecurrentusercanupdateaHorsUsageproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaHorsUsagepropertyprivatebooleancanUpdateHorsUsageProperty(Stringproperty){
if ("lot".equals(property)){returncanEditHorsUsageDescription;
if ("type".equals(property)){returncanEditHorsUsageDescription;
if ("motif ".equals(property)){returncanEditHorsUsageDescription;
if thecurrentusercanaccessaEntreeLotproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaEntreeLotpropertyprivatebooleancanAccessEntreeLotProperty(Stringproperty){
if ("CDT".equals(property)){returncanReadEntreeLotDescription;
if ("lot".equals(property)){returncanReadEntreeLotDescription;
if ("quantite".equals(property)){returncanReadEntreeLotDescription;
if thecurrentusercanupdateaEntreeLotproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaEntreeLotpropertyprivatebooleancanUpdateEntreeLotProperty(Stringproperty){
if ("CDT".equals(property)){returncanEditEntreeLotDescription;
if ("lot".equals(property)){returncanEditEntreeLotDescription;
if ("quantite".equals(property)){returncanEditEntreeLotDescription;
if thecurrentusercanaccessaSortieLotproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaSortieLotpropertyprivatebooleancanAccessSortieLotProperty(Stringproperty){
if ("CDT".equals(property)){returncanReadSortieLotDescription;
if ("lot".equals(property)){returncanReadSortieLotDescription;
if ("quantite".equals(property)){returncanReadSortieLotDescription;
if thecurrentusercanupdateaSortieLotproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaSortieLotpropertyprivatebooleancanUpdateSortieLotProperty(Stringproperty){
if ("CDT".equals(property)){returncanEditSortieLotDescription;
if ("lot".equals(property)){returncanEditSortieLotDescription;
if ("quantite".equals(property)){returncanEditSortieLotDescription;
if thecurrentusercanaccessaCommandeproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaCommandepropertyprivatebooleancanAccessCommandeProperty(Stringproperty){
if ("date".equals(property)){returncanReadCommandeInformationsDepart;
if ("region".equals(property)){returncanReadCommandeInformationsDepart;
if ("districtSante".equals(property)){returncanReadCommandeInformationsDepart;
if ("CDT".equals(property)){returncanReadCommandeInformationsDepart;
if ("medicaments".equals(property)){returncanReadCommandeInformationsDepart;
if ("intrants".equals(property)){returncanReadCommandeInformationsDepart;
if ("approuveeRegion".equals(property)){returncanReadCommandeRegionApprobation;
if ("motif RejetRegion".equals(property)){returncanReadCommandeRegionApprobation;
if ("approuveeGTC".equals(property)){returncanReadCommandeGtcApprobation;
if ("motif RejetGTC".equals(property)){returncanReadCommandeGtcApprobation;
if thecurrentusercanupdateaCommandeproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaCommandepropertyprivatebooleancanUpdateCommandeProperty(Stringproperty){
if ("date".equals(property)){returncanEditCommandeInformationsDepart;
if ("region".equals(property)){returncanEditCommandeInformationsDepart;
if ("districtSante".equals(property)){returncanEditCommandeInformationsDepart;
if ("CDT".equals(property)){returncanEditCommandeInformationsDepart;
if ("medicaments".equals(property)){returncanEditCommandeInformationsDepart;
if ("intrants".equals(property)){returncanEditCommandeInformationsDepart;
if ("approuveeRegion".equals(property)){returncanEditCommandeRegionApprobation;
if ("motif RejetRegion".equals(property)){returncanEditCommandeRegionApprobation;
if ("approuveeGTC".equals(property)){returncanEditCommandeGtcApprobation;
if ("motif RejetGTC".equals(property)){returncanEditCommandeGtcApprobation;
if thecurrentusercanaccessaDetailCommandeMedicamentproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailCommandeMedicamentpropertyprivatebooleancanAccessDetailCommandeMedicamentProperty(Stringproperty){
if ("commande".equals(property)){returncanReadDetailCommandeMedicamentDescription;
if ("medicament".equals(property)){returncanReadDetailCommandeMedicamentDescription;
if ("quantiteRequise".equals(property)){returncanReadDetailCommandeMedicamentDescription;
if ("quantiteEnStock".equals(property)){returncanReadDetailCommandeMedicamentDescription;
if thecurrentusercanupdateaDetailCommandeMedicamentproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailCommandeMedicamentpropertyprivatebooleancanUpdateDetailCommandeMedicamentProperty(Stringproperty){
if ("commande".equals(property)){returncanEditDetailCommandeMedicamentDescription;
if ("medicament".equals(property)){returncanEditDetailCommandeMedicamentDescription;
if ("quantiteRequise".equals(property)){returncanEditDetailCommandeMedicamentDescription;
if ("quantiteEnStock".equals(property)){returncanEditDetailCommandeMedicamentDescription;
if thecurrentusercanaccessaDetailCommandeIntrantproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailCommandeIntrantpropertyprivatebooleancanAccessDetailCommandeIntrantProperty(Stringproperty){
if ("commande".equals(property)){returncanReadDetailCommandeIntrantDescription;
if ("intrant".equals(property)){returncanReadDetailCommandeIntrantDescription;
if ("quantiteRequise".equals(property)){returncanReadDetailCommandeIntrantDescription;
if ("quantiteEnStock".equals(property)){returncanReadDetailCommandeIntrantDescription;
if thecurrentusercanupdateaDetailCommandeIntrantproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailCommandeIntrantpropertyprivatebooleancanUpdateDetailCommandeIntrantProperty(Stringproperty){
if ("commande".equals(property)){returncanEditDetailCommandeIntrantDescription;
if ("intrant".equals(property)){returncanEditDetailCommandeIntrantDescription;
if ("quantiteRequise".equals(property)){returncanEditDetailCommandeIntrantDescription;
if ("quantiteEnStock".equals(property)){returncanEditDetailCommandeIntrantDescription;
if thecurrentusercanaccessaReceptionproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaReceptionpropertyprivatebooleancanAccessReceptionProperty(Stringproperty){
if ("region".equals(property)){returncanReadReceptionDescription;
if ("districtSante".equals(property)){returncanReadReceptionDescription;
if ("CDT".equals(property)){returncanReadReceptionDescription;
if ("commande".equals(property)){returncanReadReceptionDescription;
if ("dateReception".equals(property)){returncanReadReceptionDescription;
if ("medicaments".equals(property)){returncanReadReceptionDescription;
if ("intrants".equals(property)){returncanReadReceptionDescription;
if thecurrentusercanupdateaReceptionproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaReceptionpropertyprivatebooleancanUpdateReceptionProperty(Stringproperty){
if ("region".equals(property)){returncanEditReceptionDescription;
if ("districtSante".equals(property)){returncanEditReceptionDescription;
if ("CDT".equals(property)){returncanEditReceptionDescription;
if ("commande".equals(property)){returncanEditReceptionDescription;
if ("dateReception".equals(property)){returncanEditReceptionDescription;
if ("medicaments".equals(property)){returncanEditReceptionDescription;
if ("intrants".equals(property)){returncanEditReceptionDescription;
if thecurrentusercanaccessaDetailReceptionMedicamentproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailReceptionMedicamentpropertyprivatebooleancanAccessDetailReceptionMedicamentProperty(Stringproperty){
if ("reception".equals(property)){returncanReadDetailReceptionMedicamentDescription;
if ("commande".equals(property)){returncanReadDetailReceptionMedicamentDescription;
if ("detailCommande".equals(property)){returncanReadDetailReceptionMedicamentDescription;
if ("entreeLot".equals(property)){returncanReadDetailReceptionMedicamentDescription;
if thecurrentusercanupdateaDetailReceptionMedicamentproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailReceptionMedicamentpropertyprivatebooleancanUpdateDetailReceptionMedicamentProperty(Stringproperty){
if ("reception".equals(property)){returncanEditDetailReceptionMedicamentDescription;
if ("commande".equals(property)){returncanEditDetailReceptionMedicamentDescription;
if ("detailCommande".equals(property)){returncanEditDetailReceptionMedicamentDescription;
if ("entreeLot".equals(property)){returncanEditDetailReceptionMedicamentDescription;
if thecurrentusercanaccessaDetailReceptionIntrantproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailReceptionIntrantpropertyprivatebooleancanAccessDetailReceptionIntrantProperty(Stringproperty){
if ("reception".equals(property)){returncanReadDetailReceptionIntrantDescription;
if ("commande".equals(property)){returncanReadDetailReceptionIntrantDescription;
if ("detailCommande".equals(property)){returncanReadDetailReceptionIntrantDescription;
if ("entreeLot".equals(property)){returncanReadDetailReceptionIntrantDescription;
if thecurrentusercanupdateaDetailReceptionIntrantproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailReceptionIntrantpropertyprivatebooleancanUpdateDetailReceptionIntrantProperty(Stringproperty){
if ("reception".equals(property)){returncanEditDetailReceptionIntrantDescription;
if ("commande".equals(property)){returncanEditDetailReceptionIntrantDescription;
if ("detailCommande".equals(property)){returncanEditDetailReceptionIntrantDescription;
if ("entreeLot".equals(property)){returncanEditDetailReceptionIntrantDescription;
if thecurrentusercanaccessaRavitaillementproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaRavitaillementpropertyprivatebooleancanAccessRavitaillementProperty(Stringproperty){
if ("region".equals(property)){returncanReadRavitaillementInformationsDepart;
if ("districtSante".equals(property)){returncanReadRavitaillementInformationsDepart;
if ("CDTDepart".equals(property)){returncanReadRavitaillementInformationsDepart;
if ("dateDepart".equals(property)){returncanReadRavitaillementInformationsDepart;
if ("regionArrivee".equals(property)){returncanReadRavitaillementInformationArrivee;
if ("districtSanteArrivee".equals(property)){returncanReadRavitaillementInformationArrivee;
if ("CDTArrivee".equals(property)){returncanReadRavitaillementInformationArrivee;
if ("dateArrivee".equals(property)){returncanReadRavitaillementInformationArrivee;
if ("details".equals(property)){returncanReadRavitaillementDetail;
if thecurrentusercanupdateaRavitaillementproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaRavitaillementpropertyprivatebooleancanUpdateRavitaillementProperty(Stringproperty){
if ("region".equals(property)){returncanEditRavitaillementInformationsDepart;
if ("districtSante".equals(property)){returncanEditRavitaillementInformationsDepart;
if ("CDTDepart".equals(property)){returncanEditRavitaillementInformationsDepart;
if ("dateDepart".equals(property)){returncanEditRavitaillementInformationsDepart;
if ("regionArrivee".equals(property)){returncanEditRavitaillementInformationArrivee;
if ("districtSanteArrivee".equals(property)){returncanEditRavitaillementInformationArrivee;
if ("CDTArrivee".equals(property)){returncanEditRavitaillementInformationArrivee;
if ("dateArrivee".equals(property)){returncanEditRavitaillementInformationArrivee;
if ("details".equals(property)){returncanEditRavitaillementDetail;
if thecurrentusercanaccessaDetailRavitaillementproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailRavitaillementpropertyprivatebooleancanAccessDetailRavitaillementProperty(Stringproperty){
if ("ravitaillement".equals(property)){returncanReadDetailRavitaillementDescription;
if ("sortieLot".equals(property)){returncanReadDetailRavitaillementSortie;
if ("entreeLot".equals(property)){returncanReadDetailRavitaillementEntree;
if thecurrentusercanupdateaDetailRavitaillementproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailRavitaillementpropertyprivatebooleancanUpdateDetailRavitaillementProperty(Stringproperty){
if ("ravitaillement".equals(property)){returncanEditDetailRavitaillementDescription;
if ("sortieLot".equals(property)){returncanEditDetailRavitaillementSortie;
if ("entreeLot".equals(property)){returncanEditDetailRavitaillementEntree;
if thecurrentusercanaccessaInventaireproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaInventairepropertyprivatebooleancanAccessInventaireProperty(Stringproperty){
if ("date".equals(property)){returncanReadInventaireInformationsDepart;
if ("region".equals(property)){returncanReadInventaireInformationsDepart;
if ("districtSante".equals(property)){returncanReadInventaireInformationsDepart;
if ("CDT".equals(property)){returncanReadInventaireInformationsDepart;
if ("details".equals(property)){returncanReadInventaireInformationsDepart;
if thecurrentusercanupdateaInventaireproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaInventairepropertyprivatebooleancanUpdateInventaireProperty(Stringproperty){
if ("date".equals(property)){returncanEditInventaireInformationsDepart;
if ("region".equals(property)){returncanEditInventaireInformationsDepart;
if ("districtSante".equals(property)){returncanEditInventaireInformationsDepart;
if ("CDT".equals(property)){returncanEditInventaireInformationsDepart;
if ("details".equals(property)){returncanEditInventaireInformationsDepart;
if thecurrentusercanaccessaDetailInventaireproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDetailInventairepropertyprivatebooleancanAccessDetailInventaireProperty(Stringproperty){
if ("inventaire".equals(property)){returncanReadDetailInventaireDescription;
if ("CDT".equals(property)){returncanReadDetailInventaireDescription;
if ("lot".equals(property)){returncanReadDetailInventaireDescription;
if ("quantiteReelle".equals(property)){returncanReadDetailInventaireDescription;
if ("quantiteTheorique".equals(property)){returncanReadDetailInventaireDescription;
if thecurrentusercanupdateaDetailInventaireproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDetailInventairepropertyprivatebooleancanUpdateDetailInventaireProperty(Stringproperty){
if ("inventaire".equals(property)){returncanEditDetailInventaireDescription;
if ("CDT".equals(property)){returncanEditDetailInventaireDescription;
if ("lot".equals(property)){returncanEditDetailInventaireDescription;
if ("quantiteReelle".equals(property)){returncanEditDetailInventaireDescription;
if ("quantiteTheorique".equals(property)){returncanEditDetailInventaireDescription;
if thecurrentusercanaccessaPersonnelproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaPersonnelpropertyprivatebooleancanAccessPersonnelProperty(Stringproperty){
if ("nom".equals(property)){returncanReadPersonnelIdentif ication;
if ("dateNaissance".equals(property)){returncanReadPersonnelIdentif ication;
if ("profession".equals(property)){returncanReadPersonnelIdentif ication;
if ("telephoneUn".equals(property)){returncanReadPersonnelContact;
if ("telephoneDeux".equals(property)){returncanReadPersonnelContact;
if ("telephoneTrois".equals(property)){returncanReadPersonnelContact;
if ("email".equals(property)){returncanReadPersonnelContact;
if ("libelle".equals(property)){returncanReadPersonnelContact;
if ("complementAdresse".equals(property)){returncanReadPersonnelContact;
if ("quartier".equals(property)){returncanReadPersonnelContact;
if ("ville".equals(property)){returncanReadPersonnelContact;
if ("codePostal".equals(property)){returncanReadPersonnelContact;
if ("dateDepart".equals(property)){returncanReadPersonnelSituation;
if ("dateArrivee".equals(property)){returncanReadPersonnelSituation;
if ("AEteForme".equals(property)){returncanReadPersonnelSituation;
if ("qualif ication".equals(property)){returncanReadPersonnelSituation;
if ("niveau".equals(property)){returncanReadPersonnelNiveauAccess;
if ("region".equals(property)){returncanReadPersonnelNiveauAccess;
if ("districtSante".equals(property)){returncanReadPersonnelNiveauAccess;
if ("CDT".equals(property)){returncanReadPersonnelNiveauAccess;
if ("actif ".equals(property)){returncanReadPersonnelNiveauAccess;
if thecurrentusercanupdateaPersonnelproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaPersonnelpropertyprivatebooleancanUpdatePersonnelProperty(Stringproperty){
if ("nom".equals(property)){returncanEditPersonnelIdentif ication;
if ("dateNaissance".equals(property)){returncanEditPersonnelIdentif ication;
if ("profession".equals(property)){returncanEditPersonnelIdentif ication;
if ("telephoneUn".equals(property)){returncanEditPersonnelContact;
if ("telephoneDeux".equals(property)){returncanEditPersonnelContact;
if ("telephoneTrois".equals(property)){returncanEditPersonnelContact;
if ("email".equals(property)){returncanEditPersonnelContact;
if ("libelle".equals(property)){returncanEditPersonnelContact;
if ("complementAdresse".equals(property)){returncanEditPersonnelContact;
if ("quartier".equals(property)){returncanEditPersonnelContact;
if ("ville".equals(property)){returncanEditPersonnelContact;
if ("codePostal".equals(property)){returncanEditPersonnelContact;
if ("dateDepart".equals(property)){returncanEditPersonnelSituation;
if ("dateArrivee".equals(property)){returncanEditPersonnelSituation;
if ("AEteForme".equals(property)){returncanEditPersonnelSituation;
if ("qualif ication".equals(property)){returncanEditPersonnelSituation;
if ("niveau".equals(property)){returncanEditPersonnelNiveauAccess;
if ("region".equals(property)){returncanEditPersonnelNiveauAccess;
if ("districtSante".equals(property)){returncanEditPersonnelNiveauAccess;
if ("CDT".equals(property)){returncanEditPersonnelNiveauAccess;
if ("actif ".equals(property)){returncanEditPersonnelNiveauAccess;
if thecurrentusercanaccessaDepartPersonnelproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDepartPersonnelpropertyprivatebooleancanAccessDepartPersonnelProperty(Stringproperty){
if ("region".equals(property)){returncanReadDepartPersonnelPersonnel;
if ("districtSante".equals(property)){returncanReadDepartPersonnelPersonnel;
if ("CDT".equals(property)){returncanReadDepartPersonnelPersonnel;
if ("personnel".equals(property)){returncanReadDepartPersonnelPersonnel;
if ("dateDepart".equals(property)){returncanReadDepartPersonnelDescription;
if ("motif Depart".equals(property)){returncanReadDepartPersonnelDescription;
if thecurrentusercanupdateaDepartPersonnelproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDepartPersonnelpropertyprivatebooleancanUpdateDepartPersonnelProperty(Stringproperty){
if ("region".equals(property)){returncanEditDepartPersonnelPersonnel;
if ("districtSante".equals(property)){returncanEditDepartPersonnelPersonnel;
if ("CDT".equals(property)){returncanEditDepartPersonnelPersonnel;
if ("personnel".equals(property)){returncanEditDepartPersonnelPersonnel;
if ("dateDepart".equals(property)){returncanEditDepartPersonnelDescription;
if ("motif Depart".equals(property)){returncanEditDepartPersonnelDescription;
if thecurrentusercanaccessaArriveePersonnelproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaArriveePersonnelpropertyprivatebooleancanAccessArriveePersonnelProperty(Stringproperty){
if ("region".equals(property)){returncanReadArriveePersonnelDescription;
if ("districtSante".equals(property)){returncanReadArriveePersonnelDescription;
if ("CDT".equals(property)){returncanReadArriveePersonnelDescription;
if ("personnel".equals(property)){returncanReadArriveePersonnelDescription;
if ("dateArrivee".equals(property)){returncanReadArriveePersonnelDescription;
if thecurrentusercanupdateaArriveePersonnelproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaArriveePersonnelpropertyprivatebooleancanUpdateArriveePersonnelProperty(Stringproperty){
if ("region".equals(property)){returncanEditArriveePersonnelDescription;
if ("districtSante".equals(property)){returncanEditArriveePersonnelDescription;
if ("CDT".equals(property)){returncanEditArriveePersonnelDescription;
if ("personnel".equals(property)){returncanEditArriveePersonnelDescription;
if ("dateArrivee".equals(property)){returncanEditArriveePersonnelDescription;
if thecurrentusercanaccessaRegionproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaRegionpropertyprivatebooleancanAccessRegionProperty(Stringproperty){
if ("code".equals(property)){returncanReadRegionDescription;
if ("nom".equals(property)){returncanReadRegionDescription;
if ("description".equals(property)){returncanReadRegionDescription;
if ("districtSantes".equals(property)){returncanReadRegionDescription;
if ("libelle".equals(property)){returncanReadRegionAdresse;
if ("complementAdresse".equals(property)){returncanReadRegionAdresse;
if ("quartier".equals(property)){returncanReadRegionAdresse;
if ("ville".equals(property)){returncanReadRegionAdresse;
if ("codePostal".equals(property)){returncanReadRegionAdresse;
if ("coordonnees".equals(property)){returncanReadRegionAdresse;
if thecurrentusercanupdateaRegionproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaRegionpropertyprivatebooleancanUpdateRegionProperty(Stringproperty){
if ("code".equals(property)){returncanEditRegionDescription;
if ("nom".equals(property)){returncanEditRegionDescription;
if ("description".equals(property)){returncanEditRegionDescription;
if ("districtSantes".equals(property)){returncanEditRegionDescription;
if ("libelle".equals(property)){returncanEditRegionAdresse;
if ("complementAdresse".equals(property)){returncanEditRegionAdresse;
if ("quartier".equals(property)){returncanEditRegionAdresse;
if ("ville".equals(property)){returncanEditRegionAdresse;
if ("codePostal".equals(property)){returncanEditRegionAdresse;
if ("coordonnees".equals(property)){returncanEditRegionAdresse;
if thecurrentusercanaccessaDistrictSanteproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaDistrictSantepropertyprivatebooleancanAccessDistrictSanteProperty(Stringproperty){
if ("code".equals(property)){returncanReadDistrictSanteDescription;
if ("nom".equals(property)){returncanReadDistrictSanteDescription;
if ("description".equals(property)){returncanReadDistrictSanteDescription;
if ("region".equals(property)){returncanReadDistrictSanteDescription;
if ("libelle".equals(property)){returncanReadDistrictSanteAdresse;
if ("complementAdresse".equals(property)){returncanReadDistrictSanteAdresse;
if ("quartier".equals(property)){returncanReadDistrictSanteAdresse;
if ("ville".equals(property)){returncanReadDistrictSanteAdresse;
if ("codePostal".equals(property)){returncanReadDistrictSanteAdresse;
if ("coordonnees".equals(property)){returncanReadDistrictSanteAdresse;
if thecurrentusercanupdateaDistrictSanteproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaDistrictSantepropertyprivatebooleancanUpdateDistrictSanteProperty(Stringproperty){
if ("code".equals(property)){returncanEditDistrictSanteDescription;
if ("nom".equals(property)){returncanEditDistrictSanteDescription;
if ("description".equals(property)){returncanEditDistrictSanteDescription;
if ("region".equals(property)){returncanEditDistrictSanteDescription;
if ("libelle".equals(property)){returncanEditDistrictSanteAdresse;
if ("complementAdresse".equals(property)){returncanEditDistrictSanteAdresse;
if ("quartier".equals(property)){returncanEditDistrictSanteAdresse;
if ("ville".equals(property)){returncanEditDistrictSanteAdresse;
if ("codePostal".equals(property)){returncanEditDistrictSanteAdresse;
if ("coordonnees".equals(property)){returncanEditDistrictSanteAdresse;
if thecurrentusercanaccessaCentreDiagTraitproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaCentreDiagTraitpropertyprivatebooleancanAccessCentreDiagTraitProperty(Stringproperty){
if ("code".equals(property)){returncanReadCentreDiagTraitDescription;
if ("region".equals(property)){returncanReadCentreDiagTraitDescription;
if ("districtSante".equals(property)){returncanReadCentreDiagTraitDescription;
if ("nom".equals(property)){returncanReadCentreDiagTraitDescription;
if ("description".equals(property)){returncanReadCentreDiagTraitDescription;
if ("libelle".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("complementAdresse".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("quartier".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("ville".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("codePostal".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("coordonnees".equals(property)){returncanReadCentreDiagTraitAdresse;
if ("lieuxDits".equals(property)){returncanReadCentreDiagTraitAdresse;
if thecurrentusercanupdateaCentreDiagTraitproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaCentreDiagTraitpropertyprivatebooleancanUpdateCentreDiagTraitProperty(Stringproperty){
if ("code".equals(property)){returncanEditCentreDiagTraitDescription;
if ("region".equals(property)){returncanEditCentreDiagTraitDescription;
if ("districtSante".equals(property)){returncanEditCentreDiagTraitDescription;
if ("nom".equals(property)){returncanEditCentreDiagTraitDescription;
if ("description".equals(property)){returncanEditCentreDiagTraitDescription;
if ("libelle".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("complementAdresse".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("quartier".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("ville".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("codePostal".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("coordonnees".equals(property)){returncanEditCentreDiagTraitAdresse;
if ("lieuxDits".equals(property)){returncanEditCentreDiagTraitAdresse;
if thecurrentusercanaccessaLaboratoireReferenceproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaLaboratoireReferencepropertyprivatebooleancanAccessLaboratoireReferenceProperty(Stringproperty){
if ("nom".equals(property)){returncanReadLaboratoireReferenceDescription;
if ("nature".equals(property)){returncanReadLaboratoireReferenceDescription;
if ("description".equals(property)){returncanReadLaboratoireReferenceDescription;
if ("region".equals(property)){returncanReadLaboratoireReferenceDescription;
if ("districtSante".equals(property)){returncanReadLaboratoireReferenceDescription;
if ("libelle".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("complementAdresse".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("quartier".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("ville".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("codePostal".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("coordonnees".equals(property)){returncanReadLaboratoireReferenceAdresse;
if ("lieuxDits".equals(property)){returncanReadLaboratoireReferenceAdresse;
if thecurrentusercanupdateaLaboratoireReferenceproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaLaboratoireReferencepropertyprivatebooleancanUpdateLaboratoireReferenceProperty(Stringproperty){
if ("nom".equals(property)){returncanEditLaboratoireReferenceDescription;
if ("nature".equals(property)){returncanEditLaboratoireReferenceDescription;
if ("description".equals(property)){returncanEditLaboratoireReferenceDescription;
if ("region".equals(property)){returncanEditLaboratoireReferenceDescription;
if ("districtSante".equals(property)){returncanEditLaboratoireReferenceDescription;
if ("libelle".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("complementAdresse".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("quartier".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("ville".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("codePostal".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("coordonnees".equals(property)){returncanEditLaboratoireReferenceAdresse;
if ("lieuxDits".equals(property)){returncanEditLaboratoireReferenceAdresse;
if thecurrentusercanaccessaLieuDitproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaLieuDitpropertyprivatebooleancanAccessLieuDitProperty(Stringproperty){
if ("code".equals(property)){returncanReadLieuDitDescription;
if ("nom".equals(property)){returncanReadLieuDitDescription;
if ("description".equals(property)){returncanReadLieuDitDescription;
if ("libelle".equals(property)){returncanReadLieuDitAdresse;
if ("complementAdresse".equals(property)){returncanReadLieuDitAdresse;
if ("quartier".equals(property)){returncanReadLieuDitAdresse;
if ("ville".equals(property)){returncanReadLieuDitAdresse;
if ("codePostal".equals(property)){returncanReadLieuDitAdresse;
if ("coordonnees".equals(property)){returncanReadLieuDitAdresse;
if thecurrentusercanupdateaLieuDitproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaLieuDitpropertyprivatebooleancanUpdateLieuDitProperty(Stringproperty){
if ("code".equals(property)){returncanEditLieuDitDescription;
if ("nom".equals(property)){returncanEditLieuDitDescription;
if ("description".equals(property)){returncanEditLieuDitDescription;
if ("libelle".equals(property)){returncanEditLieuDitAdresse;
if ("complementAdresse".equals(property)){returncanEditLieuDitAdresse;
if ("quartier".equals(property)){returncanEditLieuDitAdresse;
if ("ville".equals(property)){returncanEditLieuDitAdresse;
if ("codePostal".equals(property)){returncanEditLieuDitAdresse;
if ("coordonnees".equals(property)){returncanEditLieuDitAdresse;
if thecurrentusercanaccessaRegimeproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaRegimepropertyprivatebooleancanAccessRegimeProperty(Stringproperty){
if ("nom".equals(property)){returncanReadRegimeDescription;
if ("type".equals(property)){returncanReadRegimeDescription;
if ("dureeTraitement".equals(property)){returncanReadRegimeDescription;
if ("poidsMin".equals(property)){returncanReadRegimeDescription;
if ("poidsMax".equals(property)){returncanReadRegimeDescription;
if ("description".equals(property)){returncanReadRegimeDescription;
if ("prisesMedicamenteuses".equals(property)){returncanReadRegimeDescription;
if ("actif ".equals(property)){returncanReadRegimeDescription;
if thecurrentusercanupdateaRegimeproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaRegimepropertyprivatebooleancanUpdateRegimeProperty(Stringproperty){
if ("nom".equals(property)){returncanEditRegimeDescription;
if ("type".equals(property)){returncanEditRegimeDescription;
if ("dureeTraitement".equals(property)){returncanEditRegimeDescription;
if ("poidsMin".equals(property)){returncanEditRegimeDescription;
if ("poidsMax".equals(property)){returncanEditRegimeDescription;
if ("description".equals(property)){returncanEditRegimeDescription;
if ("prisesMedicamenteuses".equals(property)){returncanEditRegimeDescription;
if ("actif ".equals(property)){returncanEditRegimeDescription;
if thecurrentusercanaccessaPriseMedicamentRegimeproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaPriseMedicamentRegimepropertyprivatebooleancanAccessPriseMedicamentRegimeProperty(Stringproperty){
if ("regime".equals(property)){returncanReadPriseMedicamentRegimeDescription;
if ("medicament".equals(property)){returncanReadPriseMedicamentRegimeDescription;
if ("quantite".equals(property)){returncanReadPriseMedicamentRegimeDescription;
if ("quantiteUnite".equals(property)){returncanReadPriseMedicamentRegimeDescription;
if thecurrentusercanupdateaPriseMedicamentRegimeproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaPriseMedicamentRegimepropertyprivatebooleancanUpdatePriseMedicamentRegimeProperty(Stringproperty){
if ("regime".equals(property)){returncanEditPriseMedicamentRegimeDescription;
if ("medicament".equals(property)){returncanEditPriseMedicamentRegimeDescription;
if ("quantite".equals(property)){returncanEditPriseMedicamentRegimeDescription;
if ("quantiteUnite".equals(property)){returncanEditPriseMedicamentRegimeDescription;
if thecurrentusercanaccessaMedicamentproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaMedicamentpropertyprivatebooleancanAccessMedicamentProperty(Stringproperty){
if ("code".equals(property)){returncanReadMedicamentDescription;
if ("designation".equals(property)){returncanReadMedicamentDescription;
if ("seuilPatient".equals(property)){returncanReadMedicamentDescription;
if ("estMedicamentAntituberculeux".equals(property)){returncanReadMedicamentDescription;
if thecurrentusercanupdateaMedicamentproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaMedicamentpropertyprivatebooleancanUpdateMedicamentProperty(Stringproperty){
if ("code".equals(property)){returncanEditMedicamentDescription;
if ("designation".equals(property)){returncanEditMedicamentDescription;
if ("seuilPatient".equals(property)){returncanEditMedicamentDescription;
if ("estMedicamentAntituberculeux".equals(property)){returncanEditMedicamentDescription;
if thecurrentusercanaccessaIntrantproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaIntrantpropertyprivatebooleancanAccessIntrantProperty(Stringproperty){
if ("identif iant".equals(property)){returncanReadIntrantDescription;
if ("nom".equals(property)){returncanReadIntrantDescription;
if ("description".equals(property)){returncanReadIntrantDescription;
if ("seuilPatient".equals(property)){returncanReadIntrantDescription;
if thecurrentusercanupdateaIntrantproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaIntrantpropertyprivatebooleancanUpdateIntrantProperty(Stringproperty){
if ("identif iant".equals(property)){returncanEditIntrantDescription;
if ("nom".equals(property)){returncanEditIntrantDescription;
if ("description".equals(property)){returncanEditIntrantDescription;
if ("seuilPatient".equals(property)){returncanEditIntrantDescription;
if thecurrentusercanaccessaFormationproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaFormationpropertyprivatebooleancanAccessFormationProperty(Stringproperty){
if ("libelle".equals(property)){returncanReadFormationDescription;
if ("dateDebut".equals(property)){returncanReadFormationDescription;
if ("dateFin".equals(property)){returncanReadFormationDescription;
if ("lieu".equals(property)){returncanReadFormationDescription;
if ("objectif s".equals(property)){returncanReadFormationDescription;
if ("effectuee".equals(property)){returncanReadFormationDescription;
if ("candidatures".equals(property)){returncanReadFormationDescription;
if thecurrentusercanupdateaFormationproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaFormationpropertyprivatebooleancanUpdateFormationProperty(Stringproperty){
if ("libelle".equals(property)){returncanEditFormationDescription;
if ("dateDebut".equals(property)){returncanEditFormationDescription;
if ("dateFin".equals(property)){returncanEditFormationDescription;
if ("lieu".equals(property)){returncanEditFormationDescription;
if ("objectif s".equals(property)){returncanEditFormationDescription;
if ("effectuee".equals(property)){returncanEditFormationDescription;
if ("candidatures".equals(property)){returncanEditFormationDescription;
if thecurrentusercanaccessaCandidatureFormationproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaCandidatureFormationpropertyprivatebooleancanAccessCandidatureFormationProperty(Stringproperty){
if ("formation".equals(property)){returncanReadCandidatureFormationDescription;
if ("region".equals(property)){returncanReadCandidatureFormationDescription;
if ("districtSante".equals(property)){returncanReadCandidatureFormationDescription;
if ("CDT".equals(property)){returncanReadCandidatureFormationDescription;
if ("personnel".equals(property)){returncanReadCandidatureFormationDescription;
if ("approuveeRegion".equals(property)){returncanReadCandidatureFormationRegionApprobation;
if ("motif RejetRegion".equals(property)){returncanReadCandidatureFormationRegionApprobation;
if ("approuveeGTC".equals(property)){returncanReadCandidatureFormationGtcApprobation;
if ("motif RejetGTC".equals(property)){returncanReadCandidatureFormationGtcApprobation;
if thecurrentusercanupdateaCandidatureFormationproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaCandidatureFormationpropertyprivatebooleancanUpdateCandidatureFormationProperty(Stringproperty){
if ("formation".equals(property)){returncanEditCandidatureFormationDescription;
if ("region".equals(property)){returncanEditCandidatureFormationDescription;
if ("districtSante".equals(property)){returncanEditCandidatureFormationDescription;
if ("CDT".equals(property)){returncanEditCandidatureFormationDescription;
if ("personnel".equals(property)){returncanEditCandidatureFormationDescription;
if ("approuveeRegion".equals(property)){returncanEditCandidatureFormationRegionApprobation;
if ("motif RejetRegion".equals(property)){returncanEditCandidatureFormationRegionApprobation;
if ("approuveeGTC".equals(property)){returncanEditCandidatureFormationGtcApprobation;
if ("motif RejetGTC".equals(property)){returncanEditCandidatureFormationGtcApprobation;
if thecurrentusercanaccessaQualif icationproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaQualif icationpropertyprivatebooleancanAccessQualif icationProperty(Stringproperty){
if ("code".equals(property)){returncanReadQualif icationDescription;
if ("nom".equals(property)){returncanReadQualif icationDescription;
if ("description".equals(property)){returncanReadQualif icationDescription;
if thecurrentusercanupdateaQualif icationproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaQualif icationpropertyprivatebooleancanUpdateQualif icationProperty(Stringproperty){
if ("code".equals(property)){returncanEditQualif icationDescription;
if ("nom".equals(property)){returncanEditQualif icationDescription;
if ("description".equals(property)){returncanEditQualif icationDescription;
if thecurrentusercanaccessaTutorielproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaTutorielpropertyprivatebooleancanAccessTutorielProperty(Stringproperty){
if ("reference".equals(property)){returncanReadTutorielDescription;
if ("nom".equals(property)){returncanReadTutorielDescription;
if ("description".equals(property)){returncanReadTutorielDescription;
if ("type".equals(property)){returncanReadTutorielDescription;
if ("audioT".equals(property)){returncanReadTutorielDescription;
if ("videoT".equals(property)){returncanReadTutorielDescription;
if ("textT".equals(property)){returncanReadTutorielDescription;
if thecurrentusercanupdateaTutorielproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaTutorielpropertyprivatebooleancanUpdateTutorielProperty(Stringproperty){
if ("reference".equals(property)){returncanEditTutorielDescription;
if ("nom".equals(property)){returncanEditTutorielDescription;
if ("description".equals(property)){returncanEditTutorielDescription;
if ("type".equals(property)){returncanEditTutorielDescription;
if ("audioT".equals(property)){returncanEditTutorielDescription;
if ("videoT".equals(property)){returncanEditTutorielDescription;
if ("textT".equals(property)){returncanEditTutorielDescription;
if thecurrentusercanaccessaSmsPredefiniproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaSmsPredefinipropertyprivatebooleancanAccessSmsPredefiniProperty(Stringproperty){
if ("type".equals(property)){returncanReadSmsPredefiniDescription;
if ("objet".equals(property)){returncanReadSmsPredefiniDescription;
if ("periodicite".equals(property)){returncanReadSmsPredefiniDescription;
if ("dateEnvoyeSMSPonctuel".equals(property)){returncanReadSmsPredefiniDescription;
if ("statut".equals(property)){returncanReadSmsPredefiniDescription;
if ("message".equals(property)){returncanReadSmsPredefiniDescription;
if ("reponse1".equals(property)){returncanReadSmsPredefiniDescription;
if ("reponse2".equals(property)){returncanReadSmsPredefiniDescription;
if ("bonneReponse".equals(property)){returncanReadSmsPredefiniDescription;
if ("envoyerAPartirDe".equals(property)){returncanReadSmsPredefiniDescription;
if ("arreterEnvoyerA".equals(property)){returncanReadSmsPredefiniDescription;
if thecurrentusercanupdateaSmsPredefiniproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaSmsPredefinipropertyprivatebooleancanUpdateSmsPredefiniProperty(Stringproperty){
if ("type".equals(property)){returncanEditSmsPredefiniDescription;
if ("objet".equals(property)){returncanEditSmsPredefiniDescription;
if ("periodicite".equals(property)){returncanEditSmsPredefiniDescription;
if ("dateEnvoyeSMSPonctuel".equals(property)){returncanEditSmsPredefiniDescription;
if ("statut".equals(property)){returncanEditSmsPredefiniDescription;
if ("message".equals(property)){returncanEditSmsPredefiniDescription;
if ("reponse1".equals(property)){returncanEditSmsPredefiniDescription;
if ("reponse2".equals(property)){returncanEditSmsPredefiniDescription;
if ("bonneReponse".equals(property)){returncanEditSmsPredefiniDescription;
if ("envoyerAPartirDe".equals(property)){returncanEditSmsPredefiniDescription;
if ("arreterEnvoyerA".equals(property)){returncanEditSmsPredefiniDescription;
if thecurrentusercanaccessaOutBoxproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaOutBoxpropertyprivatebooleancanAccessOutBoxProperty(Stringproperty){
if ("patient".equals(property)){returncanReadOutBoxAdresse;
if ("message".equals(property)){returncanReadOutBoxMessageInformation;
if ("reponse".equals(property)){returncanReadOutBoxMessageInformation;
if ("statut".equals(property)){returncanReadOutBoxMessageInformation;
if ("dateDernierEssai".equals(property)){returncanReadOutBoxMessageInformation;
if thecurrentusercanupdateaOutBoxproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaOutBoxpropertyprivatebooleancanUpdateOutBoxProperty(Stringproperty){
if ("patient".equals(property)){returncanEditOutBoxAdresse;
if ("message".equals(property)){returncanEditOutBoxMessageInformation;
if ("reponse".equals(property)){returncanEditOutBoxMessageInformation;
if ("statut".equals(property)){returncanEditOutBoxMessageInformation;
if ("dateDernierEssai".equals(property)){returncanEditOutBoxMessageInformation;
if thecurrentusercanaccessaUtilisateurproperty*@parampropertythepropertywhoseaccesshastobechecked*@returntrue
if thecurrentusercanaccessaUtilisateurpropertyprivatebooleancanAccessUtilisateurProperty(Stringproperty){
if ("nom".equals(property)){returncanReadUtilisateurIdentif ication;
if ("dateNaissance".equals(property)){returncanReadUtilisateurIdentif ication;
if ("profession".equals(property)){returncanReadUtilisateurIdentif ication;
if ("telephoneUn".equals(property)){returncanReadUtilisateurContact;
if ("telephoneDeux".equals(property)){returncanReadUtilisateurContact;
if ("telephoneTrois".equals(property)){returncanReadUtilisateurContact;
if ("email".equals(property)){returncanReadUtilisateurContact;
if ("libelle".equals(property)){returncanReadUtilisateurContact;
if ("complementAdresse".equals(property)){returncanReadUtilisateurContact;
if ("quartier".equals(property)){returncanReadUtilisateurContact;
if ("ville".equals(property)){returncanReadUtilisateurContact;
if ("codePostal".equals(property)){returncanReadUtilisateurContact;
if thecurrentusercanupdateaUtilisateurproperty*@parampropertythepropertywhoseupdateprivilegehastobechecked*@returntrue
if thecurrentusercanupdateaUtilisateurpropertyprivatebooleancanUpdateUtilisateurProperty(Stringproperty){
if ("nom".equals(property)){returncanEditUtilisateurIdentif ication;
if ("dateNaissance".equals(property)){returncanEditUtilisateurIdentif ication;
if ("profession".equals(property)){returncanEditUtilisateurIdentif ication;
if ("telephoneUn".equals(property)){returncanEditUtilisateurContact;
if ("telephoneDeux".equals(property)){returncanEditUtilisateurContact;
if ("telephoneTrois".equals(property)){returncanEditUtilisateurContact;
if ("email".equals(property)){returncanEditUtilisateurContact;
if ("libelle".equals(property)){returncanEditUtilisateurContact;
if ("complementAdresse".equals(property)){returncanEditUtilisateurContact;
if ("quartier".equals(property)){returncanEditUtilisateurContact;
if ("ville".equals(property)){returncanEditUtilisateurContact;
if ("codePostal".equals(property)){returncanEditUtilisateurContact;
if (profile.getId().equals(Profile.ADMINISTRATOR)){returntrue;
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (isoCodes!=null){inti=0;for(StringisoCode:isoCodes){localeListBox.addItem(isoCode);//selectcurrentlocale
if (isoCode.equals(currentLocale))localeListBox.setSelectedIndex(i);i++;
if (edited)storeText(currentLocale);//changetextdependingonlocalecurrentLocale=localeListBox.getValue(localeListBox.getSelectedIndex());textBox.setText(getLocalizedText(currentLocale));
if (values!=null){
if (locale.equals("fr"))returnvalues.getFrancais();
if (locale.equals("en"))returnvalues.getEnglish();return"";
if theboxvalueisnull*@returnprivatebooleanisNull(){
if ((values.getFrancais()==null||values.getFrancais().isEmpty())&&(values.getEnglish()==null||values.getEnglish().isEmpty()))returntrue;
else returnfalse;
if (values!=null){
if (locale.equals("fr"))values.setFrancais(textBox.getText());
if (locale.equals("en"))values.setEnglish(textBox.getText());
if (!enabled){textBox.addStyleDependentName("disabled");localeListBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");localeListBox.removeStyleDependentName("disabled");
if (value!=null){//displaythetextforthecurrentlocaletextBox.setText(getLocalizedText(currentLocale));//
if notextisavailableforthecurrentlocale,getthefirstonethatisavailable
if (textBox.getText()==null||textBox.getText().equals("")){for(inti=0;i<localeListBox.getItemCount();i++){Stringlocale=localeListBox.getValue(i);Stringtext=getLocalizedText(locale);
if (text!=null&&!text.equals("")){textBox.setText(text);localeListBox.setSelectedIndex(i);currentLocale=locale;return;
if (edited)storeText(currentLocale);
if (isNull())returnnull;
else returnvalues;
if (eventBus!=null){textBox.addValueChangeHandler(newValueChangeHandler<String>(){@OverridepublicvoidonValueChange(ValueChangeEvent<String>arg0){eventBus.fireEvent(newFieldValueChangeEvent(ImogLocalizedTextAreaBox.this));
if (dateDebutTraitementBeforeBox.getValue()!=null){FilterCriteriadateDebutTraitementBeforeCrit=newFilterCriteria();dateDebutTraitementBeforeCrit.setField("dateDebutTraitement");dateDebutTraitementBeforeCrit.setFieldDisplayName(NLS.constants().casTuberculose_field_dateDebutTraitement()+BaseNLS.constants().search_operator_inferior());dateDebutTraitementBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateDebutTraitementBeforeCrit.setValue(DateUtil.getDate(dateDebutTraitementBeforeBox.getValue()));dateDebutTraitementBeforeCrit.setValueDisplayName(DateUtil.getDate(dateDebutTraitementBeforeBox.getValue()));criteria.add(dateDebutTraitementBeforeCrit);
if (dateDebutTraitementAfterBox.getValue()!=null){FilterCriteriadateDebutTraitementAfterCrit=newFilterCriteria();dateDebutTraitementAfterCrit.setField("dateDebutTraitement");dateDebutTraitementAfterCrit.setFieldDisplayName(NLS.constants().casTuberculose_field_dateDebutTraitement()+BaseNLS.constants().search_operator_superior());dateDebutTraitementAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateDebutTraitementAfterCrit.setValue(DateUtil.getDate(dateDebutTraitementAfterBox.getValue()));dateDebutTraitementAfterCrit.setValueDisplayName(DateUtil.getDate(dateDebutTraitementAfterBox.getValue()));criteria.add(dateDebutTraitementAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCasTuberculoseInformations()){dateDebutTraitementBeforeFilterBox.setVisible(false);dateDebutTraitementAfterFilterBox.setVisible(false);
if (!AccessManager.canReadCasTuberculoseInformations())typePatientFilterBox.setVisible(false);
if (!AccessManager.canReadCasTuberculoseInformations())formeMaladieFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if therelationfieldbuttonsshallbehiddenpublicSmsPredefiniEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;objet=newImogLocalizedTextBox(locales,NLS.constants().locale());message=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();type.setEdited(isEdited);objet.setEdited(isEdited);periodicite.setEdited(isEdited);dateEnvoyeSMSPonctuel.setEdited(isEdited);statut.setEdited(isEdited);message.setEdited(isEdited);reponse1.setEdited(isEdited);reponse2.setEdited(isEdited);bonneReponse.setEdited(isEdited);envoyerAPartirDe.setEdited(isEdited);arreterEnvoyerA.setEdited(isEdited);
if (!AccessManager.canReadSmsPredefiniDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditSmsPredefiniDescription())descriptionSection.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("5"))){dateEnvoyeSMSPonctuel.setVisible(true);
else {dateEnvoyeSMSPonctuel.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("1"))){reponse1.setVisible(true);
else {reponse1.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("1"))){reponse2.setVisible(true);
else {reponse2.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("1"))){bonneReponse.setVisible(true);
else {bonneReponse.setVisible(false);
if (type.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"type");//objetisarequiredfield
if (objet.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"objet");//periodiciteisarequiredfield
if (periodicite.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"periodicite");//statutisarequiredfield
if (statut.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"statut");//messageisarequiredfield
if (message.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"message");//envoyerAPartirDeisarequiredfield
if (envoyerAPartirDe.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"envoyerAPartirDe");
if (errors!=null&&errors.size()>0){List<EditorError>typeFieldErrors=newArrayList<EditorError>();List<EditorError>objetFieldErrors=newArrayList<EditorError>();List<EditorError>periodiciteFieldErrors=newArrayList<EditorError>();List<EditorError>statutFieldErrors=newArrayList<EditorError>();List<EditorError>messageFieldErrors=newArrayList<EditorError>();List<EditorError>envoyerAPartirDeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("type"))typeFieldErrors.add(error);
if (field.equals("objet"))objetFieldErrors.add(error);
if (field.equals("periodicite"))periodiciteFieldErrors.add(error);
if (field.equals("statut"))statutFieldErrors.add(error);
if (field.equals("message"))messageFieldErrors.add(error);
if (field.equals("envoyerAPartirDe"))envoyerAPartirDeFieldErrors.add(error);
if (typeFieldErrors.size()>0)type.showErrors(typeFieldErrors);
if (objetFieldErrors.size()>0)objet.showErrors(objetFieldErrors);
if (periodiciteFieldErrors.size()>0)periodicite.showErrors(periodiciteFieldErrors);
if (statutFieldErrors.size()>0)statut.showErrors(statutFieldErrors);
if (messageFieldErrors.size()>0)message.showErrors(messageFieldErrors);
if (envoyerAPartirDeFieldErrors.size()>0)envoyerAPartirDe.showErrors(envoyerAPartirDeFieldErrors);
if (searchText==null)handler.listCentreDiagTrait();
else handler.listCentreDiagTrait(searchText);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"CDT.id"),personnel.getCDT().getId());
if (entity.getQualif ication()!=null){StringBuilderbuilder=newStringBuilder();for(Qualif icationi:entity.getQualif ication()){builder.append(i.getId()).append(";");
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (session!=null){return(ImogActor)session.getAttribute(SESSION_USER);
if (session!=null){session.setAttribute(SESSION_USER,actor);
if (session!=null){session.setAttribute(SESSION_SECURITY_POLICY,policy);
if (session!=null){return(AccessPolicy)session.getAttribute(SESSION_SECURITY_POLICY);
if (parent!=null){editor=newPatientEditor(factory,true);this.initField=initField;
else editor=newPatientEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().patient_create_title());createDriver();createNewPatient();this.setContent(editor);
if (parent!=null){editor=newPatientEditor(factory,true);this.initField=initField;
else editor=newPatientEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchPatient(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (casIndex!=null&&casIndex.size()>0){for(CasIndexProxyitem:casIndex){
if (examensBiologiques!=null&&examensBiologiques.size()>0){for(ExamenBiologiqueProxyitem:examensBiologiques){
if (serologies!=null&&serologies.size()>0){for(ExamenSerologieProxyitem:serologies){
if (AccessManager.canEditPatient())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Patientformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewPatientEvent(current.getId(),closeEvent));
if (handler==null)initHandler();returnhandler.getById(id);
if (handler==null)initHandler();returnhandler.getById(id);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"regionArrivee.id"),personnel.getRegion().getId()));
else 
if ("2".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"districtSanteArrivee.id"),personnel.getDistrictSante().getId()));
else 
if ("3".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"CDTDepart.id"),personnel.getCDT().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"CDTArrivee.id"),personnel.getCDT().getId()));
if (EpicamIconConstants.PERSONNEL_ICON!=null)personnel=newEntityPanel(NLS.constants().personnel_name(),EpicamIconConstants.PERSONNEL_ICON);
else personnel=newEntityPanel(NLS.constants().personnel_name());
if (EpicamIconConstants.UTILISATEUR_ICON!=null)utilisateur=newEntityPanel(NLS.constants().utilisateur_name(),EpicamIconConstants.UTILISATEUR_ICON);
else utilisateur=newEntityPanel(NLS.constants().utilisateur_name());temaAdministration=newFieldGroupPanel();temaAdministration.setGroupTitle(AdminNLS.constants().thema_administration());notif ication=newEntityPanel(AdminNLS.constants().notif ication_name(),AdminIconConstants.NOTif ICATION_ICON);dynamicField_Template=newEntityPanel(DynFieldsNLS.constants().dynamicField_Template_name(),AdminIconConstants.DYNAMICFIELD_TEMPLATE_ICON);profile=newEntityPanel(AdminNLS.constants().profile_name());temaModel=newFieldGroupPanel();temaModel.setGroupTitle(AdminNLS.constants().thema_model());cardEntity=newEntityPanel(AdminNLS.constants().cardEntity_name());fieldGroup=newEntityPanel(AdminNLS.constants().fieldGroup_name());temaHelp=newFieldGroupPanel();temaHelp.setGroupTitle(BaseNLS.messages().thema_Help());initWidget(BINDER.createAndBindUi(this));configMenus();setVisibility();intheight=Window.getClientHeight();setPanelContentHeight(height-height/5);
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel()){personnel.setCreateClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_NEW+"/personnel/",true);
else personnel.setCreateClickHandler(null);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){personnel.setListClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/personnel/"+searchValue,true);
else {personnel.setListClickHandler(null);personnel.setSearchClickHandler(null);
if (AccessManager.canCreateUtilisateur()&&AccessManager.canEditUtilisateur()){utilisateur.setCreateClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_NEW+"/utilisateur/",true);
else utilisateur.setCreateClickHandler(null);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){utilisateur.setListClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/utilisateur/"+searchValue,true);
else {utilisateur.setListClickHandler(null);utilisateur.setSearchClickHandler(null);
if (ProfileUtil.isAdmin()){notif ication.setCreateClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_NEW+"/notif ication/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/notif ication/searchValue",true);
else {notif ication.setCreateClickHandler(null);notif ication.setListClickHandler(null);notif ication.setSearchClickHandler(null);
if (ProfileUtil.isAdmin()){dynamicField_Template.setCreateClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_NEW+"/dynamicfieldtemplate/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/dynamicfieldtemplate/searchValue",true);
else {dynamicField_Template.setCreateClickHandler(null);dynamicField_Template.setListClickHandler(null);dynamicField_Template.setSearchClickHandler(null);
if (ProfileUtil.isAdmin()){fieldGroup.setCreateClickHandler(null);fieldGroup.setListClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/fieldgroup/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/fieldgroup/searchValue",true);
else {fieldGroup.setCreateClickHandler(null);fieldGroup.setListClickHandler(null);fieldGroup.setSearchClickHandler(null);
if (ProfileUtil.isAdmin()){profile.setCreateClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_NEW+"/profile/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/profile/searchValue",true);
else {profile.setCreateClickHandler(null);profile.setListClickHandler(null);profile.setSearchClickHandler(null);
if (ProfileUtil.isAdmin()){cardEntity.setCreateClickHandler(null);cardEntity.setListClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/cardentity/",true);
if (searchValue!=null&&!searchValue.isEmpty())History.newItem(TokenHelper.TK_LIST+"/cardentity/searchValue",true);
else {cardEntity.setCreateClickHandler(null);cardEntity.setListClickHandler(null);cardEntity.setSearchClickHandler(null);
if (!AccessManager.canDirectAccessPersonnel()||!AccessManager.canReadPersonnel())personnel.setVisible(false);
else showUsersTema=true;
if (!AccessManager.canDirectAccessUtilisateur()||!AccessManager.canReadUtilisateur())utilisateur.setVisible(false);
else showUsersTema=true;
if (!showUsersTema)temaUsers.setVisible(false);temaAdministration.setVisible(true);notif ication.setVisible(false);dynamicField_Template.setVisible(false);profile.setVisible(true);cardEntity.setVisible(true);fieldGroup.setVisible(true);temaModel.setVisible(true);
if (initField==null)handler.saveDetailCommandeIntrant(value);
else handler.saveDetailCommandeIntrant(value,initField);
if theBooleanshallbestrict*(displaysonly'yes'and'no'options,hidesthe'unknown'option)*@paramisStricttruetosettheBooleanBoxasstrictpublicvoidisStrict(booleanisStrict){booleanBox.isStrict(isStrict);
if (value.equals("true"))returntrue;
else 
if (value.equals("false"))returnfalse;
else returnnull;
else 
if (value)listBox.setSelectedIndex(1);
else listBox.setSelectedIndex(2);
if (parent!=null){editor=newOutBoxEditor(factory,true);this.initField=initField;
else editor=newOutBoxEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().outBox_create_title());createDriver();createNewOutBox();this.setContent(editor);
if (parent!=null){editor=newOutBoxEditor(factory,true);this.initField=initField;
else editor=newOutBoxEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchOutBox(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditOutBox())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("OutBoxformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewOutBoxEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DynamicFieldTemplateentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if (criterions!=null)junction.add(criterions);List<DynamicFieldTemplate>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DynamicFieldTemplate>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DynamicFieldTemplate>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DynamicFieldTemplateentity:entities)delete(entity);
if (resultForDynamicField_InstanceFieldTemplate!=null){for(DynamicFieldInstanceforeignEntity:resultForDynamicField_InstanceFieldTemplate){foreignEntity.setModif ied(newDate());foreignEntity.setFieldTemplate(null);dynamicFieldInstanceFieldTemplateDao.saveOrUpdate(foreignEntity,false);
if therelationfieldbuttonsshallbehiddenpublicFormationEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();libelle=newImogLocalizedTextBox(locales,NLS.constants().locale());lieu=newImogLocalizedTextBox(locales,NLS.constants().locale());objectif s=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencandidatures=newImogMultiRelationBox<CandidatureFormationProxy>(candidaturesDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCandidatureFormation()&&AccessManager.canEditCandidatureFormation())candidatures=newImogMultiRelationBox<CandidatureFormationProxy>(candidaturesDataProvider,EpicamRenderer.get(),null);
else candidatures=newImogMultiRelationBox<CandidatureFormationProxy>(false,candidaturesDataProvider,EpicamRenderer.get(),null);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();libelle.setEdited(isEdited);dateDebut.setEdited(isEdited);dateFin.setEdited(isEdited);lieu.setEdited(isEdited);objectif s.setEdited(isEdited);effectuee.setEdited(isEdited);candidatures.setEdited(isEdited);
if (!AccessManager.canReadFormationDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditFormationDescription())descriptionSection.setVisible(false);
if (!candidatures.isEmpty()&&candidatures.getSelectedEntities().size()>0){CandidatureFormationProxyvalue=candidatures.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();CandidatureFormationFormPanelform=newCandidatureFormationFormPanel(requestFactory,value.getId(),relationPopup,"candidatures");relationPopup.addWidget(form);relationPopup.show();
if (!candidatures.isPresent(value))candidatures.addValue(value);
if (initField.equals("candidatures")){
if (candidatures.isPresent(value))candidatures.replaceValue(value);
else candidatures.addValue(value,true);
if (dateDebut.getValueWithoutParseException()==null&&dateDebut.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateDebut");//dateFinisarequiredfield
if (dateFin.getValueWithoutParseException()==null&&dateFin.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateFin");//objectif sisarequiredfield
if (objectif s.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"objectif s");
if (errors!=null&&errors.size()>0){List<EditorError>dateDebutFieldErrors=newArrayList<EditorError>();List<EditorError>dateFinFieldErrors=newArrayList<EditorError>();List<EditorError>objectif sFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateDebut"))dateDebutFieldErrors.add(error);
if (field.equals("dateFin"))dateFinFieldErrors.add(error);
if (field.equals("objectif s"))objectif sFieldErrors.add(error);
if (dateDebutFieldErrors.size()>0)dateDebut.showErrors(dateDebutFieldErrors);
if (dateFinFieldErrors.size()>0)dateFin.showErrors(dateFinFieldErrors);
if (objectif sFieldErrors.size()>0)objectif s.showErrors(objectif sFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if (key.equals("error_required"))returnBaseNLS.messages().error_required();
else returnkey;
if (EpicamIconConstants.RECEPTION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RECEPTION_ICON);ReceptionDataProviderprovider=newReceptionDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteReception()&&AccessManager.canEditReception())listComposite=newReceptionDynaTable(requestFactory,provider,true);
else listComposite=newReceptionDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (!enabled){textBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");
if (textBox.getValue().isEmpty())returnnull;
else returntextBox.getValue();
if (dateArriveeBeforeBox.getValue()!=null){FilterCriteriadateArriveeBeforeCrit=newFilterCriteria();dateArriveeBeforeCrit.setField("dateArrivee");dateArriveeBeforeCrit.setFieldDisplayName(NLS.constants().arriveePersonnel_field_dateArrivee()+BaseNLS.constants().search_operator_inferior());dateArriveeBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateArriveeBeforeCrit.setValue(DateUtil.getDate(dateArriveeBeforeBox.getValue()));dateArriveeBeforeCrit.setValueDisplayName(DateUtil.getDate(dateArriveeBeforeBox.getValue()));criteria.add(dateArriveeBeforeCrit);
if (dateArriveeAfterBox.getValue()!=null){FilterCriteriadateArriveeAfterCrit=newFilterCriteria();dateArriveeAfterCrit.setField("dateArrivee");dateArriveeAfterCrit.setFieldDisplayName(NLS.constants().arriveePersonnel_field_dateArrivee()+BaseNLS.constants().search_operator_superior());dateArriveeAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateArriveeAfterCrit.setValue(DateUtil.getDate(dateArriveeAfterBox.getValue()));dateArriveeAfterCrit.setValueDisplayName(DateUtil.getDate(dateArriveeAfterBox.getValue()));criteria.add(dateArriveeAfterCrit);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setFieldDisplayName(NLS.constants().region_field_nom());region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(region_nomBox.getValue());region_nomCrit.setValueDisplayName(region_nomBox.getValue());criteria.add(region_nomCrit);FilterCriteriadistrictsante_nomCrit=newFilterCriteria();
if (locale.equals("fr"))districtsante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtsante_nomCrit.setField("districtSante.nom.english");districtsante_nomCrit.setFieldDisplayName(NLS.constants().districtSante_field_nom());districtsante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtsante_nomCrit.setValue(districtsante_nomBox.getValue());districtsante_nomCrit.setValueDisplayName(districtsante_nomBox.getValue());criteria.add(districtsante_nomCrit);FilterCriteriacdt_nomCrit=newFilterCriteria();cdt_nomCrit.setField("cDT.nom");cdt_nomCrit.setFieldDisplayName(NLS.constants().centreDiagTrait_field_nom());cdt_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cdt_nomCrit.setValue(cdt_nomBox.getValue());cdt_nomCrit.setValueDisplayName(cdt_nomBox.getValue());criteria.add(cdt_nomCrit);FilterCriteriapersonnel_nomCrit=newFilterCriteria();personnel_nomCrit.setField("personnel.nom");personnel_nomCrit.setFieldDisplayName(NLS.constants().personnel_field_nom());personnel_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);personnel_nomCrit.setValue(personnel_nomBox.getValue());personnel_nomCrit.setValueDisplayName(personnel_nomBox.getValue());criteria.add(personnel_nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadArriveePersonnelDescription()){dateArriveeBeforeFilterBox.setVisible(false);dateArriveeAfterFilterBox.setVisible(false);
if (!AccessManager.canReadRegionDescription())region_nomFilterBox.setVisible(false);
if (!AccessManager.canReadDistrictSanteDescription())districtsante_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadPersonnelIdentif ication())personnel_nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (AccessManager.canReadHorsUsageDescription()){Column<HorsUsageProxy,String>lotColumn=newLotColumn();lotColumn.setSortable(true);table.addColumn(lotColumn,NLS.constants().horsUsage_field_s_lot());
if (AccessManager.canReadHorsUsageDescription()){Column<HorsUsageProxy,String>typeColumn=newTypeColumn();typeColumn.setSortable(true);table.addColumn(typeColumn,NLS.constants().horsUsage_field_s_type());
if (AccessManager.canCreateHorsUsage()&&AccessManager.canEditHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/horsusage/",true);
else returnnull;
if (AccessManager.canDeleteHorsUsage()&&AccessManager.canEditHorsUsage()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteHorsUsage()&&AccessManager.canEditHorsUsage()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<HorsUsageProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().horsUsage_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(HorsUsageProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getHorsUsageRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedHorsUsageentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListHorsUsageEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.HO_US_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=horsUsage_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getLot()==null)value="";
else value=renderer.getDisplayValue(object.getLot());
if (object!=null){
if (object.getType()==null)value="";
else value=renderer.getEnumDisplayValue(HorsUsageProxy.class,"type",object.getType());
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailCommandeMedicamentProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailCommandeMedicamentEditorNestedRow>editors=editor.getEditors();DetailCommandeMedicamentEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailCommandeMedicamentEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailCommandeMedicamentEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailCommandeMedicamentEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailCommandeMedicamentEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailCommandeMedicamentProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Medicamententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Medicament>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Medicament>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Medicament>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Medicamententity:entities)delete(entity);
if (code!=null&&!code.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("code");criteria.setValue(code);junction.add(criteria);
if (designation!=null&&!designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("designation");criteria.setValue(designation);junction.add(criteria);
if (estMedicamentAntituberculeux!=null&&!estMedicamentAntituberculeux.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("estMedicamentAntituberculeux");criteria.setValue(estMedicamentAntituberculeux);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeMedicamentEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();medicament.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())medicament.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteEnStock.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())medicament.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())quantiteRequise.setVisible(false);
if (!AccessManager.canEditDetailCommandeMedicamentDescription())quantiteEnStock.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if (searchText==null)handler.listPatient();
else handler.listPatient(searchText);
if (EpicamIconConstants.ARRIVEEPERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.ARRIVEEPERSONNEL_ICON);ArriveePersonnelDataProviderprovider=newArriveePersonnelDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteArriveePersonnel()&&AccessManager.canEditArriveePersonnel())listComposite=newArriveePersonnelDynaTable(requestFactory,provider,true);
else listComposite=newArriveePersonnelDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (url==null)icon.setVisible(false);
else icon.setUrl(url);this.title=newLabel(title);create=newPushButton(BaseNLS.constants().button_create());list=newPushButton(BaseNLS.constants().button_list());initWidget(BINDER.createAndBindUi(this));
if (handler!=null)registrations.add(create.addClickHandler(handler));
else create.setVisible(false);
if (handler!=null)registrations.add(list.addClickHandler(handler));
else list.setVisible(false);
if (create!=null){create.setText(text);create.getElement().getStyle().setProperty("width",width);
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if therelationfieldbuttonsshallbehiddenpublicQualif icationEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;nom=newImogLocalizedTextBox(locales,NLS.constants().locale());description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);
if (!AccessManager.canReadQualif icationDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditQualif icationDescription())descriptionSection.setVisible(false);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getLot()!=null){bck.setLot(entity.getLot().getId());
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"CDT.id"),personnel.getCDT().getId());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().lot_field_s_cDT());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>numeroColumn=newNumeroColumn();numeroColumn.setSortable(true);table.addColumn(numeroColumn,NLS.constants().lot_field_s_numero());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>quantiteColumn=newQuantiteColumn();quantiteColumn.setSortable(true);table.addColumn(quantiteColumn,NLS.constants().lot_field_s_quantite());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>datePeremptionColumn=newDatePeremptionColumn();datePeremptionColumn.setSortable(true);table.addColumn(datePeremptionColumn,NLS.constants().lot_field_s_datePeremption());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>intrantColumn=newIntrantColumn();intrantColumn.setSortable(true);table.addColumn(intrantColumn,NLS.constants().lot_field_s_intrant());
if (AccessManager.canReadLotDescription()){Column<LotProxy,String>medicamentColumn=newMedicamentColumn();medicamentColumn.setSortable(true);table.addColumn(medicamentColumn,NLS.constants().lot_field_s_medicament());
if (AccessManager.canCreateLot()&&AccessManager.canEditLot()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/lot/",true);
else returnnull;
if (AccessManager.canDeleteLot()&&AccessManager.canEditLot()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteLot()&&AccessManager.canEditLot()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<LotProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().lot_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(LotProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getLotRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedLotentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListLotEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportLot()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.LOT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=lot_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getNumero()==null)value="";
else value=object.getNumero();
if (object!=null){
if (object.getQuantite()==null)value="";
else value=object.getQuantite().toString();
if (object!=null){
if (object.getDatePeremption()==null)value="";
else value=DateUtil.getFormatedDate(object.getDatePeremption());
if (object!=null){
if (object.getIntrant()==null)value="";
else value=renderer.getDisplayValue(object.getIntrant());
if (object!=null){
if (object.getMedicament()==null)value="";
else value=renderer.getDisplayValue(object.getMedicament());
if (searchText==null)handler.listRapport();
else handler.listRapport(searchText);
if (handler==null)initHandler();returnhandler.findById(id);
if (entity.getReception()!=null){bck.setReception(entity.getReception().getId());
if (entity.getCommande()!=null){bck.setCommande(entity.getCommande().getId());
if (entity.getDetailCommande()!=null){bck.setDetailCommande(entity.getDetailCommande().getId());
if (entity.getEntreeLot()!=null){bck.setEntreeLot(entity.getEntreeLot().getId());
if (AccessManager.canReadDetailCommandeMedicamentDescription()){Column<DetailCommandeMedicamentProxy,String>quantiteRequiseColumn=newQuantiteRequiseColumn();quantiteRequiseColumn.setSortable(true);table.addColumn(quantiteRequiseColumn,NLS.constants().detailCommandeMedicament_field_s_quantiteRequise());
if (AccessManager.canReadDetailCommandeMedicamentDescription()){Column<DetailCommandeMedicamentProxy,String>quantiteEnStockColumn=newQuantiteEnStockColumn();quantiteEnStockColumn.setSortable(true);table.addColumn(quantiteEnStockColumn,NLS.constants().detailCommandeMedicament_field_s_quantiteEnStock());
if (AccessManager.canReadDetailCommandeMedicamentDescription()){Column<DetailCommandeMedicamentProxy,String>medicamentColumn=newMedicamentColumn();medicamentColumn.setSortable(true);table.addColumn(medicamentColumn,NLS.constants().detailCommandeMedicament_field_s_medicament());
if (AccessManager.canCreateDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailcommandemedicament/",true);
else returnnull;
if (AccessManager.canDeleteDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailCommandeMedicamentProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailCommandeMedicament_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailCommandeMedicamentProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailCommandeMedicamentRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailCommandeMedicamententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailCommandeMedicamentEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailCommandeMedicament()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_CMD_MED_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailCommandeMedicament_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getQuantiteRequise()==null)value="";
else value=object.getQuantiteRequise().toString();
if (object!=null){
if (object.getQuantiteEnStock()==null)value="";
else value=object.getQuantiteEnStock().toString();
if (object!=null){
if (object.getMedicament()==null)value="";
else value=renderer.getDisplayValue(object.getMedicament());
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.CDT.id"),personnel.getCDT().getId());
if (parent!=null){editor=newCommandeEditor(factory,true);this.initField=initField;
else editor=newCommandeEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().commande_create_title());createDriver();createNewCommande();this.setContent(editor);
if (parent!=null){editor=newCommandeEditor(factory,true);this.initField=initField;
else editor=newCommandeEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCommande(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (medicaments!=null&&medicaments.size()>0){for(DetailCommandeMedicamentProxyitem:medicaments){
if (intrants!=null&&intrants.size()>0){for(DetailCommandeIntrantProxyitem:intrants){
if (AccessManager.canEditCommande())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Commandeformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCommandeEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if (EpicamIconConstants.DETAILINVENTAIRE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILINVENTAIRE_ICON);DetailInventaireDataProviderprovider=newDetailInventaireDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailInventaire()&&AccessManager.canEditDetailInventaire())listComposite=newDetailInventaireDynaTable(requestFactory,provider,true);
else listComposite=newDetailInventaireDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCandidatureFormationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCandidatureFormationEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newCandidatureFormationEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newCandidatureFormationEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCandidatureFormationEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.CANDIDATUREFORMATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CANDIDATUREFORMATION_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCandidatureFormationFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetFormation(FormationProxyvalue,booleanisLocked){editorWorkflow.setFormation(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editorWorkflow.setPersonnel(value,isLocked);
if (workingCopy.get(i)!=value){workingCopy.set(i,value);
if andonly
if thebackinglististhe*sameinstanceasthepassedlist.booleanisSameValue(List<T>value){//identitycheckintentionalreturn(backing==value);
if (i<size()){this.set(i,item);
else {asserti==size();this.add(i,item);
if therelationfieldbuttonsshallbehiddenpublicRapportEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrict=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())district=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else district=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencdt=newImogSingleRelationBox<CentreDiagTraitProxy>(cdtDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())cdt=newImogSingleRelationBox<CentreDiagTraitProxy>(cdtDataProvider,EpicamRenderer.get());
else cdt=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cdtDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlaboratoire=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())laboratoire=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get());
else laboratoire=newImogSingleRelationBox<LaboratoireReferenceProxy>(false,laboratoireReferenceDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshidden//region=newImogMultiRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);//
else {//inwrapperpanel,relationbuttonsenabled//
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())//region=newImogMultiRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),null);//else //region=newImogMultiRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get(),null);//
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);district.setEdited(isEdited);cdt.setEdited(isEdited);typeRapport.setEdited(isEdited);personnel.setEdited(true);patient.setEdited(true);laboratoire.setEdited(true);trimestre.setEdited(isEdited);annee.setEdited(isEdited);date_debut.setEdited(isEdited);date_fin.setEdited(isEdited);
if (field.equals(region)){clearDistrictWidget();getDistrictFilteredByRegion(region.getValue());
if (field.equals(district)){clearCDTWidget();getCDTFilteredByDistrict(district.getValue());
if (district.getValue()!=null){RegionProxyproxy=district.getValue().getRegion();region.setValue(proxy);
if (field.equals(cdt)){CentreDiagTraitProxycdtValue=cdt.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();district.setValue(districtValue);
if (field.equals(cdt)){//CentreDiagTraitProxycdtValue=cdt.getValue();//
if (cdtValue!=null){//RegionProxyregionValue=cdtValue.getRegion();//region.setValue(regionValue);//DistrictSanteProxydistrictValue=cdtValue//.getDistrictSante();//district.setValue(districtValue);//
else {if (trimestre.getValue()==null||trimestre.getValue().trim()==""){date_debut.setEdited(true);date_fin.setEdited(true);
if (pRegion!=null){
if (!hideButtons)district.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)cdt.hideButtons(false);cdtDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)cdt.hideButtons(false);cdtDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cdtDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictWidget();getDistrictFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){district.setLocked(isLocked);district.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrict(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){cdt.setLocked(isLocked);cdt.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (district.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,district.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))district.setValue(value,true);
if (cdt.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,cdt.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))cdt.setValue(value,true);
else returntrue;
if (region.getValue()!=null)url=url+"&region="+region.getValue().getId();
if (district.getValue()!=null)url=url+"&district="+district.getValue().getId();
if (cdt.getValue()!=null)url=url+"&cdt="+cdt.getValue().getId();
if (personnel.getValue()!=null)url=url+"&personnel="+personnel.getValue().getId();
if (laboratoire.getValue()!=null)url=url+"&laboratoire="+laboratoire.getValue().getId();
if (patient.getValue()!=null)url=url+"&patient="+patient.getValue().getId();
if (trimestre.getValue()!=null)url=url+"&trimestre="+trimestre.getValue();
if (annee.getValue()!=null)url=url+"&annee="+annee.getValue();
if (date_debut.getValue()!=null)url=url+"&dateDebut="+getDate_debut();
if (date_fin.getValue()!=null)url=url+"&dateFin="+getDate_fin();returnurl;
if (info!=null)column=info;
else column="";
if (patientId!=null&&!(patientId.trim()).equals("")){System.out.println("Filtrageparpatient:-------------------------------------------------------------------------------");ImogConjunctioncriterion=newImogConjunction();BasicCriteriacriteria=newBasicCriteria();criteria.setField("patient.id");criteria.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);criteria.setValue(patientId);criterion.add(criteria);listCasTuberculoses=casTuberculoseHandler.listCasTuberculose(sortProperty,sortOrder,criterion);
else {listCasTuberculoses=casTuberculoseHandler.listCasTuberculose(sortProperty,sortOrder);
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){System.out.println("Letrimestrescontientdespatients");listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (trouve){listCasTuberculoses=listCasTBTmp;
if (patientId!=null&&!(patientId.trim()).equals("")){//ImogConjunctioncriterion=newImogConjunction();//BasicCriteriacriteria=newBasicCriteria();//criteria.setField("patient.id");//criteria.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);//criteria.setValue(patientId);//criterion.add(criteria);//listeExamenSerologies=examenSerologieHandler.listExamenSerologie(sortProperty,sortOrder,criterion);//
else {//listeExamenSerologies=examenSerologieHandler.listExamenSerologie(sortProperty,sortOrder);//
if (patientId!=null&&!(patientId.trim()).equals("")){//ImogConjunctioncriterion=newImogConjunction();//BasicCriteriacriteria=newBasicCriteria();//criteria.setField("casTb.patient.id");//criteria.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);//criteria.setValue(patientId);//criterion.add(criteria);//listExamenMicroscopies=examenMicroscopieHandler.listExamenMicroscopie(sortProperty,sortOrder,criterion);//
else {//listExamenMicroscopies=examenMicroscopieHandler.listExamenMicroscopie(sortProperty,sortOrder);//
if (anneeInt!=null&&trimester!=null){LOGGER.debug("Trimestre="+trimester);
if (trimester.equals("trimestre1")){LOGGER.debug("Firstquarterofyear"+anneeInt);
else 
if (trimester.equals("trimestre2")){LOGGER.debug("Secondquarterofyear"+anneeInt);
else 
if (trimester.equals("trimestre3")){LOGGER.debug("Thirdquarterofyear"+anneeInt);
else 
if (trimester.equals("trimestre4")){LOGGER.debug("Fourthquarterofyear"+anneeInt);
if (casTuberculose.getCreated()!=null){tbRegister.setColumnMonth(casTuberculose.getCreated().getMonth());tbRegister.setColumnDateEnregistrement(""+casTuberculose.getCreated());
else tbRegister.setColumnDateEnregistrement("");
if (casTuberculose.getNumRegTB()!=null)tbRegister.setColumnNumRegLabo(casTuberculose.getNumRegTB());
else tbRegister.setColumnNumRegLabo("");
if (casTuberculose.getPatient().getNom()!=null)tbRegister.setColumnNom(casTuberculose.getPatient().getNom());
else tbRegister.setColumnNom("");
if (casTuberculose.getPatient().getSexe()!=null)tbRegister.setColumnSexe(casTuberculose.getPatient().getSexe());
else tbRegister.setColumnSexe("");
if (casTuberculose.getPatient().getAge()!=null)tbRegister.setColumnAge(casTuberculose.getPatient().getAge());
else tbRegister.setColumnAge(-99);
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)tbRegister.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)tbRegister.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)tbRegister.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else tbRegister.setColumnAdresse("");
if (casTuberculose!=null&&casTuberculose.getPatient()!=null){
if (casTuberculose.getPatient().getCentres()!=null){intindex=casTuberculose.getPatient().getCentres().size();//System.out.println("*****************LesCDTs-Lavaleurdel'indexestde:"//+index);
if (index>=1)tbRegister.setColumnCDTMalade(casTuberculose.getPatient().getCentres().get(index-1).getNom());
if (casTuberculose.getDateDebutTraitement()!=null)tbRegister.setColumnDateDebutTrait(""+casTuberculose.getDateDebutTraitement());
else tbRegister.setColumnDateDebutTrait("");
if (casTuberculose.getRegimePhaseInitiale()!=null&&casTuberculose.getRegimePhaseContinuation()!=null)tbRegister.setColumnRegime(casTuberculose.getRegimePhaseInitiale().getNom()+","+casTuberculose.getRegimePhaseContinuation().getNom());
else {
if (casTuberculose.getRegimePhaseInitiale()!=null)tbRegister.setColumnRegime(casTuberculose.getRegimePhaseInitiale().getNom());
else {
if (casTuberculose.getRegimePhaseContinuation()!=null)tbRegister.setColumnRegime(casTuberculose.getRegimePhaseContinuation().getNom());
else tbRegister.setColumnRegime("");
else column="";//
if (casTuberculose.getFormeMaladie()!=null)tbRegister.setColumnForme(casTuberculose.getFormeMaladie());
else tbRegister.setColumnForme("");
if (casTuberculose.getTypePatient()!=null)tbRegister.setColumnType(casTuberculose.getTypePatient());
else tbRegister.setColumnType("");
if (casTuberculose.getDevenirMalade()!=null)tbRegister.setColumnIssuTraitement(casTuberculose.getDevenirMalade());
else tbRegister.setColumnIssuTraitement("");
if (casTuberculose.getObservation()!=null)tbRegister.setColumnObservation(casTuberculose.getObservation());
else tbRegister.setColumnObservation("");//addingnewelementintothelistlistTBRegister.add(tbRegister);
if (casTuberculose.getNumRegTB()!=null)examenCrachats.setcolumnNumRegTBPatient(casTuberculose.getNumRegTB());
else examenCrachats.setcolumnNumRegTBPatient("");
if (casTuberculose.getPatient().getNom()!=null)examenCrachats.setColumnNomPatient(casTuberculose.getPatient().getNom());
else examenCrachats.setColumnNomPatient("");if (casTuberculose.getExamensMiscrocopies()!=null&&casTuberculose.getExamensMiscrocopies().size()>0){listExamenMicroscopies=casTuberculose.getExamensMiscrocopies();//getexamsandaddtoreportfor(ExamenMicroscopieexamenMicroscopie:listExamenMicroscopies){if (examenMicroscopie.getDate()!=null)examenCrachats.setColumnDate(examenMicroscopie.getDate());if (examenMicroscopie.getRaisonDepistage()!=null)examenCrachats.setColumnRaisonExam(examenMicroscopie.getRaisonDepistage());if (examenMicroscopie.getResultat()!=null)examenCrachats.setColumnResultat(examenMicroscopie.getResultat());listExamenCrachats.add(examenCrachats);
else listExamenCrachats.add(examenCrachats);
if (casTuberculose.getCreated()!=null){tbLabRegister.setColumnMonth(casTuberculose.getCreated().getMonth());tbLabRegister.setColumnDate(""+casTuberculose.getCreated());
else tbLabRegister.setColumnDate("");
if (casTuberculose.getNumRegTB()!=null)tbLabRegister.setColumnNumLab(casTuberculose.getNumRegTB());
else tbLabRegister.setColumnNumLab("");
if (casTuberculose.getPatient().getNom()!=null)tbLabRegister.setColumnNom(casTuberculose.getPatient().getNom());
else tbLabRegister.setColumnNom("");
if (casTuberculose.getPatient().getSexe()!=null)tbLabRegister.setColumnSexe(casTuberculose.getPatient().getSexe());
else tbLabRegister.setColumnSexe("");
if (casTuberculose.getPatient().getAge()!=null)tbLabRegister.setColumnAge(casTuberculose.getPatient().getAge());
else tbLabRegister.setColumnAge(-99);
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)tbLabRegister.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)tbLabRegister.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)tbLabRegister.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else tbLabRegister.setColumnAdresse("");
if (casTuberculose!=null&&casTuberculose.getPatient()!=null){
if (casTuberculose.getPatient().getCentres()!=null){intindex=casTuberculose.getPatient().getCentres().size();System.out.println("--------------------------------------------Lavaleurdel'indexestde:"+index);
if (index>=1)tbLabRegister.setColumnNomCDT(casTuberculose.getPatient().getCentres().get(index-1).getNom());
if (casTuberculose.getObservation()!=null)tbLabRegister.setColumnObservations(casTuberculose.getObservation());
else tbLabRegister.setColumnObservations("");//**************************************Lesexamenssontles////if sereologieisnotnull,thentrytofind
if another//exams//arenotnullandaddinthelist
if (casTuberculose.getPatient().getSerologies()!=null&&casTuberculose.getPatient().getSerologies().size()>0){listeExamenSerologies=casTuberculose.getPatient().getSerologies();for(ExamenSerologieexamenSerologie:listeExamenSerologies){tbLabRegister.setColumnDateSerologie(""+examenSerologie.getDateTest());tbLabRegister.setColumnResultatSerologie(examenSerologie.getResultatVIH());//+",CD4:"+examenSerologie.getResultatCD4());tbLabRegister.setColumnNombreCD4Serologie(""+examenSerologie.getResultatCD4());
if (casTuberculose.getExamensMiscrocopies()!=null&&casTuberculose.getExamensMiscrocopies().size()>0){listExamenMicroscopies=casTuberculose.getExamensMiscrocopies();for(ExamenMicroscopieexamenMicroscopie:listExamenMicroscopies){tbLabRegister.setColumnDateExamenCrachat(""+examenMicroscopie.getDate());tbLabRegister.setColumnResultatExamenCrachat(examenMicroscopie.getResultat());listtbTbLabRegisters.add(tbLabRegister);
else listtbTbLabRegisters.add(tbLabRegister);
if ATBexamlistisnotnull,then,findserologyand//add//tothelist
else {
if (casTuberculose.getExamensMiscrocopies()!=null&&casTuberculose.getExamensMiscrocopies().size()>0){System.out.println("-------------------Examenmicroscopie:"+casTuberculose.getExamensMiscrocopies().get(0).getDate());listExamenMicroscopies=casTuberculose.getExamensMiscrocopies();for(ExamenMicroscopieexamenMicroscopie:listExamenMicroscopies){tbLabRegister.setColumnDateExamenCrachat(""+examenMicroscopie.getDate());tbLabRegister.setColumnResultatExamenCrachat(examenMicroscopie.getResultat());//Test
if therearesomeserology
if (casTuberculose.getPatient().getSerologies()!=null&&casTuberculose.getPatient().getSerologies().size()>0){listeExamenSerologies=casTuberculose.getPatient().getSerologies();for(ExamenSerologieexamenSerologie:listeExamenSerologies){tbLabRegister.setColumnDateSerologie(""+examenSerologie.getDateTest());tbLabRegister.setColumnResultatSerologie(examenSerologie.getResultatVIH());//+",CD4:"+examenSerologie.getResultatCD4());tbLabRegister.setColumnNombreCD4Serologie(""+examenSerologie.getResultatCD4());listtbTbLabRegisters.add(tbLabRegister);
else {listtbTbLabRegisters.add(tbLabRegister);
else listtbTbLabRegisters.add(tbLabRegister);System.out.println("Latailledelaliste:"+listtbTbLabRegisters.size());
if (casTuberculose.getCreated()!=null){tbChildRegister.setColumnMonth(casTuberculose.getCreated().getMonth());tbChildRegister.setColumnDate(""+casTuberculose.getCreated());
else tbChildRegister.setColumnDate("");
if (casTuberculose.getNumRegTB()!=null)tbChildRegister.setColumnNumero(casTuberculose.getNumRegTB());
else tbChildRegister.setColumnNumero("");
if (casTuberculose.getPatient().getNom()!=null)tbChildRegister.setColumnNom(casTuberculose.getPatient().getNom());
else tbChildRegister.setColumnNom("");
if (casTuberculose.getPatient().getSexe()!=null)tbChildRegister.setColumnSexe(casTuberculose.getPatient().getSexe());
else tbChildRegister.setColumnSexe("");
if (casTuberculose.getPatient().getAge()!=null)tbChildRegister.setColumnAge(casTuberculose.getPatient().getAge());
else tbChildRegister.setColumnAge(-99);
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)tbChildRegister.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)tbChildRegister.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)tbChildRegister.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else tbChildRegister.setColumnAdresse("");
if (casTuberculose!=null&&casTuberculose.getPatient()!=null){
if (casTuberculose.getPatient().getCentres()!=null){intindex=casTuberculose.getPatient().getCentres().size();System.out.println("--------------------------------------------Lavaleurdel'indexestde:"+index);
if (index>=1)tbChildRegister.setColumnNomCDT(casTuberculose.getPatient().getCentres().get(index-1).getNom());
if (casTuberculose.getDateDebutTraitement()!=null)tbChildRegister.setColumnDateDebutTrait(""+casTuberculose.getDateDebutTraitement().getDate());
else tbChildRegister.setColumnDateDebutTrait("");
if (casTuberculose.getRegimePhaseInitiale()!=null&&casTuberculose.getRegimePhaseContinuation()!=null)tbChildRegister.setColumnRegime(casTuberculose.getRegimePhaseInitiale().getNom()+","+casTuberculose.getRegimePhaseContinuation().getNom());
else {
if (casTuberculose.getRegimePhaseInitiale()!=null)tbChildRegister.setColumnRegime(casTuberculose.getRegimePhaseInitiale().getNom());
else {
if (casTuberculose.getRegimePhaseContinuation()!=null)tbChildRegister.setColumnRegime(casTuberculose.getRegimePhaseContinuation().getNom());
else tbChildRegister.setColumnRegime("");
else column="";//
if (casTuberculose.getFormeMaladie()!=null)tbChildRegister.setColumnForme(casTuberculose.getFormeMaladie());
else tbChildRegister.setColumnForme("");
if (casTuberculose.getTypePatient()!=null)tbChildRegister.setColumnType(casTuberculose.getTypePatient());
else tbChildRegister.setColumnType("");
if (casTuberculose.getDevenirMalade()!=null)tbChildRegister.setColumnIssuTraitement(casTuberculose.getDevenirMalade());
else tbChildRegister.setColumnIssuTraitement("");
if (casTuberculose.getObservation()!=null)tbChildRegister.setColumnObservations(casTuberculose.getObservation());//;(casTuberculose.getObservation());
else tbChildRegister.setColumnObservations("");//Affichelalistedescasd'index
if (casTuberculose.getPatient().getCasIndex()!=null){List<CasIndex>listCasIndex=casTuberculose.getPatient().getCasIndex();StringnomCasIndex="";StringtypeRelation="";for(CasIndexcasIndex:listCasIndex){nomCasIndex=nomCasIndex+";"+casIndex.getPatient().getNom();typeRelation=typeRelation+";"+casIndex.getTypeRelation();
if (casTuberculose.getPatient()!=null&&casTuberculose.getPatient().getAge()!=null&&casTuberculose.getPatient().getAge()<=15)lisTBChild.add(casTuberculose);
switch(typeCAs){case0:nouveauCas++;LOGGER.debug("xxxxxxxxxNombredenouveauxcas:"+nouveauCas);break;case1:repriseTrait++;LOGGER.debug("xxxxxxxxxNombrederetraitementcas:"+repriseTrait);break;case2:echecs++;break;case3:rechuttes++;break;default:break;
if (casTuberculose.getPatient().getAge()!=null){trimesterReport.setColumnAge(casTuberculose.getPatient().getAge());trimesterReport.setColumnTrancheAge(casTuberculose.getPatient().getAge());
else trimesterReport.setColumnAge(-99);
if (casTuberculose.getPatient().getSexe()!=null){trimesterReport.setColumnSexe(casTuberculose.getPatient().getSexe());trimesterReport.setColumnReadableSexe(casTuberculose.getPatient().getSexe());
else trimesterReport.setColumnSexe("");
if (casTuberculose.getTypePatient()!=null)trimesterReport.setColumnTypePatient(casTuberculose.getTypePatient());
else trimesterReport.setColumnTypePatient("");
if (casTuberculose.getFormeMaladie()!=null)trimesterReport.setColumnFormeMaladie(casTuberculose.getFormeMaladie());
else trimesterReport.setColumnFormeMaladie("");inttypeCAs=Integer.parseInt(casTuberculose.getTypePatient());LOGGER.debug("xxxxxxxxxxTypedecas:"+typeCAs);
switch(typeCAs){case0:nouveauCas++;LOGGER.debug("xxxxxxxxxNombredenouveauxcas:"+nouveauCas);break;case1:repriseTrait++;LOGGER.debug("xxxxxxxxxNombrederetraitementcas:"+repriseTrait);break;case2:echecs++;break;case3:rechuttes++;break;default:break;
else patientCard.setNumRegTB("");if (casTuberculose.getPatient().getNom()!=null)patientCard.setColumnNom(casTuberculose.getPatient().getNom());
else patientCard.setColumnNom("");if (casTuberculose.getPatient().getSexe()!=null)patientCard.setColumnSexe(casTuberculose.getPatient().getSexe());
else patientCard.setColumnSexe("");if (casTuberculose.getDateDebutTraitement()!=null)patientCard.setColumnDateDebutTrait(""+casTuberculose.getDateDebutTraitement());if (casTuberculose.getPatient().getAge()!=null)patientCard.setColumnAge(""+casTuberculose.getPatient().getAge());
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)patientCard.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)patientCard.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)patientCard.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else patientCard.setColumnAdresse("");
else patientCard.setColumnFormeMaladie("");if (casTuberculose.getTypePatient()!=null)patientCard.setColumnTypePatient(casTuberculose.getTypePatient());
else patientCard.setColumnTypePatient("");if (casTuberculose.getObservation()!=null)patientCard.setColumnObservations(casTuberculose.getObservation());
else patientCard.setColumnObservations("");form.add(patientCard);
else patientCard.setColumnDataPoidPatient("");if (examenBiologique.getPoids()!=null)patientCard.setColumnPoidsPatient(examenBiologique.getPoids());//
else //patientCard.setColumnPoidsPatient(-99);form.add(patientCard);
else patientCard.setColumnDateExamenCrachat("");if (examenMicroscopie.getRaisonDepistage()!=null)patientCard.setColumnRaisonExamenCrachat(examenMicroscopie.getRaisonDepistage());
else patientCard.setColumnRaisonExamenCrachat("");if (examenMicroscopie.getResultat()!=null)patientCard.setColumnResultatExamenCrachat(examenMicroscopie.getResultat());
else patientCard.setColumnResultatExamenCrachat("");form.add(patientCard);
else patientCard.setColumnDateEffectivePhaseInitiale("");form.add(patientCard);
else patientCard.setColumnDateEffectivePhaseContinuation("");form.add(patientCard);
else //patientCard.getDateRendezVous("");if (rendezVous.getHonore()!=null)patientCard.setColumnHonoree(""+rendezVous.getHonore());form.add(patientCard);
else treatmenForm.setColumnNumRegTB("");if (casTuberculose.getPatient().getNom()!=null)treatmenForm.setColumnNom(casTuberculose.getPatient().getNom());
else treatmenForm.setColumnNom("");if (casTuberculose.getPatient().getSexe()!=null)treatmenForm.setColumnSexe(casTuberculose.getPatient().getSexe());
else treatmenForm.setColumnSexe("");////if (casTuberculose.getPatient().getAge()!=null)//tre//if (casTuberculose.getDateDebutTraitement()!=null)//treatmenForm.setColumnDateDebutTrait(""+casTuberculose.getDateDebutTraitement());
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)treatmenForm.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)treatmenForm.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)treatmenForm.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else treatmenForm.setColumnAdresse("");
else treatmenForm.setColumnFormeMaladie("");if (casTuberculose.getTypePatient()!=null)treatmenForm.setColumnTypePatient(casTuberculose.getTypePatient());
else treatmenForm.setColumnTypePatient("");if (casTuberculose.getObservation()!=null)treatmenForm.setColumnObservations(casTuberculose.getObservation());
else treatmenForm.setColumnObservations("");//Forexams
if (casTuberculose.getPatient().getExamensBiologiques()!=null&&casTuberculose.getPatient().getExamensBiologiques().size()>0){for(ExamenBiologiqueexamenBiologique:listExBiologiques){treatmenForm.setColumnDataPoidPatient(""+examenBiologique.getDate());treatmenForm.setColumnPoidsPatient(examenBiologique.getPoids());
if (casTuberculose.getExamensMiscrocopies()!=null&&casTuberculose.getExamensMiscrocopies().size()>0){for(ExamenMicroscopieexamenMicroscopie:listExamenMicroscopies){treatmenForm.setColumnDateExamenCrachat(""+examenMicroscopie.getDate());treatmenForm.setColumnResultatExamenCrachat(examenMicroscopie.getResultat());form.add(treatmenForm);
else form.add(treatmenForm);
else {
if (casTuberculose.getExamensMiscrocopies()!=null&&casTuberculose.getExamensMiscrocopies().size()>0){System.out.println("-------------------Examenmicroscopie:"+casTuberculose.getExamensMiscrocopies().get(0).getDate());for(ExamenMicroscopieexamenMicroscopie:listExamenMicroscopies){treatmenForm.setColumnDateExamenCrachat(""+examenMicroscopie.getDate());treatmenForm.setColumnResultatExamenCrachat(examenMicroscopie.getResultat());//Test
if therearesomeserology
if (casTuberculose.getPatient().getExamensBiologiques()!=null&&casTuberculose.getPatient().getExamensBiologiques().size()>0){for(ExamenBiologiqueexamenBiologique:listExBiologiques){treatmenForm.setColumnDataPoidPatient(""+examenBiologique.getDate());treatmenForm.setColumnPoidsPatient(examenBiologique.getPoids());//+",CD4:"+examenSerologie.getResultatCD4());form.add(treatmenForm);
else {form.add(treatmenForm);
else form.add(treatmenForm);System.out.println("Latailledelaliste:"+form.size());
else form.add(treatmenForm);
else newTransfertReference.setColumnTypeOP("Reference");
else newTransfertReference.setColumnTypeOP("");if (transfertReference.getCDTDepart().getNom()!=null)newTransfertReference.setColumnCDTDepart(transfertReference.getCDTDepart().getNom());
else newTransfertReference.setColumnCDTDepart("");if (transfertReference.getCDTArrivee().getNom()!=null)newTransfertReference.setColumnCDTArrive(transfertReference.getCDTArrivee().getNom());
else newTransfertReference.setColumnCDTArrive("");if (casTuberculose.getNumRegTB()!=null)newTransfertReference.setColumnNumRegTBDepart(casTuberculose.getNumRegTB());
else newTransfertReference.setColumnNumRegTBDepart("");if (casTuberculose.getNumRegTB()!=null)newTransfertReference.setColumnNumRegTBArrivee(casTuberculose.getNumRegTB());
else newTransfertReference.setColumnNumRegTBArrivee("");if (casTuberculose.getPatient().getNom()!=null)newTransfertReference.setColumnNom(casTuberculose.getPatient().getNom());
else newTransfertReference.setColumnNom("");if (casTuberculose.getPatient().getAge()!=null)newTransfertReference.setColumnAge(casTuberculose.getPatient().getAge());
else newTransfertReference.setColumnAge(-99);if (casTuberculose.getPatient().getSexe()!=null)newTransfertReference.setColumnSexe(casTuberculose.getPatient().getSexe());
else newTransfertReference.setColumnSexe("");if (casTuberculose.getFormeMaladie()!=null)newTransfertReference.setColumnFormeMaladie(casTuberculose.getFormeMaladie());
else newTransfertReference.setColumnFormeMaladie("");if (casTuberculose.getTypePatient()!=null)//if (casTuberculose.getTypePatientPrecisions()!=null||!casTuberculose.getTypePatientPrecisions().trim().equals(""))newTransfertReference.setColumnTypeMaladie(casTuberculose.getTypePatient());//+""+casTuberculose.getTypePatientPrecisions());
else newTransfertReference.setColumnTypeMaladie(casTuberculose.getTypePatient());//
else newTransfertReference.setColumnTypeMaladie("");////fortreatment
if (casTuberculose.getPatient().getVille()!=null&&casTuberculose.getPatient().getTelephoneUn()!=null)newTransfertReference.setColumnAdresse(casTuberculose.getPatient().getVille()+","+casTuberculose.getPatient().getTelephoneUn());
else {
if (casTuberculose.getPatient().getVille()!=null)newTransfertReference.setColumnAdresse(casTuberculose.getPatient().getVille());
else {
if (casTuberculose.getPatient().getTelephoneUn()!=null)newTransfertReference.setColumnAdresse(casTuberculose.getPatient().getTelephoneUn());
else newTransfertReference.setColumnAdresse("");
else {//form.add(newTransfertReference);//
if (string==null)return"";
else returnstring;
if (number==null)return-1;
else returnnumber;
if (date==null)return"";
else returnDateTimeFormat.getFormat("dd/MM/yyyy").format(date);
else parametresRapport.setColumnRegion("");//Fordistrictsif (district!=null&&!district.trim().equals("")&&listCasTuberculoses!=null&&listCasTuberculoses.get(0)!=null&&listCasTuberculoses.get(0).getPatient()!=null&&listCasTuberculoses.get(0).getPatient().getCentres().get(0)!=null){parametresRapport.setColumnDistrict(listCasTuberculoses.get(0).getPatient().getCentres().get(0).getDistrictSante().getNom().getFrancais());
else parametresRapport.setColumnDistrict("");//ForCDTif (district!=null&&!district.trim().equals("")&&listCasTuberculoses!=null&&listCasTuberculoses.get(0)!=null&&listCasTuberculoses.get(0).getPatient()!=null&&listCasTuberculoses.get(0).getPatient().getCentres().get(0)!=null){parametresRapport.setColumnCDT(listCasTuberculoses.get(0).getPatient().getCentres().get(0).getNom());
else parametresRapport.setColumnCDT("");listParametresRapports.add(parametresRapport);returnlistParametresRapports;
else icon.setUrl(url);this.title=newLabel(title);create=newPushButton(BaseNLS.constants().button_create());list=newPushButton(BaseNLS.constants().button_list());searchLabel=newLabel(BaseNLS.constants().button_search());initWidget(BINDER.createAndBindUi(this));
else create.setVisible(false);
else list.setVisible(false);
else {//searchPanel.setVisible(false);searchBoxes.setVisible(false);searchLabel.setVisible(false);
if (create!=null){create.setText(text);create.getElement().getStyle().setProperty("width",width);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(PriseMedicamenteuseentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<PriseMedicamenteuse>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<PriseMedicamenteuse>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<PriseMedicamenteuse>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(PriseMedicamenteuseentity:entities)delete(entity);
if (dateEffectiveBefore!=null&&!dateEffectiveBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateEffective");criteria.setValue(dateEffectiveBefore);junction.add(criteria);
if (dateEffectiveAfter!=null&&!dateEffectiveAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateEffective");criteria.setValue(dateEffectiveAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Notif icationentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(System.currentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (entities!=null){for(Notif icationentity:entities)delete(entity);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadOutBoxMessageInformation())messageFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicExamenSerologieDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenSerologie(start,numRows,"nature",true,searchCriterions,property);
else result=request.listNonAffectedExamenSerologieReverse(start,numRows,"nature",true,searchCriterions,property);
else result=request.listExamenSerologie(start,numRows,"nature",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenSerologie(start,numRows,"nature",true,filterCriteria,property);
else result=request.listNonAffectedExamenSerologieReverse(start,numRows,"nature",true,filterCriteria,property);
else result=request.listExamenSerologie(start,numRows,"nature",true,filterCriteria);
else result=request.getExamenSerologieEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenSerologie(start,numRows,"nature",true,searchCriterions,property);
else result=request.listNonAffectedExamenSerologieReverse(start,numRows,"nature",true,searchCriterions,property);
else result=request.listExamenSerologie(start,numRows,"nature",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedExamenSerologie(start,numRows,"nature",true,property);
else result=request.listNonAffectedExamenSerologieReverse(start,numRows,"nature",true,property);
else result=request.listExamenSerologie(start,numRows,"nature",true);
if (isFiltered){result.with("patient");
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listExamenSerologie(start,numRows,property,asc,searchCriterions);
else result=request.listExamenSerologie(start,numRows,property,asc,filterCriteria);
else result=request.getExamenSerologieEmptyList();
else {
if (searchCriterions!=null)result=request.listExamenSerologie(start,numRows,property,asc,searchCriterions);
else result=request.listExamenSerologie(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenSerologie(property,searchCriterions);
else returnrequest.countNonAffectedExamenSerologieReverse(property,searchCriterions);
else returnrequest.countExamenSerologie(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenSerologie(property,filterCriteria);
else returnrequest.countNonAffectedExamenSerologieReverse(property,filterCriteria);
else returnrequest.countExamenSerologie(filterCriteria);
else returnrequest.countNonAffectedExamenSerologie("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenSerologie(property,searchCriterions);
else returnrequest.countNonAffectedExamenSerologieReverse(property,searchCriterions);
else returnrequest.countExamenSerologie(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedExamenSerologie(property);
else returnrequest.countNonAffectedExamenSerologieReverse(property);
else returnrequest.countExamenSerologie();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ExamenSerologieRequestrequest=(ExamenSerologieRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxypatient_identif iantCrit=request.create(BasicCriteriaProxy.class);patient_identif iantCrit.setField("patient.identif iant");patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatient_nomCrit=request.create(BasicCriteriaProxy.class);patient_nomCrit.setField("patient.nom");patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_nomCrit);//SearchfieldDateTesttry{DateUtil.parseDate(text);BasicCriteriaProxydateTestCrit=request.create(BasicCriteriaProxy.class);dateTestCrit.setField("dateTest");dateTestCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateTestCrit.setValue(text);buffer.append("("+NLS.constants().examenSerologie_field_dateTest()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateTestCrit);
if (text.toLowerCase().equals(NLS.constants().examenSerologie_nature_vIH_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_VIH);buffer.append("("+NLS.constants().examenSerologie_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (text.toLowerCase().equals(NLS.constants().examenSerologie_nature_cD4_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_CD4);buffer.append("("+NLS.constants().examenSerologie_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (text.toLowerCase().equals(NLS.constants().examenSerologie_resultatVIH_positif _option().toLowerCase())){BasicCriteriaProxyresultatVIHCrit=request.create(BasicCriteriaProxy.class);resultatVIHCrit.setField("resultatVIH");resultatVIHCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatVIHCrit.setValue(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_POSITif );buffer.append("("+NLS.constants().examenSerologie_field_resultatVIH()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatVIHCrit);
if (text.toLowerCase().equals(NLS.constants().examenSerologie_resultatVIH_negatif _option().toLowerCase())){BasicCriteriaProxyresultatVIHCrit=request.create(BasicCriteriaProxy.class);resultatVIHCrit.setField("resultatVIH");resultatVIHCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);resultatVIHCrit.setValue(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_NEGATif );buffer.append("("+NLS.constants().examenSerologie_field_resultatVIH()+":"+text+")"+SYMBOL_OR+"");criterionList.add(resultatVIHCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ExamenMicroscopieentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<ExamenMicroscopie>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<ExamenMicroscopie>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<ExamenMicroscopie>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(ExamenMicroscopieentity:entities)delete(entity);
if (casTb_patient_identif iant!=null&&!casTb_patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("casTb.patient.identif iant");criteria.setValue(casTb_patient_identif iant);junction.add(criteria);
if (casTb_patient_nom!=null&&!casTb_patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("casTb.patient.nom");criteria.setValue(casTb_patient_nom);junction.add(criteria);
if (dateBefore!=null&&!dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("date");criteria.setValue(dateBefore);junction.add(criteria);
if (dateAfter!=null&&!dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("date");criteria.setValue(dateAfter);junction.add(criteria);
if (raisonDepistage!=null&&!raisonDepistage.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("raisonDepistage");criteria.setValue(raisonDepistage);junction.add(criteria);
if (resultat!=null&&!resultat.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("resultat");criteria.setValue(resultat);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (parent!=null){editor=newTransfertReferenceEditor(factory,true);this.initField=initField;
else editor=newTransfertReferenceEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().transfertReference_create_title());createDriver();createNewTransfertReference();this.setContent(editor);
if (parent!=null){editor=newTransfertReferenceEditor(factory,true);this.initField=initField;
else editor=newTransfertReferenceEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchTransfertReference(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditTransfertReference())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("TransfertReferenceformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewTransfertReferenceEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDTDepart(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){editor.setRegionArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSanteArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDTArrivee(value,isLocked);
if (searchText==null)handler.listSmsPredefini();
else handler.listSmsPredefini(searchText);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDTDepart()!=null){bck.setCDTDepart(entity.getCDTDepart().getId());
if (entity.getRegionArrivee()!=null){bck.setRegionArrivee(entity.getRegionArrivee().getId());
if (entity.getDistrictSanteArrivee()!=null){bck.setDistrictSanteArrivee(entity.getDistrictSanteArrivee().getId());
if (entity.getCDTArrivee()!=null){bck.setCDTArrivee(entity.getCDTArrivee().getId());
if (entity.getDetails()!=null){StringBuilderbuilder=newStringBuilder();for(DetailRavitaillementi:entity.getDetails()){builder.append(i.getId()).append(";");
if (handler==null)initHandler();returnhandler.getById(id);
if (searchText==null)handler.listOutBox();
else handler.listOutBox(searchText);
if (entity.getLot()!=null){bck.setLot(entity.getLot().getId());
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionMedicamentEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament())detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())commande.setVisible(false);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())detailCommande.setVisible(false);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())commande.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())detailCommande.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())entreeLot.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeMedicamentProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeMedicamentFormPanelform=newDetailCommandeMedicamentFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if (AccessManager.canReadDetailInventaireDescription()){Column<DetailInventaireProxy,String>lotColumn=newLotColumn();lotColumn.setSortable(true);table.addColumn(lotColumn,NLS.constants().detailInventaire_field_s_lot());
if (AccessManager.canReadDetailInventaireDescription()){Column<DetailInventaireProxy,String>quantiteTheoriqueColumn=newQuantiteTheoriqueColumn();quantiteTheoriqueColumn.setSortable(true);table.addColumn(quantiteTheoriqueColumn,NLS.constants().detailInventaire_field_s_quantiteTheorique());
if (AccessManager.canReadDetailInventaireDescription()){Column<DetailInventaireProxy,String>quantiteReelleColumn=newQuantiteReelleColumn();quantiteReelleColumn.setSortable(true);table.addColumn(quantiteReelleColumn,NLS.constants().detailInventaire_field_s_quantiteReelle());
if (AccessManager.canCreateDetailInventaire()&&AccessManager.canEditDetailInventaire()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailinventaire/",true);
else returnnull;
if (AccessManager.canDeleteDetailInventaire()&&AccessManager.canEditDetailInventaire()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailInventaire()&&AccessManager.canEditDetailInventaire()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailInventaireProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailInventaire_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailInventaireProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailInventaireRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailInventaireentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailInventaireEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailInventaire()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_INV_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailInventaire_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getLot()==null)value="";
else value=renderer.getDisplayValue(object.getLot());
if (object!=null){
if (object.getQuantiteTheorique()==null)value="";
else value=object.getQuantiteTheorique().toString();
if (object!=null){
if (object.getQuantiteReelle()==null)value="";
else value=object.getQuantiteReelle().toString();
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCentreDiagTraitFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCentreDiagTraitEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newCentreDiagTraitEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newCentreDiagTraitEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCentreDiagTraitEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.CENTREDIAGTRAIT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CENTREDIAGTRAIT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCentreDiagTraitFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if disabled.
if (disabled){return;
if (this.disabled==isDisabled){return;
if (disabled){setResource(resDisabled);getElement().getParentElement().addClassName(styleDisabled);
else {setResource(resEnabled);getElement().getParentElement().removeClassName(styleDisabled);
if (DEFAULT_RESOURCES==null){DEFAULT_RESOURCES=GWT.create(Resources.class);
if true,showafast-forwardbuttonthatadvancesbyalarger*incrementthanasinglepage*@paramfastForwardRows*thenumberofrowstojumpwhenfastforwarding*@paramshowLastPageButton*
if true,showabuttontogothethelastpagepublicImogSimplePager(TextLocationlocation,Resourcesresources,booleanshowFastForwardButton,finalintfastForwardRows,booleanshowLastPageButton){this.resources=resources;this.fastForwardRows=fastForwardRows;this.style=resources.simplePagerStyle();this.style.ensureInjected();//Createthebuttons.StringdisabledStyle=style.disabledButton();firstPage=newImageButton(resources.simplePagerFirstPage(),resources.simplePagerFirstPageDisabled(),disabledStyle);nextPage=newImageButton(resources.simplePagerNextPage(),resources.simplePagerNextPageDisabled(),disabledStyle);prevPage=newImageButton(resources.simplePagerPreviousPage(),resources.simplePagerPreviousPageDisabled(),disabledStyle);
if (showLastPageButton){lastPage=newImageButton(resources.simplePagerLastPage(),resources.simplePagerLastPageDisabled(),disabledStyle);
else {lastPage=null;
if (showFastForwardButton){fastForward=newImageButton(resources.simplePagerFastForward(),resources.simplePagerFastForwardDisabled(),disabledStyle);
else {fastForward=null;
if (location==TextLocation.RIGHT){layout.add(label1);layout.add(label2);
if (location==TextLocation.CENTER){layout.add(label1);layout.add(label2);
if (showFastForwardButton){layout.add(fastForward);
if (showLastPageButton){layout.add(lastPage);
if (location==TextLocation.LEFT){layout.add(label1);layout.add(label2);
if (showFastForwardButton){fastForward.getElement().getParentElement().addClassName(style.button());
if (showLastPageButton){lastPage.getElement().getParentElement().addClassName(style.button());
else pageStart=pageStart+1;Stringtext=formatter.format(pageStart)+"-"+formatter.format(endIndex);returntext;
if thenextbuttonisdisabled.Visiblefortesting.booleanisNextButtonDisabled(){returnnextPage.isDisabled();
if thepreviousbuttonisdisabled.Visiblefortesting.booleanisPreviousButtonDisabled(){returnprevPage.isDisabled();
if (fastForward==null){return;
if (disabled){fastForward.setResource(resources.simplePagerFastForwardDisabled());fastForward.getElement().getParentElement().addClassName(style.disabledButton());
else {fastForward.setResource(resources.simplePagerFastForward());fastForward.getElement().getParentElement().removeClassName(style.disabledButton());
if (lastPage!=null){lastPage.setDisabled(disabled);
if (lastPage!=null){registrations.add(lastPage.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){lastPage();
if (fastForward!=null){registrations.add(fastForward.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){setPage(getPage()+getFastForwardPages());
if (entity.getCommande()!=null){bck.setCommande(entity.getCommande().getId());
if (entity.getMedicament()!=null){bck.setMedicament(entity.getMedicament().getId());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Lotentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Lot>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Lot>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Lot>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Lotentity:entities)delete(entity);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (numero!=null&&!numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("numero");criteria.setValue(numero);junction.add(criteria);
if (quantite!=null&&!quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantite");criteria.setValue(quantite);junction.add(criteria);
if (datePeremptionBefore!=null&&!datePeremptionBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("datePeremption");criteria.setValue(datePeremptionBefore);junction.add(criteria);
if (datePeremptionAfter!=null&&!datePeremptionAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("datePeremption");criteria.setValue(datePeremptionAfter);junction.add(criteria);
if (intrant_identif iant!=null&&!intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("intrant.identif iant");criteria.setValue(intrant_identif iant);junction.add(criteria);
if (medicament_designation!=null&&!medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("medicament.designation");criteria.setValue(medicament_designation);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (cdtId!=null){
if (numero!=null&&!numero.isEmpty()){ImogJunctionjunction=newImogConjunction();BasicCriteriacriteria1=newBasicCriteria();criteria1.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria1.setField("numero");criteria1.setValue(numero);junction.add(criteria1);BasicCriteriacriteria2=newBasicCriteria();criteria2.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria2.setField("CDT.id");criteria2.setValue(cdtId);junction.add(criteria2);List<Lot>entities=dao.load(junction);
if (entities==null||entities.size()==0)returntrue;
else returnfalse;
else returnfalse;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicArriveePersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newArriveePersonnelEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newArriveePersonnelEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newArriveePersonnelEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newArriveePersonnelEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.ARRIVEEPERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.ARRIVEEPERSONNEL_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicArriveePersonnelFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editorWorkflow.setPersonnel(value,isLocked);
if (EpicamIconConstants.REGIME_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.REGIME_ICON);RegimeDataProviderprovider=newRegimeDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteRegime()&&AccessManager.canEditRegime())listComposite=newRegimeDynaTable(requestFactory,provider,true);
else listComposite=newRegimeDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Profileentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if (listEntityProfiles!=null&&listEntityProfiles.size()>0){for(EntityProfileitem:listEntityProfiles){
if (item!=null){item.setModif ied(newDate(systemUtil.getCurrentTimeMillis()));item.setModif iedBy(actor.getLogin());item.setModif iedFrom(systemUtil.getTerminal());
if (item.getCreatedBy()==null){item.setCreatedBy(actor.getLogin());
if (listFieldGroupProfiles!=null&&listFieldGroupProfiles.size()>0){for(FieldGroupProfileitem:listFieldGroupProfiles){
if (item!=null){item.setModif ied(newDate(systemUtil.getCurrentTimeMillis()));item.setModif iedBy(actor.getLogin());item.setModif iedFrom(systemUtil.getTerminal());
if (item.getCreatedBy()==null){item.setCreatedBy(actor.getLogin());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Profile>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Profile>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Profile>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Profileentity:entities)delete(entity);
if (resultForMyActorProfiles!=null){for(ImogActorforeignEntity:resultForMyActorProfiles){foreignEntity.setModif ied(newDate());foreignEntity.removeFromProfiles(entity);actorProfilesDao.saveOrUpdate(foreignEntity,false);
if (resultForEntityProfileProfile!=null){for(EntityProfileforeignEntity:resultForEntityProfileProfile){foreignEntity.setModif ied(newDate());foreignEntity.setProfile(null);entityProfileDao.saveOrUpdate(foreignEntity,false);
if (resultForFieldGroupProfileProfile!=null){for(FieldGroupProfileforeignEntity:resultForFieldGroupProfileProfile){foreignEntity.setModif ied(newDate());foreignEntity.setProfile(null);fieldGroupProfileDao.saveOrUpdate(foreignEntity,false);
if (name!=null&&!name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("name");criteria.setValue(name);junction.add(criteria);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Formationentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Formation>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Formation>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Formation>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Formationentity:entities)delete(entity);
if (dateDebutBefore!=null&&!dateDebutBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDebut");criteria.setValue(dateDebutBefore);junction.add(criteria);
if (dateDebutAfter!=null&&!dateDebutAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDebut");criteria.setValue(dateDebutAfter);junction.add(criteria);
if (libelle_francais!=null&&!libelle_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("libelle.francais");criteria.setValue(libelle_francais);junction.add(criteria);
if (libelle_english!=null&&!libelle_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("libelle.english");criteria.setValue(libelle_english);junction.add(criteria);
if (lieu_francais!=null&&!lieu_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lieu.francais");criteria.setValue(lieu_francais);junction.add(criteria);
if (lieu_english!=null&&!lieu_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lieu.english");criteria.setValue(lieu_english);junction.add(criteria);
if (effectuee!=null&&!effectuee.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("effectuee");criteria.setValue(effectuee);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (AccessManager.canReadDepartPersonnelDescription()){Column<DepartPersonnelProxy,String>dateDepartColumn=newDateDepartColumn();dateDepartColumn.setSortable(true);table.addColumn(dateDepartColumn,NLS.constants().departPersonnel_field_s_dateDepart());
if (AccessManager.canReadDepartPersonnelPersonnel()){Column<DepartPersonnelProxy,String>regionColumn=newRegionColumn();regionColumn.setSortable(true);table.addColumn(regionColumn,NLS.constants().departPersonnel_field_s_region());
if (AccessManager.canReadDepartPersonnelPersonnel()){Column<DepartPersonnelProxy,String>districtSanteColumn=newDistrictSanteColumn();districtSanteColumn.setSortable(true);table.addColumn(districtSanteColumn,NLS.constants().departPersonnel_field_s_districtSante());
if (AccessManager.canReadDepartPersonnelPersonnel()){Column<DepartPersonnelProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().departPersonnel_field_s_cDT());
if (AccessManager.canReadDepartPersonnelPersonnel()){Column<DepartPersonnelProxy,String>personnelColumn=newPersonnelColumn();personnelColumn.setSortable(true);table.addColumn(personnelColumn,NLS.constants().departPersonnel_field_s_personnel());
if (AccessManager.canCreateDepartPersonnel()&&AccessManager.canEditDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/departpersonnel/",true);
else returnnull;
if (AccessManager.canDeleteDepartPersonnel()&&AccessManager.canEditDepartPersonnel()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDepartPersonnel()&&AccessManager.canEditDepartPersonnel()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DepartPersonnelProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().departPersonnel_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DepartPersonnelProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDepartPersonnelRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDepartPersonnelentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDepartPersonnelEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DEP_PERS_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=departPersonnel_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getDateDepart()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDepart());
if (object!=null){
if (object.getRegion()==null)value="";
else value=renderer.getDisplayValue(object.getRegion());
if (object!=null){
if (object.getDistrictSante()==null)value="";
else value=renderer.getDisplayValue(object.getDistrictSante());
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getPersonnel()==null)value="";
else value=renderer.getDisplayValue(object.getPersonnel());
if (handler==null)initHandler();returnhandler.getById(id);
if (commande_dateBeforeBox.getValue()!=null){FilterCriteriacommande_dateBeforeCrit=newFilterCriteria();commande_dateBeforeCrit.setField("commande.date");commande_dateBeforeCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_inferior());commande_dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);commande_dateBeforeCrit.setValue(DateUtil.getDate(commande_dateBeforeBox.getValue()));commande_dateBeforeCrit.setValueDisplayName(DateUtil.getDate(commande_dateBeforeBox.getValue()));criteria.add(commande_dateBeforeCrit);
if (commande_dateAfterBox.getValue()!=null){FilterCriteriacommande_dateAfterCrit=newFilterCriteria();commande_dateAfterCrit.setField("commande.date");commande_dateAfterCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_superior());commande_dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);commande_dateAfterCrit.setValue(DateUtil.getDate(commande_dateAfterBox.getValue()));commande_dateAfterCrit.setValueDisplayName(DateUtil.getDate(commande_dateAfterBox.getValue()));criteria.add(commande_dateAfterCrit);
if (dateReceptionBeforeBox.getValue()!=null){FilterCriteriadateReceptionBeforeCrit=newFilterCriteria();dateReceptionBeforeCrit.setField("dateReception");dateReceptionBeforeCrit.setFieldDisplayName(NLS.constants().reception_field_dateReception()+BaseNLS.constants().search_operator_inferior());dateReceptionBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateReceptionBeforeCrit.setValue(DateUtil.getDate(dateReceptionBeforeBox.getValue()));dateReceptionBeforeCrit.setValueDisplayName(DateUtil.getDate(dateReceptionBeforeBox.getValue()));criteria.add(dateReceptionBeforeCrit);
if (dateReceptionAfterBox.getValue()!=null){FilterCriteriadateReceptionAfterCrit=newFilterCriteria();dateReceptionAfterCrit.setField("dateReception");dateReceptionAfterCrit.setFieldDisplayName(NLS.constants().reception_field_dateReception()+BaseNLS.constants().search_operator_superior());dateReceptionAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateReceptionAfterCrit.setValue(DateUtil.getDate(dateReceptionAfterBox.getValue()));dateReceptionAfterCrit.setValueDisplayName(DateUtil.getDate(dateReceptionAfterBox.getValue()));criteria.add(dateReceptionAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())commande_cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCommandeInformationsDepart()){commande_dateBeforeFilterBox.setVisible(false);commande_dateAfterFilterBox.setVisible(false);
if (!AccessManager.canReadReceptionDescription()){dateReceptionBeforeFilterBox.setVisible(false);dateReceptionAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (embedded.getStatus().equals(Status.SUCCESS)){setNew();
if (uploader.getStatus().equals(Status.SUCCESS)){UploadedInfoinfo=uploader.getServerInfo();
if (info!=null&&info.message!=null&&!info.message.equals("noid")){StringentityId=info.message;BinaryRequestbinaryRequest=requestFactory.binaryRequest();Request<BinaryProxy>binaryFileRequest=binaryRequest.getBinary(entityId);binaryFileRequest.fire(newReceiver<BinaryProxy>(){@OverridepublicvoidonSuccess(BinaryProxyresponse){value=response;uploading=false;
if (uploader.getStatus().equals(Status.CANCELED)){setNew();
if theuploaderisuploading,falseotherwise.publicbooleanisUploading(){returnuploading;
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamenteuseEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateEffective.setEdited(isEdited);prise.setEdited(isEdited);cotrimoxazole.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamenteuseDescription())dateEffective.setVisible(false);
if (!AccessManager.canReadPriseMedicamenteuseDescription())prise.setVisible(false);
if (!AccessManager.canReadPriseMedicamenteuseDescription())cotrimoxazole.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())dateEffective.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())prise.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())cotrimoxazole.setVisible(false);
if (dateEffective.getValueWithoutParseException()==null&&dateEffective.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateEffective");//priseisarequiredfield
if (prise.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"prise");//cotrimoxazoleisarequiredfield
if (cotrimoxazole.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cotrimoxazole");
if (errors!=null&&errors.size()>0){List<EditorError>dateEffectiveFieldErrors=newArrayList<EditorError>();List<EditorError>priseFieldErrors=newArrayList<EditorError>();List<EditorError>cotrimoxazoleFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateEffective"))dateEffectiveFieldErrors.add(error);
if (field.equals("prise"))priseFieldErrors.add(error);
if (field.equals("cotrimoxazole"))cotrimoxazoleFieldErrors.add(error);
if (dateEffectiveFieldErrors.size()>0)dateEffective.showErrors(dateEffectiveFieldErrors);
if (priseFieldErrors.size()>0)prise.showErrors(priseFieldErrors);
if (cotrimoxazoleFieldErrors.size()>0)cotrimoxazole.showErrors(cotrimoxazoleFieldErrors);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDetailInventaireFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newDetailInventaireEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newDetailInventaireEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newDetailInventaireEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newDetailInventaireEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.DETAILINVENTAIRE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILINVENTAIRE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDetailInventaireFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetInventaire(InventaireProxyvalue,booleanisLocked){editorWorkflow.setInventaire(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editorWorkflow.setLot(value,isLocked);
if thepropertyforwhichnonaffectedvaluesaresearchedshall*belookedinreverserelationpublicCardEntityDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCardEntity(start,numRows,"name",true,searchCriterions,property);
else result=request.listNonAffectedCardEntityReverse(start,numRows,"name",true,searchCriterions,property);
else result=request.listCardEntity(start,numRows,"name",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCardEntity(start,numRows,"name",true,filterCriteria,property);
else result=request.listNonAffectedCardEntityReverse(start,numRows,"name",true,filterCriteria,property);
else result=request.listCardEntity(start,numRows,"name",true,filterCriteria);
else result=request.getCardEntityEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCardEntity(start,numRows,"name",true,searchCriterions,property);
else result=request.listNonAffectedCardEntityReverse(start,numRows,"name",true,searchCriterions,property);
else result=request.listCardEntity(start,numRows,"name",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCardEntity(start,numRows,"name",true,property);
else result=request.listNonAffectedCardEntityReverse(start,numRows,"name",true,property);
else result=request.listCardEntity(start,numRows,"name",true);
if (isFiltered){
else {
if (getSearchCriterions()==null)result=request.listCardEntity(start,numRows,property,asc);
else result=request.listCardEntity(start,numRows,property,asc,getSearchCriterions());returnresult;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCardEntity(property,searchCriterions);
else returnrequest.countNonAffectedCardEntityReverse(property,searchCriterions);
else returnrequest.countCardEntity(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCardEntity(property,filterCriteria);
else returnrequest.countNonAffectedCardEntityReverse(property,filterCriteria);
else returnrequest.countCardEntity(filterCriteria);
else returnrequest.countNonAffectedCardEntity("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCardEntity(property,searchCriterions);
else returnrequest.countNonAffectedCardEntityReverse(property,searchCriterions);
else returnrequest.countCardEntity(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCardEntity(property);
else returnrequest.countNonAffectedCardEntityReverse(property);
else returnrequest.countCardEntity();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {CardEntityRequestrequest=(CardEntityRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNameBasicCriteriaProxynameCrit=request.create(BasicCriteriaProxy.class);nameCrit.setField("name");nameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nameCrit.setValue(text);buffer.append("("+AdminNLS.constants().cardEntity_name()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nameCrit);disJunction.setCriterions(criterionList);fullTextSearch=true;//addFilterCriteria
if exists
if (isFiltered&&filterCriteria!=null){ImogJunctionProxyconJunctionFilt=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionListFilt=newArrayList<ImogCriterionProxy>();criterionListFilt.add(filterCriteria);criterionListFilt.add(disJunction);conJunctionFilt.setCriterions(criterionListFilt);setSearchCriterions(conJunctionFilt);
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (EpicamIconConstants.PERSONNEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PERSONNEL_ICON);PersonnelDataProviderprovider=newPersonnelDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeletePersonnel()&&AccessManager.canEditPersonnel())listComposite=newPersonnelDynaTable(requestFactory,provider,true);
else listComposite=newPersonnelDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicReceptionDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedReception(start,numRows,"dateReception",false,searchCriterions,property);
else result=request.listNonAffectedReceptionReverse(start,numRows,"dateReception",false,searchCriterions,property);
else result=request.listReception(start,numRows,"dateReception",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedReception(start,numRows,"dateReception",false,filterCriteria,property);
else result=request.listNonAffectedReceptionReverse(start,numRows,"dateReception",false,filterCriteria,property);
else result=request.listReception(start,numRows,"dateReception",false,filterCriteria);
else result=request.getReceptionEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedReception(start,numRows,"dateReception",false,searchCriterions,property);
else result=request.listNonAffectedReceptionReverse(start,numRows,"dateReception",false,searchCriterions,property);
else result=request.listReception(start,numRows,"dateReception",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedReception(start,numRows,"dateReception",false,property);
else result=request.listNonAffectedReceptionReverse(start,numRows,"dateReception",false,property);
else result=request.listReception(start,numRows,"dateReception",false);
if (isFiltered){result.with("CDT");result.with("commande");result.with("commande.CDT");
else {result.with("CDT");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listReception(start,numRows,property,asc,searchCriterions);
else result=request.listReception(start,numRows,property,asc,filterCriteria);
else result=request.getReceptionEmptyList();
else {
if (searchCriterions!=null)result=request.listReception(start,numRows,property,asc,searchCriterions);
else result=request.listReception(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedReception(property,searchCriterions);
else returnrequest.countNonAffectedReceptionReverse(property,searchCriterions);
else returnrequest.countReception(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedReception(property,filterCriteria);
else returnrequest.countNonAffectedReceptionReverse(property,filterCriteria);
else returnrequest.countReception(filterCriteria);
else returnrequest.countNonAffectedReception("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedReception(property,searchCriterions);
else returnrequest.countNonAffectedReceptionReverse(property,searchCriterions);
else returnrequest.countReception(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedReception(property);
else returnrequest.countNonAffectedReceptionReverse(property);
else returnrequest.countReception();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ReceptionRequestrequest=(ReceptionRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldNomBasicCriteriaProxycommande_cDT_nomCrit=request.create(BasicCriteriaProxy.class);commande_cDT_nomCrit.setField("commande.cDT.nom");commande_cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);commande_cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_cDT_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxycommande_dateCrit=request.create(BasicCriteriaProxy.class);commande_dateCrit.setField("commande.date");commande_dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);commande_dateCrit.setValue(text);buffer.append("("+NLS.constants().commande_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (handler==null)initHandler();returnhandler.getById(id);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.CDT.id"),personnel.getCDT().getId());
if (searchText==null)handler.listFieldGroup();
else handler.listFieldGroup(searchText);
if (searchText==null)handler.listEnvoiSMS();
else handler.listEnvoiSMS(searchText);
if disabled.
if (disabled){return;
if (this.disabled==isDisabled){return;
if (disabled){setResource(resDisabled);getElement().getParentElement().addClassName(styleDisabled);getElement().getParentElement().removeClassName(styleAbled);
else {setResource(resEnabled);getElement().getParentElement().addClassName(styleAbled);getElement().getParentElement().removeClassName(styleDisabled);
if (searchText==null)handler.listQualif ication();
else handler.listQualif ication(searchText);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailReceptionIntrantProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailReceptionIntrantEditorNestedRow>editors=editor.getEditors();DetailReceptionIntrantEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);subEditor.setCommande(currentCommande,true);subEditor.setCDT(currentCdt,true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.setCommande(value,true);
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.setCDT(value,true);
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailReceptionIntrantEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailReceptionIntrantProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailCommandeIntrantentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailCommandeIntrant>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailCommandeIntrant>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailCommandeIntrant>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailCommandeIntrantentity:entities)delete(entity);
if (intrant_identif iant!=null&&!intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("intrant.identif iant");criteria.setValue(intrant_identif iant);junction.add(criteria);
if (quantiteRequise!=null&&!quantiteRequise.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteRequise");criteria.setValue(quantiteRequise);junction.add(criteria);
if (quantiteEnStock!=null&&!quantiteEnStock.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteEnStock");criteria.setValue(quantiteEnStock);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailInventaireentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailInventaire>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailInventaire>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailInventaire>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailInventaireentity:entities)delete(entity);
if (lot_numero!=null&&!lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.numero");criteria.setValue(lot_numero);junction.add(criteria);
if (lot_intrant_identif iant!=null&&!lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.intrant.identif iant");criteria.setValue(lot_intrant_identif iant);junction.add(criteria);
if (lot_medicament_designation!=null&&!lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.medicament.designation");criteria.setValue(lot_medicament_designation);junction.add(criteria);
if (lot_quantite!=null&&!lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("lot.quantite");criteria.setValue(lot_quantite);junction.add(criteria);
if (quantiteTheorique!=null&&!quantiteTheorique.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteTheorique");criteria.setValue(quantiteTheorique);junction.add(criteria);
if (quantiteReelle!=null&&!quantiteReelle.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteReelle");criteria.setValue(quantiteReelle);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (pattern.startsWith("<=")){Stringinteger=pattern.substring(2);returnvalue<=Integer.parseInt(integer);
if (pattern.startsWith("<")){Stringinteger=pattern.substring(1);returnvalue<Integer.parseInt(integer);
if (pattern.startsWith(">=")){Stringinteger=pattern.substring(2);returnvalue>=Integer.parseInt(integer);
if (pattern.startsWith(">")){Stringinteger=pattern.substring(1);returnvalue>Integer.parseInt(integer);
if (pattern.startsWith("!=")){Stringinteger=pattern.substring(2);returnvalue!=Integer.parseInt(integer);
if (pattern.startsWith("=")){Stringinteger=pattern.substring(1);returnvalue==Integer.parseInt(integer);
if (pattern.contains(";")){String[]integers=pattern.split(";");returnInteger.parseInt(integers[0])<value&&value<Integer.parseInt(integers[1]);
else returnfalse;
else if (doubleSplit.length<2)returntrue;
else returnfalse;
else returntrue;
if thetestmatchespublicstaticbooleannumberMatches(Stringpattern,floatvalue){try{
if (pattern.startsWith("<=")){Stringnumber=pattern.substring(2);returnvalue<=Float.parseFloat(number);
if (pattern.startsWith("<")){Stringnumber=pattern.substring(1);returnvalue<Float.parseFloat(number);
if (pattern.startsWith(">=")){Stringnumber=pattern.substring(2);returnvalue>=Float.parseFloat(number);
if (pattern.startsWith(">")){Stringnumber=pattern.substring(1);returnvalue>Float.parseFloat(number);
if (pattern.startsWith("!=")){Stringnumber=pattern.substring(2);returnvalue!=Float.parseFloat(number);
if (pattern.startsWith("==")){Stringnumber=pattern.substring(2);returnvalue==Float.parseFloat(number);
if (pattern.contains(";")){String[]floats=pattern.split(";");returnFloat.parseFloat(floats[0])<value&&value<Float.parseFloat(floats[1]);
if (INSTANCE==null){INSTANCE=newImogDoubleRenderer();
if (null==object){return"";
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailRavitaillementDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailRavitaillement(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailRavitaillementReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailRavitaillement(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailRavitaillement(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedDetailRavitaillementReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listDetailRavitaillement(start,numRows,"modif ied",false,filterCriteria);
else result=request.getDetailRavitaillementEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailRavitaillement(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailRavitaillementReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailRavitaillement(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailRavitaillement(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedDetailRavitaillementReverse(start,numRows,"modif ied",false,property);
else result=request.listDetailRavitaillement(start,numRows,"modif ied",false);
if (isFiltered){result.with("ravitaillement");result.with("ravitaillement.CDTDepart");result.with("ravitaillement.CDTArrivee");result.with("sortieLot");result.with("sortieLot.lot");result.with("entreeLot");result.with("entreeLot.lot");
else {result.with("ravitaillement");result.with("ravitaillement.CDTDepart");result.with("ravitaillement.CDTArrivee");result.with("sortieLot");result.with("sortieLot.lot");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailRavitaillement(start,numRows,property,asc,searchCriterions);
else result=request.listDetailRavitaillement(start,numRows,property,asc,filterCriteria);
else result=request.getDetailRavitaillementEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailRavitaillement(start,numRows,property,asc,searchCriterions);
else result=request.listDetailRavitaillement(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailRavitaillement(property,searchCriterions);
else returnrequest.countNonAffectedDetailRavitaillementReverse(property,searchCriterions);
else returnrequest.countDetailRavitaillement(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailRavitaillement(property,filterCriteria);
else returnrequest.countNonAffectedDetailRavitaillementReverse(property,filterCriteria);
else returnrequest.countDetailRavitaillement(filterCriteria);
else returnrequest.countNonAffectedDetailRavitaillement("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailRavitaillement(property,searchCriterions);
else returnrequest.countNonAffectedDetailRavitaillementReverse(property,searchCriterions);
else returnrequest.countDetailRavitaillement(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailRavitaillement(property);
else returnrequest.countNonAffectedDetailRavitaillementReverse(property);
else returnrequest.countDetailRavitaillement();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailRavitaillementRequestrequest=(DetailRavitaillementRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxyravitaillement_cDTDepart_nomCrit=request.create(BasicCriteriaProxy.class);ravitaillement_cDTDepart_nomCrit.setField("ravitaillement.cDTDepart.nom");ravitaillement_cDTDepart_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);ravitaillement_cDTDepart_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(ravitaillement_cDTDepart_nomCrit);//SearchfieldDateDeparttry{DateUtil.parseDate(text);BasicCriteriaProxyravitaillement_dateDepartCrit=request.create(BasicCriteriaProxy.class);ravitaillement_dateDepartCrit.setField("ravitaillement.dateDepart");ravitaillement_dateDepartCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);ravitaillement_dateDepartCrit.setValue(text);buffer.append("("+NLS.constants().ravitaillement_field_dateDepart()+":"+text+")"+SYMBOL_OR+"");criterionList.add(ravitaillement_dateDepartCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (idLink.getHTML().isEmpty())returnnull;
else returnidLink.getHTML();
if (value==null){return;
else dataProvider.getList().clear();
if (initField==null)handler.savePriseMedicamenteuse(value);
else handler.savePriseMedicamenteuse(value,initField);
if (AccessManager.canReadUtilisateurIdentif ication()){Column<UtilisateurProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().utilisateur_field_s_nom());
if (AccessManager.canReadUtilisateurIdentif ication()){Column<UtilisateurProxy,String>professionColumn=newProfessionColumn();professionColumn.setSortable(true);table.addColumn(professionColumn,NLS.constants().utilisateur_field_s_profession());
if (AccessManager.canReadUtilisateurIdentif ication()){Column<UtilisateurProxy,String>dateNaissanceColumn=newDateNaissanceColumn();dateNaissanceColumn.setSortable(true);table.addColumn(dateNaissanceColumn,NLS.constants().utilisateur_field_s_dateNaissance());
if (ProfileUtil.isAdmin()){Column<UtilisateurProxy,String>loginColumn=newLoginColumn();loginColumn.setSortable(true);table.addColumn(loginColumn,AdminNLS.constants().imogActor_field_s_login());
if (AccessManager.canCreateUtilisateur()&&AccessManager.canEditUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/utilisateur/",true);
else returnnull;
if (AccessManager.canDeleteUtilisateur()&&AccessManager.canEditUtilisateur()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteUtilisateur()&&AccessManager.canEditUtilisateur()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<UtilisateurProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().utilisateur_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(UtilisateurProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getUtilisateurRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedUtilisateurentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListUtilisateurEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.USR_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=utilisateur_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (object!=null){
if (object.getProfession()==null)value="";
else value=object.getProfession();
if (object!=null){
if (object.getDateNaissance()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateNaissance());
if (object.getLogin()==null)value="";
else value=object.getLogin();returnvalue;
if therelationfieldbuttonsshallbehiddenpublicSortieLotEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadSortieLotDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())descriptionSection.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().sortieLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if (url==null)icon.setVisible(false);
else icon.setUrl(url);this.title=newLabel(title);create=newPushButton(BaseNLS.constants().button_create());list=newPushButton(BaseNLS.constants().button_list());searchLabel=newLabel(BaseNLS.constants().button_search());initWidget(BINDER.createAndBindUi(this));
if (handler!=null)registrations.add(create.addClickHandler(handler));
else create.setVisible(false);
if (handler!=null)registrations.add(list.addClickHandler(handler));
else list.setVisible(false);
if (handler!=null)registrations.add(search.addClickHandler(handler));
else {searchPanel.setVisible(false);searchBoxes.setVisible(false);searchLabel.setVisible(false);
if (create!=null){create.setText(text);create.getElement().getStyle().setProperty("width",width);
if (isoCodes!=null){inti=0;for(StringisoCode:isoCodes){localeListBox.addItem(isoCode);//selectcurrentlocale
if (isoCode.equals(currentLocale))localeListBox.setSelectedIndex(i);i++;
if (edited)storeText(currentLocale);//changetextdependingonlocalecurrentLocale=localeListBox.getValue(localeListBox.getSelectedIndex());textBox.setText(getLocalizedText(currentLocale));
if (values!=null){
if (locale.equals("fr"))returnvalues.getFrancais();
if (locale.equals("en"))returnvalues.getEnglish();return"";
if theboxvalueisnull*@returnprivatebooleanisNull(){
if ((values.getFrancais()==null||values.getFrancais().isEmpty())&&(values.getEnglish()==null||values.getEnglish().isEmpty()))returntrue;
else returnfalse;
if (values!=null){
if (locale.equals("fr"))values.setFrancais(textBox.getText());
if (locale.equals("en"))values.setEnglish(textBox.getText());
if (!enabled){textBox.addStyleDependentName("disabled");localeListBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");localeListBox.removeStyleDependentName("disabled");
if (value!=null){//displaythetextforthecurrentlocaletextBox.setText(getLocalizedText(currentLocale));//
if notextisavailableforthecurrentlocale,getthefirstonethatisavailable
if (textBox.getText()==null||textBox.getText().equals("")){for(inti=0;i<localeListBox.getItemCount();i++){Stringlocale=localeListBox.getValue(i);Stringtext=getLocalizedText(locale);
if (text!=null&&!text.equals("")){textBox.setText(text);localeListBox.setSelectedIndex(i);currentLocale=locale;return;
if (edited)storeText(currentLocale);
if (isNull())returnnull;
else returnvalues;
if (eventBus!=null){textBox.addValueChangeHandler(newValueChangeHandler<String>(){@OverridepublicvoidonValueChange(ValueChangeEvent<String>arg0){eventBus.fireEvent(newFieldValueChangeEvent(ImogLocalizedTextBox.this));
else current.setSelected(false);
if (parent!=null){editor=newExamenMicroscopieEditor(factory,true);this.initField=initField;
else editor=newExamenMicroscopieEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().examenMicroscopie_create_title());createDriver();createNewExamenMicroscopie();this.setContent(editor);
if (parent!=null){editor=newExamenMicroscopieEditor(factory,true);this.initField=initField;
else editor=newExamenMicroscopieEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchExamenMicroscopie(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditExamenMicroscopie())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("ExamenMicroscopieformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewExamenMicroscopieEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){editor.setLaboratoireReference(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editor.setCasTb(value,isLocked);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<PriseMedicamenteuseProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<PriseMedicamenteuseEditorNestedRow>editors=editor.getEditors();PriseMedicamenteuseEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){PriseMedicamenteuseProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (EpicamIconConstants.CASTUBERCULOSE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CASTUBERCULOSE_ICON);CasTuberculoseDataProviderprovider=newCasTuberculoseDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteCasTuberculose()&&AccessManager.canEditCasTuberculose())listComposite=newCasTuberculoseDynaTable(requestFactory,provider,true);
else listComposite=newCasTuberculoseDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(RendezVousentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<RendezVous>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<RendezVous>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<RendezVous>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(RendezVousentity:entities)delete(entity);
if (dateRendezVousBefore!=null&&!dateRendezVousBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateRendezVous");criteria.setValue(dateRendezVousBefore);junction.add(criteria);
if (dateRendezVousAfter!=null&&!dateRendezVousAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateRendezVous");criteria.setValue(dateRendezVousAfter);junction.add(criteria);
if (honore!=null&&!honore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("honore");criteria.setValue(honore);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (initField==null)handler.saveDynamicFieldTemplate(value);
else handler.saveDynamicFieldTemplate(value,initField);
if (parent!=null){editor=newExamenBiologiqueEditor(factory,true);this.initField=initField;
else editor=newExamenBiologiqueEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().examenBiologique_create_title());createDriver();createNewExamenBiologique();this.setContent(editor);
if (parent!=null){editor=newExamenBiologiqueEditor(factory,true);this.initField=initField;
else editor=newExamenBiologiqueEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchExamenBiologique(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditExamenBiologique())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("ExamenBiologiqueformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewExamenBiologiqueEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if (!loaded){ImogActorProxyactor=LocalSession.get().getCurrentUser();load(actor);
if (isAdmin()){return;
if (actor.getProfiles()==null){return;
if (profile.getEntityProfiles()!=null){for(EntityProfileProxyentity:profile.getEntityProfiles()){StringentityId=entity.getEntity().getId();
if ("patient".equals(entityId)){
if (entity.getCreate()!=null){canCreatePatient&=entity.getCreate();
if (entity.getDelete()!=null){canDeletePatient&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessPatient&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportPatient&=entity.getExport();
else 
if ("casindex".equals(entityId)){
if (entity.getCreate()!=null){canCreateCasIndex&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteCasIndex&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessCasIndex&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportCasIndex&=entity.getExport();
else 
if ("castuberculose".equals(entityId)){
if (entity.getCreate()!=null){canCreateCasTuberculose&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteCasTuberculose&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessCasTuberculose&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportCasTuberculose&=entity.getExport();
else 
if ("examenserologie".equals(entityId)){
if (entity.getCreate()!=null){canCreateExamenSerologie&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteExamenSerologie&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessExamenSerologie&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportExamenSerologie&=entity.getExport();
else 
if ("examenbiologique".equals(entityId)){
if (entity.getCreate()!=null){canCreateExamenBiologique&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteExamenBiologique&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessExamenBiologique&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportExamenBiologique&=entity.getExport();
else 
if ("examenmicroscopie".equals(entityId)){
if (entity.getCreate()!=null){canCreateExamenMicroscopie&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteExamenMicroscopie&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessExamenMicroscopie&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportExamenMicroscopie&=entity.getExport();
else 
if ("examenatb".equals(entityId)){
if (entity.getCreate()!=null){canCreateExamenATB&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteExamenATB&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessExamenATB&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportExamenATB&=entity.getExport();
else 
if ("prisemedicamenteuse".equals(entityId)){
if (entity.getCreate()!=null){canCreatePriseMedicamenteuse&=entity.getCreate();
if (entity.getDelete()!=null){canDeletePriseMedicamenteuse&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessPriseMedicamenteuse&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportPriseMedicamenteuse&=entity.getExport();
else 
if ("rendezvous".equals(entityId)){
if (entity.getCreate()!=null){canCreateRendezVous&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteRendezVous&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessRendezVous&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportRendezVous&=entity.getExport();
else 
if ("transfertreference".equals(entityId)){
if (entity.getCreate()!=null){canCreateTransfertReference&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteTransfertReference&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessTransfertReference&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportTransfertReference&=entity.getExport();
else 
if ("lot".equals(entityId)){
if (entity.getCreate()!=null){canCreateLot&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteLot&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessLot&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportLot&=entity.getExport();
else 
if ("horsusage".equals(entityId)){
if (entity.getCreate()!=null){canCreateHorsUsage&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteHorsUsage&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessHorsUsage&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportHorsUsage&=entity.getExport();
else 
if ("entreelot".equals(entityId)){
if (entity.getCreate()!=null){canCreateEntreeLot&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteEntreeLot&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessEntreeLot&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportEntreeLot&=entity.getExport();
else 
if ("sortielot".equals(entityId)){
if (entity.getCreate()!=null){canCreateSortieLot&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteSortieLot&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessSortieLot&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportSortieLot&=entity.getExport();
else 
if ("commande".equals(entityId)){
if (entity.getCreate()!=null){canCreateCommande&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteCommande&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessCommande&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportCommande&=entity.getExport();
else 
if ("detailcommandemedicament".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailCommandeMedicament&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailCommandeMedicament&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailCommandeMedicament&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailCommandeMedicament&=entity.getExport();
else 
if ("detailcommandeintrant".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailCommandeIntrant&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailCommandeIntrant&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailCommandeIntrant&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailCommandeIntrant&=entity.getExport();
else 
if ("reception".equals(entityId)){
if (entity.getCreate()!=null){canCreateReception&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteReception&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessReception&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportReception&=entity.getExport();
else 
if ("detailreceptionmedicament".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailReceptionMedicament&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailReceptionMedicament&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailReceptionMedicament&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailReceptionMedicament&=entity.getExport();
else 
if ("detailreceptionintrant".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailReceptionIntrant&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailReceptionIntrant&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailReceptionIntrant&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailReceptionIntrant&=entity.getExport();
else 
if ("ravitaillement".equals(entityId)){
if (entity.getCreate()!=null){canCreateRavitaillement&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteRavitaillement&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessRavitaillement&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportRavitaillement&=entity.getExport();
else 
if ("detailravitaillement".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailRavitaillement&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailRavitaillement&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailRavitaillement&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailRavitaillement&=entity.getExport();
else 
if ("inventaire".equals(entityId)){
if (entity.getCreate()!=null){canCreateInventaire&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteInventaire&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessInventaire&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportInventaire&=entity.getExport();
else 
if ("detailinventaire".equals(entityId)){
if (entity.getCreate()!=null){canCreateDetailInventaire&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDetailInventaire&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDetailInventaire&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDetailInventaire&=entity.getExport();
else 
if ("personnel".equals(entityId)){
if (entity.getCreate()!=null){canCreatePersonnel&=entity.getCreate();
if (entity.getDelete()!=null){canDeletePersonnel&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessPersonnel&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportPersonnel&=entity.getExport();
else 
if ("departpersonnel".equals(entityId)){
if (entity.getCreate()!=null){canCreateDepartPersonnel&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDepartPersonnel&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDepartPersonnel&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDepartPersonnel&=entity.getExport();
else 
if ("arriveepersonnel".equals(entityId)){
if (entity.getCreate()!=null){canCreateArriveePersonnel&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteArriveePersonnel&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessArriveePersonnel&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportArriveePersonnel&=entity.getExport();
else 
if ("region".equals(entityId)){
if (entity.getCreate()!=null){canCreateRegion&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteRegion&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessRegion&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportRegion&=entity.getExport();
else 
if ("districtsante".equals(entityId)){
if (entity.getCreate()!=null){canCreateDistrictSante&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteDistrictSante&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessDistrictSante&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportDistrictSante&=entity.getExport();
else 
if ("centrediagtrait".equals(entityId)){
if (entity.getCreate()!=null){canCreateCentreDiagTrait&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteCentreDiagTrait&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessCentreDiagTrait&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportCentreDiagTrait&=entity.getExport();
else 
if ("laboratoirereference".equals(entityId)){
if (entity.getCreate()!=null){canCreateLaboratoireReference&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteLaboratoireReference&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessLaboratoireReference&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportLaboratoireReference&=entity.getExport();
else 
if ("lieudit".equals(entityId)){
if (entity.getCreate()!=null){canCreateLieuDit&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteLieuDit&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessLieuDit&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportLieuDit&=entity.getExport();
else 
if ("regime".equals(entityId)){
if (entity.getCreate()!=null){canCreateRegime&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteRegime&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessRegime&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportRegime&=entity.getExport();
else 
if ("prisemedicamentregime".equals(entityId)){
if (entity.getCreate()!=null){canCreatePriseMedicamentRegime&=entity.getCreate();
if (entity.getDelete()!=null){canDeletePriseMedicamentRegime&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessPriseMedicamentRegime&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportPriseMedicamentRegime&=entity.getExport();
else 
if ("medicament".equals(entityId)){
if (entity.getCreate()!=null){canCreateMedicament&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteMedicament&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessMedicament&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportMedicament&=entity.getExport();
else 
if ("intrant".equals(entityId)){
if (entity.getCreate()!=null){canCreateIntrant&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteIntrant&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessIntrant&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportIntrant&=entity.getExport();
else 
if ("formation".equals(entityId)){
if (entity.getCreate()!=null){canCreateFormation&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteFormation&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessFormation&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportFormation&=entity.getExport();
else 
if ("candidatureformation".equals(entityId)){
if (entity.getCreate()!=null){canCreateCandidatureFormation&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteCandidatureFormation&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessCandidatureFormation&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportCandidatureFormation&=entity.getExport();
else 
if ("qualif ication".equals(entityId)){
if (entity.getCreate()!=null){canCreateQualif ication&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteQualif ication&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessQualif ication&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportQualif ication&=entity.getExport();
else 
if ("tutoriel".equals(entityId)){
if (entity.getCreate()!=null){canCreateTutoriel&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteTutoriel&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessTutoriel&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportTutoriel&=entity.getExport();
else 
if ("smspredefini".equals(entityId)){
if (entity.getCreate()!=null){canCreateSmsPredefini&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteSmsPredefini&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessSmsPredefini&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportSmsPredefini&=entity.getExport();
else 
if ("outbox".equals(entityId)){
if (entity.getCreate()!=null){canCreateOutBox&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteOutBox&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessOutBox&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportOutBox&=entity.getExport();
else 
if ("utilisateur".equals(entityId)){
if (entity.getCreate()!=null){canCreateUtilisateur&=entity.getCreate();
if (entity.getDelete()!=null){canDeleteUtilisateur&=entity.getDelete();
if (entity.getDirectAccess()!=null){canDirectAccessUtilisateur&=entity.getDirectAccess();
if (entity.getExport()!=null){canExportUtilisateur&=entity.getExport();
if (profile.getFieldGroupProfiles()!=null){for(FieldGroupProfileProxygroup:profile.getFieldGroupProfiles()){StringfieldGroupId=group.getFieldGroup().getId();
if ("patient.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientIdentif ication&=group.getRead();
if (group.getWrite()!=null){canWritePatientIdentif ication&=group.getWrite();
if (group.getExport()!=null){canExportPatientIdentif ication&=group.getExport();
else 
if ("patient.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientContact&=group.getRead();
if (group.getWrite()!=null){canWritePatientContact&=group.getWrite();
if (group.getExport()!=null){canExportPatientContact&=group.getExport();
else 
if ("patient.personnecontact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientPersonneContact&=group.getRead();
if (group.getWrite()!=null){canWritePatientPersonneContact&=group.getWrite();
if (group.getExport()!=null){canExportPatientPersonneContact&=group.getExport();
else 
if ("patient.tuberculose".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientTuberculose&=group.getRead();
if (group.getWrite()!=null){canWritePatientTuberculose&=group.getWrite();
if (group.getExport()!=null){canExportPatientTuberculose&=group.getExport();
else 
if ("patient.examens".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPatientExamens&=group.getRead();
if (group.getWrite()!=null){canWritePatientExamens&=group.getWrite();
if (group.getExport()!=null){canExportPatientExamens&=group.getExport();
else 
if ("casindex.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasIndexDescription&=group.getRead();
if (group.getWrite()!=null){canWriteCasIndexDescription&=group.getWrite();
if (group.getExport()!=null){canExportCasIndexDescription&=group.getExport();
else 
if ("castuberculose.informations".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseInformations&=group.getRead();
if (group.getWrite()!=null){canWriteCasTuberculoseInformations&=group.getWrite();
if (group.getExport()!=null){canExportCasTuberculoseInformations&=group.getExport();
else 
if ("castuberculose.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseExamen&=group.getRead();
if (group.getWrite()!=null){canWriteCasTuberculoseExamen&=group.getWrite();
if (group.getExport()!=null){canExportCasTuberculoseExamen&=group.getExport();
else 
if ("castuberculose.traitement".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseTraitement&=group.getRead();
if (group.getWrite()!=null){canWriteCasTuberculoseTraitement&=group.getWrite();
if (group.getExport()!=null){canExportCasTuberculoseTraitement&=group.getExport();
else 
if ("castuberculose.fintraitement".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCasTuberculoseFinTraitement&=group.getRead();
if (group.getWrite()!=null){canWriteCasTuberculoseFinTraitement&=group.getWrite();
if (group.getExport()!=null){canExportCasTuberculoseFinTraitement&=group.getExport();
else 
if ("examenserologie.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenSerologieDescription&=group.getRead();
if (group.getWrite()!=null){canWriteExamenSerologieDescription&=group.getWrite();
if (group.getExport()!=null){canExportExamenSerologieDescription&=group.getExport();
else 
if ("examenbiologique.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenBiologiqueDescription&=group.getRead();
if (group.getWrite()!=null){canWriteExamenBiologiqueDescription&=group.getWrite();
if (group.getExport()!=null){canExportExamenBiologiqueDescription&=group.getExport();
else 
if ("examenmicroscopie.centreexamen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenMicroscopieCentreExamen&=group.getRead();
if (group.getWrite()!=null){canWriteExamenMicroscopieCentreExamen&=group.getWrite();
if (group.getExport()!=null){canExportExamenMicroscopieCentreExamen&=group.getExport();
else 
if ("examenmicroscopie.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenMicroscopieExamen&=group.getRead();
if (group.getWrite()!=null){canWriteExamenMicroscopieExamen&=group.getWrite();
if (group.getExport()!=null){canExportExamenMicroscopieExamen&=group.getExport();
else 
if ("examenatb.centreexamen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenATBCentreExamen&=group.getRead();
if (group.getWrite()!=null){canWriteExamenATBCentreExamen&=group.getWrite();
if (group.getExport()!=null){canExportExamenATBCentreExamen&=group.getExport();
else 
if ("examenatb.examen".equals(fieldGroupId)){
if (group.getRead()!=null){canReadExamenATBExamen&=group.getRead();
if (group.getWrite()!=null){canWriteExamenATBExamen&=group.getWrite();
if (group.getExport()!=null){canExportExamenATBExamen&=group.getExport();
else 
if ("prisemedicamenteuse.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPriseMedicamenteuseDescription&=group.getRead();
if (group.getWrite()!=null){canWritePriseMedicamenteuseDescription&=group.getWrite();
if (group.getExport()!=null){canExportPriseMedicamenteuseDescription&=group.getExport();
else 
if ("rendezvous.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRendezVousDescription&=group.getRead();
if (group.getWrite()!=null){canWriteRendezVousDescription&=group.getWrite();
if (group.getExport()!=null){canExportRendezVousDescription&=group.getExport();
else 
if ("transfertreference.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTransfertReferenceInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canWriteTransfertReferenceInformationsDepart&=group.getWrite();
if (group.getExport()!=null){canExportTransfertReferenceInformationsDepart&=group.getExport();
else 
if ("transfertreference.informationarrivee".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTransfertReferenceInformationArrivee&=group.getRead();
if (group.getWrite()!=null){canWriteTransfertReferenceInformationArrivee&=group.getWrite();
if (group.getExport()!=null){canExportTransfertReferenceInformationArrivee&=group.getExport();
else 
if ("lot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLotDescription&=group.getRead();
if (group.getWrite()!=null){canWriteLotDescription&=group.getWrite();
if (group.getExport()!=null){canExportLotDescription&=group.getExport();
else 
if ("horsusage.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadHorsUsageDescription&=group.getRead();
if (group.getWrite()!=null){canWriteHorsUsageDescription&=group.getWrite();
if (group.getExport()!=null){canExportHorsUsageDescription&=group.getExport();
else 
if ("entreelot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadEntreeLotDescription&=group.getRead();
if (group.getWrite()!=null){canWriteEntreeLotDescription&=group.getWrite();
if (group.getExport()!=null){canExportEntreeLotDescription&=group.getExport();
else 
if ("sortielot.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadSortieLotDescription&=group.getRead();
if (group.getWrite()!=null){canWriteSortieLotDescription&=group.getWrite();
if (group.getExport()!=null){canExportSortieLotDescription&=group.getExport();
else 
if ("commande.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canWriteCommandeInformationsDepart&=group.getWrite();
if (group.getExport()!=null){canExportCommandeInformationsDepart&=group.getExport();
else 
if ("commande.regionapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeRegionApprobation&=group.getRead();
if (group.getWrite()!=null){canWriteCommandeRegionApprobation&=group.getWrite();
if (group.getExport()!=null){canExportCommandeRegionApprobation&=group.getExport();
else 
if ("commande.gtcapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCommandeGtcApprobation&=group.getRead();
if (group.getWrite()!=null){canWriteCommandeGtcApprobation&=group.getWrite();
if (group.getExport()!=null){canExportCommandeGtcApprobation&=group.getExport();
else 
if ("detailcommandemedicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailCommandeMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailCommandeMedicamentDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailCommandeMedicamentDescription&=group.getExport();
else 
if ("detailcommandeintrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailCommandeIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailCommandeIntrantDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailCommandeIntrantDescription&=group.getExport();
else 
if ("reception.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadReceptionDescription&=group.getRead();
if (group.getWrite()!=null){canWriteReceptionDescription&=group.getWrite();
if (group.getExport()!=null){canExportReceptionDescription&=group.getExport();
else 
if ("detailreceptionmedicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailReceptionMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailReceptionMedicamentDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailReceptionMedicamentDescription&=group.getExport();
else 
if ("detailreceptionintrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailReceptionIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailReceptionIntrantDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailReceptionIntrantDescription&=group.getExport();
else 
if ("ravitaillement.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canWriteRavitaillementInformationsDepart&=group.getWrite();
if (group.getExport()!=null){canExportRavitaillementInformationsDepart&=group.getExport();
else 
if ("ravitaillement.informationarrivee".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementInformationArrivee&=group.getRead();
if (group.getWrite()!=null){canWriteRavitaillementInformationArrivee&=group.getWrite();
if (group.getExport()!=null){canExportRavitaillementInformationArrivee&=group.getExport();
else 
if ("ravitaillement.detail".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRavitaillementDetail&=group.getRead();
if (group.getWrite()!=null){canWriteRavitaillementDetail&=group.getWrite();
if (group.getExport()!=null){canExportRavitaillementDetail&=group.getExport();
else 
if ("detailravitaillement.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailRavitaillementDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailRavitaillementDescription&=group.getExport();
else 
if ("detailravitaillement.sortie".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementSortie&=group.getRead();
if (group.getWrite()!=null){canWriteDetailRavitaillementSortie&=group.getWrite();
if (group.getExport()!=null){canExportDetailRavitaillementSortie&=group.getExport();
else 
if ("detailravitaillement.entree".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailRavitaillementEntree&=group.getRead();
if (group.getWrite()!=null){canWriteDetailRavitaillementEntree&=group.getWrite();
if (group.getExport()!=null){canExportDetailRavitaillementEntree&=group.getExport();
else 
if ("inventaire.informationsdepart".equals(fieldGroupId)){
if (group.getRead()!=null){canReadInventaireInformationsDepart&=group.getRead();
if (group.getWrite()!=null){canWriteInventaireInformationsDepart&=group.getWrite();
if (group.getExport()!=null){canExportInventaireInformationsDepart&=group.getExport();
else 
if ("detailinventaire.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDetailInventaireDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDetailInventaireDescription&=group.getWrite();
if (group.getExport()!=null){canExportDetailInventaireDescription&=group.getExport();
else 
if ("personnel.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelIdentif ication&=group.getRead();
if (group.getWrite()!=null){canWritePersonnelIdentif ication&=group.getWrite();
if (group.getExport()!=null){canExportPersonnelIdentif ication&=group.getExport();
else 
if ("personnel.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelContact&=group.getRead();
if (group.getWrite()!=null){canWritePersonnelContact&=group.getWrite();
if (group.getExport()!=null){canExportPersonnelContact&=group.getExport();
else 
if ("personnel.situation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelSituation&=group.getRead();
if (group.getWrite()!=null){canWritePersonnelSituation&=group.getWrite();
if (group.getExport()!=null){canExportPersonnelSituation&=group.getExport();
else 
if ("personnel.niveauaccess".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPersonnelNiveauAccess&=group.getRead();
if (group.getWrite()!=null){canWritePersonnelNiveauAccess&=group.getWrite();
if (group.getExport()!=null){canExportPersonnelNiveauAccess&=group.getExport();
else 
if ("departpersonnel.personnel".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDepartPersonnelPersonnel&=group.getRead();
if (group.getWrite()!=null){canWriteDepartPersonnelPersonnel&=group.getWrite();
if (group.getExport()!=null){canExportDepartPersonnelPersonnel&=group.getExport();
else 
if ("departpersonnel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDepartPersonnelDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDepartPersonnelDescription&=group.getWrite();
if (group.getExport()!=null){canExportDepartPersonnelDescription&=group.getExport();
else 
if ("arriveepersonnel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadArriveePersonnelDescription&=group.getRead();
if (group.getWrite()!=null){canWriteArriveePersonnelDescription&=group.getWrite();
if (group.getExport()!=null){canExportArriveePersonnelDescription&=group.getExport();
else 
if ("region.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegionDescription&=group.getRead();
if (group.getWrite()!=null){canWriteRegionDescription&=group.getWrite();
if (group.getExport()!=null){canExportRegionDescription&=group.getExport();
else 
if ("region.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegionAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteRegionAdresse&=group.getWrite();
if (group.getExport()!=null){canExportRegionAdresse&=group.getExport();
else 
if ("districtsante.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDistrictSanteDescription&=group.getRead();
if (group.getWrite()!=null){canWriteDistrictSanteDescription&=group.getWrite();
if (group.getExport()!=null){canExportDistrictSanteDescription&=group.getExport();
else 
if ("districtsante.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadDistrictSanteAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteDistrictSanteAdresse&=group.getWrite();
if (group.getExport()!=null){canExportDistrictSanteAdresse&=group.getExport();
else 
if ("centrediagtrait.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCentreDiagTraitDescription&=group.getRead();
if (group.getWrite()!=null){canWriteCentreDiagTraitDescription&=group.getWrite();
if (group.getExport()!=null){canExportCentreDiagTraitDescription&=group.getExport();
else 
if ("centrediagtrait.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCentreDiagTraitAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteCentreDiagTraitAdresse&=group.getWrite();
if (group.getExport()!=null){canExportCentreDiagTraitAdresse&=group.getExport();
else 
if ("laboratoirereference.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLaboratoireReferenceDescription&=group.getRead();
if (group.getWrite()!=null){canWriteLaboratoireReferenceDescription&=group.getWrite();
if (group.getExport()!=null){canExportLaboratoireReferenceDescription&=group.getExport();
else 
if ("laboratoirereference.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLaboratoireReferenceAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteLaboratoireReferenceAdresse&=group.getWrite();
if (group.getExport()!=null){canExportLaboratoireReferenceAdresse&=group.getExport();
else 
if ("lieudit.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLieuDitDescription&=group.getRead();
if (group.getWrite()!=null){canWriteLieuDitDescription&=group.getWrite();
if (group.getExport()!=null){canExportLieuDitDescription&=group.getExport();
else 
if ("lieudit.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadLieuDitAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteLieuDitAdresse&=group.getWrite();
if (group.getExport()!=null){canExportLieuDitAdresse&=group.getExport();
else 
if ("regime.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadRegimeDescription&=group.getRead();
if (group.getWrite()!=null){canWriteRegimeDescription&=group.getWrite();
if (group.getExport()!=null){canExportRegimeDescription&=group.getExport();
else 
if ("prisemedicamentregime.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadPriseMedicamentRegimeDescription&=group.getRead();
if (group.getWrite()!=null){canWritePriseMedicamentRegimeDescription&=group.getWrite();
if (group.getExport()!=null){canExportPriseMedicamentRegimeDescription&=group.getExport();
else 
if ("medicament.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadMedicamentDescription&=group.getRead();
if (group.getWrite()!=null){canWriteMedicamentDescription&=group.getWrite();
if (group.getExport()!=null){canExportMedicamentDescription&=group.getExport();
else 
if ("intrant.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadIntrantDescription&=group.getRead();
if (group.getWrite()!=null){canWriteIntrantDescription&=group.getWrite();
if (group.getExport()!=null){canExportIntrantDescription&=group.getExport();
else 
if ("formation.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadFormationDescription&=group.getRead();
if (group.getWrite()!=null){canWriteFormationDescription&=group.getWrite();
if (group.getExport()!=null){canExportFormationDescription&=group.getExport();
else 
if ("candidatureformation.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationDescription&=group.getRead();
if (group.getWrite()!=null){canWriteCandidatureFormationDescription&=group.getWrite();
if (group.getExport()!=null){canExportCandidatureFormationDescription&=group.getExport();
else 
if ("candidatureformation.regionapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationRegionApprobation&=group.getRead();
if (group.getWrite()!=null){canWriteCandidatureFormationRegionApprobation&=group.getWrite();
if (group.getExport()!=null){canExportCandidatureFormationRegionApprobation&=group.getExport();
else 
if ("candidatureformation.gtcapprobation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadCandidatureFormationGtcApprobation&=group.getRead();
if (group.getWrite()!=null){canWriteCandidatureFormationGtcApprobation&=group.getWrite();
if (group.getExport()!=null){canExportCandidatureFormationGtcApprobation&=group.getExport();
else 
if ("qualif ication.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadQualif icationDescription&=group.getRead();
if (group.getWrite()!=null){canWriteQualif icationDescription&=group.getWrite();
if (group.getExport()!=null){canExportQualif icationDescription&=group.getExport();
else 
if ("tutoriel.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadTutorielDescription&=group.getRead();
if (group.getWrite()!=null){canWriteTutorielDescription&=group.getWrite();
if (group.getExport()!=null){canExportTutorielDescription&=group.getExport();
else 
if ("smspredefini.description".equals(fieldGroupId)){
if (group.getRead()!=null){canReadSmsPredefiniDescription&=group.getRead();
if (group.getWrite()!=null){canWriteSmsPredefiniDescription&=group.getWrite();
if (group.getExport()!=null){canExportSmsPredefiniDescription&=group.getExport();
else 
if ("outbox.adresse".equals(fieldGroupId)){
if (group.getRead()!=null){canReadOutBoxAdresse&=group.getRead();
if (group.getWrite()!=null){canWriteOutBoxAdresse&=group.getWrite();
if (group.getExport()!=null){canExportOutBoxAdresse&=group.getExport();
else 
if ("outbox.messageinformation".equals(fieldGroupId)){
if (group.getRead()!=null){canReadOutBoxMessageInformation&=group.getRead();
if (group.getWrite()!=null){canWriteOutBoxMessageInformation&=group.getWrite();
if (group.getExport()!=null){canExportOutBoxMessageInformation&=group.getExport();
else 
if ("utilisateur.identif ication".equals(fieldGroupId)){
if (group.getRead()!=null){canReadUtilisateurIdentif ication&=group.getRead();
if (group.getWrite()!=null){canWriteUtilisateurIdentif ication&=group.getWrite();
if (group.getExport()!=null){canExportUtilisateurIdentif ication&=group.getExport();
else 
if ("utilisateur.contact".equals(fieldGroupId)){
if (group.getRead()!=null){canReadUtilisateurContact&=group.getRead();
if (group.getWrite()!=null){canWriteUtilisateurContact&=group.getWrite();
if (group.getExport()!=null){canExportUtilisateurContact&=group.getExport();
if (dateRendezVousBeforeBox.getValue()!=null){FilterCriteriadateRendezVousBeforeCrit=newFilterCriteria();dateRendezVousBeforeCrit.setField("dateRendezVous");dateRendezVousBeforeCrit.setFieldDisplayName(NLS.constants().rendezVous_field_dateRendezVous()+BaseNLS.constants().search_operator_inferior());dateRendezVousBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateRendezVousBeforeCrit.setValue(DateUtil.getDate(dateRendezVousBeforeBox.getValue()));dateRendezVousBeforeCrit.setValueDisplayName(DateUtil.getDate(dateRendezVousBeforeBox.getValue()));criteria.add(dateRendezVousBeforeCrit);
if (dateRendezVousAfterBox.getValue()!=null){FilterCriteriadateRendezVousAfterCrit=newFilterCriteria();dateRendezVousAfterCrit.setField("dateRendezVous");dateRendezVousAfterCrit.setFieldDisplayName(NLS.constants().rendezVous_field_dateRendezVous()+BaseNLS.constants().search_operator_superior());dateRendezVousAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateRendezVousAfterCrit.setValue(DateUtil.getDate(dateRendezVousAfterBox.getValue()));dateRendezVousAfterCrit.setValueDisplayName(DateUtil.getDate(dateRendezVousAfterBox.getValue()));criteria.add(dateRendezVousAfterCrit);
if (honoreBox.getValue()==null)honoreCrit.setValue(null);
else honoreCrit.setValue(String.valueOf(honoreBox.getValue()));honoreCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(honoreBox.getValue()));criteria.add(honoreCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadRendezVousDescription()){dateRendezVousBeforeFilterBox.setVisible(false);dateRendezVousAfterFilterBox.setVisible(false);
if (!AccessManager.canReadRendezVousDescription())honoreFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (searchText==null)handler.listDetailReceptionIntrant();
else handler.listDetailReceptionIntrant(searchText);
if therelationfieldbuttonsshallbehiddenpublicUtilisateurEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();nom.setEdited(isEdited);dateNaissance.setEdited(isEdited);profession.setEdited(isEdited);telephoneUn.setEdited(isEdited);telephoneDeux.setEdited(isEdited);telephoneTrois.setEdited(isEdited);email.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);login.setEdited(isEdited);password.setEdited(isEdited);passwordConfirm.setEdited(isEdited);profiles.setEdited(isEdited);idLink.setVisible(!isEdited);synchronizables.setEdited(isEdited);
if (!AccessManager.canReadUtilisateurIdentif ication()||!showIdentif icationSection)identif icationSection.setVisible(false);
if (!AccessManager.canReadUtilisateurContact()||!showContactSection)contactSection.setVisible(false);
if (!ProfileUtil.isAdmin()){administrationSection.setVisible(false);synchronizationSection.setVisible(false);
if (!AccessManager.canEditUtilisateurIdentif ication()||!showIdentif icationSection)identif icationSection.setVisible(false);
if (!AccessManager.canEditUtilisateurContact()||!showContactSection)contactSection.setVisible(false);
if (!ProfileUtil.isAdmin()){administrationSection.setVisible(false);synchronizationSection.setVisible(false);
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (newLogin!=null){
if (currentLogin!=null){
if (!currentLogin.equals(newLogin)){
if (!passwordChanged())delegate.recordError(AdminNLS.constants().login_without_password_error(),null,"login");
else {
if (!passwordChanged())delegate.recordError(AdminNLS.constants().login_without_password_error(),null,"login");
if (!(password1==null&&password2==null)){
if ((password1!=null&&password2==null)||(password2!=null&&password1==null)){delegate.recordError(AdminNLS.constants().password_confirm_error(),null,"password");isValid=false;
if (!password1.equals(password2)){delegate.recordError(AdminNLS.constants().password_confirm_error(),null,"password");isValid=false;
if thepasswordhasbeenchangedpublicbooleanpasswordChanged(){return!(password.getValue()==null&&passwordConfirm.getValue()==null);
if (errors!=null&&errors.size()>0){List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("password")){List<EditorError>fieldErrors=newArrayList<EditorError>();fieldErrors.add(error);passwordConfirm.showErrors(fieldErrors);
if (field.equals("login")){List<EditorError>fieldErrors=newArrayList<EditorError>();fieldErrors.add(error);login.showErrors(fieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (value==null){//return;//
if (values!=null){for(Tvalue:values){if (!parentBox.isPresent(value))parentBox.addValue(value);
else {if (pager.hasNextPage())pager.nextPage();
if (count!=null){updateRowCount(count.intValue(),true);pager.setTotalNbOfRows(count.intValue());updateTable(display);
if (handler==null)initHandler();returnhandler.getById(id);
if (handler==null)initHandler();returnhandler.getById(id);
if (entity.getAudioT()!=null){bck.setAudioT(entity.getAudioT().getId());
if (entity.getVideoT()!=null){bck.setVideoT(entity.getVideoT().getId());
if (entity.getTextT()!=null){bck.setTextT(entity.getTextT().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicSortieLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newSortieLotEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newSortieLotEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newSortieLotEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newSortieLotEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.SORTIELOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.SORTIELOT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicSortieLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editorWorkflow.setLot(value,isLocked);
else //returnfalse;returntrue;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Commandeentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedmedicamentsList<DetailCommandeMedicament>cmdae=entity.getMedicaments();
if (cmdae!=null){for(DetailCommandeMedicamentcmdaeItem:cmdae){handlerHelper.prepare(cmdaeItem);
if (cmdaf!=null){for(DetailCommandeIntrantcmdafItem:cmdaf){handlerHelper.prepare(cmdafItem);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Commande>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Commande>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Commande>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Commandeentity:entities)delete(entity);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (dateBefore!=null&&!dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("date");criteria.setValue(dateBefore);junction.add(criteria);
if (dateAfter!=null&&!dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("date");criteria.setValue(dateAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicLieuDitFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newLieuDitEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newLieuDitEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newLieuDitEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newLieuDitEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.LIEUDIT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LIEUDIT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicLieuDitFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicOutBoxDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedOutBox(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedOutBoxReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listOutBox(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedOutBox(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedOutBoxReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listOutBox(start,numRows,"modif ied",false,filterCriteria);
else result=request.getOutBoxEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedOutBox(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedOutBoxReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listOutBox(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedOutBox(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedOutBoxReverse(start,numRows,"modif ied",false,property);
else result=request.listOutBox(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listOutBox(start,numRows,property,asc,searchCriterions);
else result=request.listOutBox(start,numRows,property,asc,filterCriteria);
else result=request.getOutBoxEmptyList();
else {
if (searchCriterions!=null)result=request.listOutBox(start,numRows,property,asc,searchCriterions);
else result=request.listOutBox(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedOutBox(property,searchCriterions);
else returnrequest.countNonAffectedOutBoxReverse(property,searchCriterions);
else returnrequest.countOutBox(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedOutBox(property,filterCriteria);
else returnrequest.countNonAffectedOutBoxReverse(property,filterCriteria);
else returnrequest.countOutBox(filterCriteria);
else returnrequest.countNonAffectedOutBox("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedOutBox(property,searchCriterions);
else returnrequest.countNonAffectedOutBoxReverse(property,searchCriterions);
else returnrequest.countOutBox(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedOutBox(property);
else returnrequest.countNonAffectedOutBoxReverse(property);
else returnrequest.countOutBox();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();OutBoxRequestrequest=(OutBoxRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldMessageBasicCriteriaProxymessageCrit=request.create(BasicCriteriaProxy.class);messageCrit.setField("message");messageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);messageCrit.setValue(text);buffer.append("("+NLS.constants().outBox_field_message()+":"+text+")"+SYMBOL_OR+"");criterionList.add(messageCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicCandidatureFormationDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCandidatureFormation(start,numRows,"personnel",true,searchCriterions,property);
else result=request.listNonAffectedCandidatureFormationReverse(start,numRows,"personnel",true,searchCriterions,property);
else result=request.listCandidatureFormation(start,numRows,"personnel",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCandidatureFormation(start,numRows,"personnel",true,filterCriteria,property);
else result=request.listNonAffectedCandidatureFormationReverse(start,numRows,"personnel",true,filterCriteria,property);
else result=request.listCandidatureFormation(start,numRows,"personnel",true,filterCriteria);
else result=request.getCandidatureFormationEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCandidatureFormation(start,numRows,"personnel",true,searchCriterions,property);
else result=request.listNonAffectedCandidatureFormationReverse(start,numRows,"personnel",true,searchCriterions,property);
else result=request.listCandidatureFormation(start,numRows,"personnel",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCandidatureFormation(start,numRows,"personnel",true,property);
else result=request.listNonAffectedCandidatureFormationReverse(start,numRows,"personnel",true,property);
else result=request.listCandidatureFormation(start,numRows,"personnel",true);
if (isFiltered){result.with("personnel");result.with("CDT");result.with("districtSante");result.with("districtSante.nom");
else {result.with("personnel");result.with("districtSante");result.with("districtSante.nom");result.with("CDT");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listCandidatureFormation(start,numRows,property,asc,searchCriterions);
else result=request.listCandidatureFormation(start,numRows,property,asc,filterCriteria);
else result=request.getCandidatureFormationEmptyList();
else {
if (searchCriterions!=null)result=request.listCandidatureFormation(start,numRows,property,asc,searchCriterions);
else result=request.listCandidatureFormation(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCandidatureFormation(property,searchCriterions);
else returnrequest.countNonAffectedCandidatureFormationReverse(property,searchCriterions);
else returnrequest.countCandidatureFormation(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCandidatureFormation(property,filterCriteria);
else returnrequest.countNonAffectedCandidatureFormationReverse(property,filterCriteria);
else returnrequest.countCandidatureFormation(filterCriteria);
else returnrequest.countNonAffectedCandidatureFormation("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCandidatureFormation(property,searchCriterions);
else returnrequest.countNonAffectedCandidatureFormationReverse(property,searchCriterions);
else returnrequest.countCandidatureFormation(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCandidatureFormation(property);
else returnrequest.countNonAffectedCandidatureFormationReverse(property);
else returnrequest.countCandidatureFormation();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();CandidatureFormationRequestrequest=(CandidatureFormationRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxypersonnel_nomCrit=request.create(BasicCriteriaProxy.class);personnel_nomCrit.setField("personnel.nom");personnel_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);personnel_nomCrit.setValue(text);buffer.append("("+NLS.constants().personnel_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(personnel_nomCrit);//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldApprouveeRegion
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyapprouveeRegionCrit=request.create(BasicCriteriaProxy.class);approuveeRegionCrit.setField("approuveeRegion");approuveeRegionCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);approuveeRegionCrit.setValue(text);buffer.append("("+NLS.constants().candidatureFormation_field_approuveeRegion()+":"+text+")"+SYMBOL_OR+"");criterionList.add(approuveeRegionCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyapprouveeGTCCrit=request.create(BasicCriteriaProxy.class);approuveeGTCCrit.setField("approuveeGTC");approuveeGTCCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);approuveeGTCCrit.setValue(text);buffer.append("("+NLS.constants().candidatureFormation_field_approuveeGTC()+":"+text+")"+SYMBOL_OR+"");criterionList.add(approuveeGTCCrit);
if (locale.equals("fr"))districtSante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtSante_nomCrit.setField("districtSante.nom.english");districtSante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtSante_nomCrit.setValue(text);buffer.append("("+NLS.constants().districtSante_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(districtSante_nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (handler==null)initHandler();returnhandler.getById(id);
if (parent!=null){editor=newDistrictSanteEditor(factory,true);this.initField=initField;
else editor=newDistrictSanteEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().districtSante_create_title());createDriver();createNewDistrictSante();this.setContent(editor);
if (parent!=null){editor=newDistrictSanteEditor(factory,true);this.initField=initField;
else editor=newDistrictSanteEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDistrictSante(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getNom()==null){LocalizedTextProxynewNom=request.create(LocalizedTextProxy.class);current.setNom(newNom);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (current.getCoordonnees()==null){GeoFieldProxynewCoordonnees=request.create(GeoFieldProxy.class);current.setCoordonnees(newCoordonnees);
if (AccessManager.canEditDistrictSante())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DistrictSanteformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDistrictSanteEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if (handler==null)initHandler();returnhandler.getById(id);
if (initField==null)handler.saveExamenATB(value);
else handler.saveExamenATB(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailCommandeMedicamententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailCommandeMedicament>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailCommandeMedicament>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailCommandeMedicament>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailCommandeMedicamententity:entities)delete(entity);
if (quantiteRequise!=null&&!quantiteRequise.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteRequise");criteria.setValue(quantiteRequise);junction.add(criteria);
if (quantiteEnStock!=null&&!quantiteEnStock.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantiteEnStock");criteria.setValue(quantiteEnStock);junction.add(criteria);
if (medicament_designation!=null&&!medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("medicament.designation");criteria.setValue(medicament_designation);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (AccessManager.canReadSortieLotDescription()){Column<SortieLotProxy,String>lotColumn=newLotColumn();lotColumn.setSortable(true);table.addColumn(lotColumn,NLS.constants().sortieLot_field_s_lot());
if (AccessManager.canReadSortieLotDescription()){Column<SortieLotProxy,String>quantiteColumn=newQuantiteColumn();quantiteColumn.setSortable(true);table.addColumn(quantiteColumn,NLS.constants().sortieLot_field_s_quantite());
if (AccessManager.canCreateSortieLot()&&AccessManager.canEditSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/sortielot/",true);
else returnnull;
if (AccessManager.canDeleteSortieLot()&&AccessManager.canEditSortieLot()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteSortieLot()&&AccessManager.canEditSortieLot()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<SortieLotProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().sortieLot_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(SortieLotProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getSortieLotRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedSortieLotentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListSortieLotEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.SORT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=sortieLot_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getLot()==null)value="";
else value=renderer.getDisplayValue(object.getLot());
if (object!=null){
if (object.getQuantite()==null)value="";
else value=object.getQuantite().toString();
if (AccessManager.canReadRavitaillementInformationsDepart()){Column<RavitaillementProxy,String>cDTDepartColumn=newCDTDepartColumn();cDTDepartColumn.setSortable(true);table.addColumn(cDTDepartColumn,NLS.constants().ravitaillement_field_s_cDTDepart());
if (AccessManager.canReadRavitaillementInformationsDepart()){Column<RavitaillementProxy,String>dateDepartColumn=newDateDepartColumn();dateDepartColumn.setSortable(true);table.addColumn(dateDepartColumn,NLS.constants().ravitaillement_field_s_dateDepart());
if (AccessManager.canReadRavitaillementInformationArrivee()){Column<RavitaillementProxy,String>cDTArriveeColumn=newCDTArriveeColumn();cDTArriveeColumn.setSortable(true);table.addColumn(cDTArriveeColumn,NLS.constants().ravitaillement_field_s_cDTArrivee());
if (AccessManager.canReadRavitaillementInformationArrivee()){Column<RavitaillementProxy,String>dateArriveeColumn=newDateArriveeColumn();dateArriveeColumn.setSortable(true);table.addColumn(dateArriveeColumn,NLS.constants().ravitaillement_field_s_dateArrivee());
if (AccessManager.canCreateRavitaillement()&&AccessManager.canEditRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/ravitaillement/",true);
else returnnull;
if (AccessManager.canDeleteRavitaillement()&&AccessManager.canEditRavitaillement()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteRavitaillement()&&AccessManager.canEditRavitaillement()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<RavitaillementProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().ravitaillement_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(RavitaillementProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getRavitaillementRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedRavitaillemententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListRavitaillementEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.RAV_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=ravitaillement_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCDTDepart()==null)value="";
else value=renderer.getDisplayValue(object.getCDTDepart());
if (object!=null){
if (object.getDateDepart()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDepart());
if (object!=null){
if (object.getCDTArrivee()==null)value="";
else value=renderer.getDisplayValue(object.getCDTArrivee());
if (object!=null){
if (object.getDateArrivee()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateArrivee());
if therelationfieldbuttonsshallbehiddenpublicTutorielEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;nom=newImogLocalizedTextBox(locales,NLS.constants().locale());description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());audioT=newImogAudioBox(factory);videoT=newImogVideoBox(factory);textT=newImogBinaryBox(factory);initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();reference.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);type.setEdited(isEdited);audioT.setEdited(isEdited);videoT.setEdited(isEdited);textT.setEdited(isEdited);
if (!AccessManager.canReadTutorielDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditTutorielDescription())descriptionSection.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("1"))){audioT.setVisible(true);
else {audioT.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("2"))){videoT.setVisible(true);
else {videoT.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("0"))){textT.setVisible(true);
else {textT.setVisible(false);
if abinaryisbeinguploadedbytheeditor*@returntrue
if theeditorisuploadingabinarypublicbooleanisUploading(){booleanresult=false;
if (audioT.isUploading())returntrue;
if (videoT.isUploading())returntrue;
if (textT.isUploading())returntrue;returnresult;
if (reference.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"reference");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");//descriptionisarequiredfield
if (description.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"description");
if (errors!=null&&errors.size()>0){List<EditorError>referenceFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();List<EditorError>descriptionFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("reference"))referenceFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("description"))descriptionFieldErrors.add(error);
if (referenceFieldErrors.size()>0)reference.showErrors(referenceFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (descriptionFieldErrors.size()>0)description.showErrors(descriptionFieldErrors);
if thewidgetisenabledpublicbooleanisEnabled(){return!DOM.getElementPropertyBoolean(getElement(),"disabled");
if (focused){impl.focus(getElement());
else {impl.blur(getElement());
if (-1==tabIndex){setTabIndex(0);
if therelationfieldbuttonsshallbehiddenpublicOutBoxEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patient.setEdited(isEdited);message.setEdited(isEdited);//readonlyfieldreponse.setEdited(false);//readonlyfieldstatut.setEdited(false);//readonlyfielddateDernierEssai.setEdited(false);
if (!AccessManager.canReadOutBoxAdresse())adresseSection.setVisible(false);
if (!AccessManager.canReadOutBoxMessageInformation())messageInformationSection.setVisible(false);
if (!AccessManager.canEditOutBoxAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditOutBoxMessageInformation())messageInformationSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (message.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"message");
if (errors!=null&&errors.size()>0){List<EditorError>messageFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("message"))messageFieldErrors.add(error);
if (messageFieldErrors.size()>0)message.showErrors(messageFieldErrors);
if (parent!=null){editor=newFieldGroupEditor(factory,true);this.initField=initField;
else editor=newFieldGroupEditor(factory);isNew=true;setEditable(true);setTitle(AdminNLS.constants().fieldGroup_create_title());createDriver();createNewFieldGroup();this.setContent(editor);
if (parent!=null){editor=newFieldGroupEditor(factory,true);this.initField=initField;
else editor=newFieldGroupEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchFieldGroup(entityId);this.setContent(editor);
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("FieldGroupformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesAdminRendererrenderer=AdminRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewFieldGroupEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetEntity(CardEntityProxyvalue,booleanisLocked){editor.setEntity(value,isLocked);
if (AccessManager.canReadExamenMicroscopieExamen()){Column<ExamenMicroscopieProxy,String>casTbColumn=newCasTbColumn();casTbColumn.setSortable(true);table.addColumn(casTbColumn,NLS.constants().examenMicroscopie_field_s_casTb());
if (AccessManager.canReadExamenMicroscopieExamen()){Column<ExamenMicroscopieProxy,String>dateColumn=newDateColumn();dateColumn.setSortable(true);table.addColumn(dateColumn,NLS.constants().examenMicroscopie_field_s_date());
if (AccessManager.canReadExamenMicroscopieExamen()){Column<ExamenMicroscopieProxy,String>raisonDepistageColumn=newRaisonDepistageColumn();raisonDepistageColumn.setSortable(true);table.addColumn(raisonDepistageColumn,NLS.constants().examenMicroscopie_field_s_raisonDepistage());
if (AccessManager.canReadExamenMicroscopieExamen()){Column<ExamenMicroscopieProxy,String>resultatColumn=newResultatColumn();resultatColumn.setSortable(true);table.addColumn(resultatColumn,NLS.constants().examenMicroscopie_field_s_resultat());
if (AccessManager.canCreateExamenMicroscopie()&&AccessManager.canEditExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/examenmicroscopie/",true);
else returnnull;
if (AccessManager.canDeleteExamenMicroscopie()&&AccessManager.canEditExamenMicroscopie()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteExamenMicroscopie()&&AccessManager.canEditExamenMicroscopie()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ExamenMicroscopieProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().examenMicroscopie_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ExamenMicroscopieProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getExamenMicroscopieRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedExamenMicroscopieentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListExamenMicroscopieEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.EXAM_MICRO_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=examenMicroscopie_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCasTb()==null)value="";
else value=renderer.getDisplayValue(object.getCasTb());
if (object!=null){
if (object.getDate()==null)value="";
else value=DateUtil.getFormatedDate(object.getDate());
if (object!=null){
if (object.getRaisonDepistage()==null)value="";
else value=renderer.getEnumDisplayValue(ExamenMicroscopieProxy.class,"raisonDepistage",object.getRaisonDepistage());
if (object!=null){
if (object.getResultat()==null)value="";
else value=renderer.getEnumDisplayValue(ExamenMicroscopieProxy.class,"resultat",object.getResultat());
if (AccessManager.canReadReceptionDescription()){Column<ReceptionProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().reception_field_s_cDT());
if (AccessManager.canReadReceptionDescription()){Column<ReceptionProxy,String>commandeColumn=newCommandeColumn();commandeColumn.setSortable(true);table.addColumn(commandeColumn,NLS.constants().reception_field_s_commande());
if (AccessManager.canReadReceptionDescription()){Column<ReceptionProxy,String>dateReceptionColumn=newDateReceptionColumn();dateReceptionColumn.setSortable(true);table.addColumn(dateReceptionColumn,NLS.constants().reception_field_s_dateReception());
if (AccessManager.canCreateReception()&&AccessManager.canEditReception()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/reception/",true);
else returnnull;
if (AccessManager.canDeleteReception()&&AccessManager.canEditReception()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteReception()&&AccessManager.canEditReception()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ReceptionProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().reception_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ReceptionProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getReceptionRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedReceptionentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListReceptionEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportReception()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.REC_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=reception_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getCommande()==null)value="";
else value=renderer.getDisplayValue(object.getCommande());
if (object!=null){
if (object.getDateReception()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateReception());
if (searchText==null)handler.listCardEntity();
else handler.listCardEntity(searchText);
if (parent!=null){editor=newDynamicFieldTemplateEditor(factory,true,true,formTypeUtil);this.initField=initField;
else editor=newDynamicFieldTemplateEditor(factory,false,true,formTypeUtil);isNew=true;setEditable(true);setTitle(DynFieldsNLS.constants().dynamicField_Template_create_title());createDriver();createNewDynamicField_Template();this.setContent(editor);
if (parent!=null){editor=newDynamicFieldTemplateEditor(factory,true,false,formTypeUtil);this.initField=initField;
else editor=newDynamicFieldTemplateEditor(factory,false,false,formTypeUtil);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDynamicField_Template(entityId);this.setContent(editor);
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DynamicField_Templateformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesDynFieldsRendererrenderer=DynFieldsRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDynamicFieldTemplateEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetTemplateCreator(ImogActorProxyvalue,booleanisLocked){editor.setTemplateCreator(value,isLocked);
if (scanner!=null){scanner.close();
if (initField==null)handler.saveDetailCommandeMedicament(value);
else handler.saveDetailCommandeMedicament(value,initField);
if (editor.getList()!=null)returneditor.getList().get(index);returnnull;
if (editor.getList()!=null){returnlist.indexOf(proxy);
if (proxyList!=null){for(DynamicFieldInstanceProxyproxy:proxyList){DynamicFieldTemplateProxytemplate=proxy.getFieldTemplate();
if (template!=null&&template.getFieldPosition()!=null){Integerposition=template.getFieldPosition();List<DynamicFieldEditorForList>editors=editor.getEditors();DynamicFieldEditorForListsubEditor=editors.get(getIndex(proxy));
if (subEditor!=null){
if (position<=proxyList.size())move(subEditor,position);
else move(subEditor,proxyList.size());
if (index>0){listContainer.insert(editor,index);updateIndex();
if (template!=null&&template.getFieldPosition()!=null){//insertvalueatgivenpositionList<DynamicFieldInstanceProxy>proxyList=editor.getList();
if (template.getFieldPosition()<1)editor.getList().add(0,value);
else 
if (template.getFieldPosition()<=proxyList.size())editor.getList().add(template.getFieldPosition()-1,value);
else editor.getList().add(value);
else //insertvalueattheendofthelisteditor.getList().add(value);updateIndex();
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DynamicFieldInstanceProxy>());isNewFieldValue=true;insert(value);List<DynamicFieldEditorForList>editors=editor.getEditors();editors.get(getIndex(value)).setEdited(true);
if *theyarenotalreadypresentpublicvoidaddFieldTemplates(List<DynamicFieldTemplateProxy>response){
if (response!=null){for(DynamicFieldTemplateProxytemplate:response){booleanisPresent=false;for(DynamicFieldInstanceProxyinstance:editor.getList()){
if (instance.getFieldTemplate().getId().equals(template.getId()))isPresent=true;
if (!isPresent)add(template);
if (editors!=null&&editors.size()>0){for(DynamicFieldEditorForListeditor:editors)editor.setEdited(isEdited);
else {
if (!isEdited)listSection.setVisible(false);
if (isEdited&&!listSection.isVisible())listSection.setVisible(true);createDFTemplateButton.setVisible(isEdited);
if abinaryfieldisuploadingabinaryfile**@paramsource*@paramallValidationpublicbooleanisUploading(){List<DynamicFieldEditorForList>editors=editor.getEditors();
if (editors!=null&&editors.size()>0){for(DynamicFieldEditorForListdynamicFieldInstanceEditor:editors)
if (dynamicFieldInstanceEditor.isUploading())returntrue;
if (initField.equals("newDFTemplate_"+formType))add(template);
else {inti=0;for(DynamicFieldInstanceProxyinstance:editor.getList()){
if (instance.getFieldTemplate().getId().equals(initField)){DynamicFieldEditorForListsubEditor=editor.getEditors().get(i);subEditor.setLabel(template.getFieldName());return;
if (Window.confirm(DynFieldsNLS.constants().dynamicfield_confirmation_delete())){context.activateDynamicFieldTemplate(template,false).to(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){Window.alert(DynFieldsNLS.constants().dynamicfield_delete_confirm());
if anemptyfield
if (subEditor.isNew()){remove(subEditor.getIndex());updateIndex();
if (Window.confirm(DynFieldsNLS.constants().dynamicfield_confirmation_enable())){context.activateDynamicFieldTemplate(template,true).to(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){Window.alert(DynFieldsNLS.constants().dynamicfield_enable_confirm());
if (proxy!=null){DynamicFieldTemplateProxytemplate=proxy.getFieldTemplate();
if ((template!=null&&canManageTemplate(template.getTemplateCreator()))||(template!=null&&template.getAllUsers()!=null&&template.getAllUsers())){
if (template.getIsActivated())subEditor.setDisableTemplateAction(getDisableTemplateCommand(subEditor,template));
else subEditor.setEnableTemplateAction(getEnableTemplateCommand(template));subEditor.setUpdateTemplateAction(getUpdateTemplateCommand(template));
else subEditor.canManageField(false);
if andactorcanmanage(enable/disable/update)aDynamicField_Template**@paramactortheactorthatcreatedtheDynamicField_Template*@returnprivatebooleancanManageTemplate(ImogActorProxyactor){ImogActorProxycurrentUser=LocalSession.get().getCurrentUser();
if (ProfileUtil.isAdmin()||actor.getId().equals(currentUser.getId())||ProfileUtil.hasProfile(currentUser,actor.getProfiles()))returntrue;returnfalse;
if (isNewFieldValue)isNewFieldValue=false;subEditor.setIndex(index);listContainer.insert(subEditor,index);setFieldPrivileges(subEditor);returnsubEditor;
if (name.equals(PatientProxy.class.getName())){returnPATIENT_ICON;
if (name.equals(CasIndexProxy.class.getName())){returnCASINDEX_ICON;
if (name.equals(CasTuberculoseProxy.class.getName())){returnCASTUBERCULOSE_ICON;
if (name.equals(ExamenSerologieProxy.class.getName())){returnEXAMENSEROLOGIE_ICON;
if (name.equals(ExamenBiologiqueProxy.class.getName())){returnEXAMENBIOLOGIQUE_ICON;
if (name.equals(ExamenMicroscopieProxy.class.getName())){returnEXAMENMICROSCOPIE_ICON;
if (name.equals(ExamenATBProxy.class.getName())){returnEXAMENATB_ICON;
if (name.equals(PriseMedicamenteuseProxy.class.getName())){returnPRISEMEDICAMENTEUSE_ICON;
if (name.equals(RendezVousProxy.class.getName())){returnRENDEZVOUS_ICON;
if (name.equals(TransfertReferenceProxy.class.getName())){returnTRANSFERTREFERENCE_ICON;
if (name.equals(LotProxy.class.getName())){returnLOT_ICON;
if (name.equals(HorsUsageProxy.class.getName())){returnHORSUSAGE_ICON;
if (name.equals(EntreeLotProxy.class.getName())){returnENTREELOT_ICON;
if (name.equals(SortieLotProxy.class.getName())){returnSORTIELOT_ICON;
if (name.equals(CommandeProxy.class.getName())){returnCOMMANDE_ICON;
if (name.equals(DetailCommandeMedicamentProxy.class.getName())){returnDETAILCOMMANDEMEDICAMENT_ICON;
if (name.equals(DetailCommandeIntrantProxy.class.getName())){returnDETAILCOMMANDEINTRANT_ICON;
if (name.equals(ReceptionProxy.class.getName())){returnRECEPTION_ICON;
if (name.equals(DetailReceptionMedicamentProxy.class.getName())){returnDETAILRECEPTIONMEDICAMENT_ICON;
if (name.equals(DetailReceptionIntrantProxy.class.getName())){returnDETAILRECEPTIONINTRANT_ICON;
if (name.equals(RavitaillementProxy.class.getName())){returnRAVITAILLEMENT_ICON;
if (name.equals(DetailRavitaillementProxy.class.getName())){returnDETAILRAVITAILLEMENT_ICON;
if (name.equals(InventaireProxy.class.getName())){returnINVENTAIRE_ICON;
if (name.equals(DetailInventaireProxy.class.getName())){returnDETAILINVENTAIRE_ICON;
if (name.equals(PersonnelProxy.class.getName())){returnPERSONNEL_ICON;
if (name.equals(DepartPersonnelProxy.class.getName())){returnDEPARTPERSONNEL_ICON;
if (name.equals(ArriveePersonnelProxy.class.getName())){returnARRIVEEPERSONNEL_ICON;
if (name.equals(RegionProxy.class.getName())){returnREGION_ICON;
if (name.equals(DistrictSanteProxy.class.getName())){returnDISTRICTSANTE_ICON;
if (name.equals(CentreDiagTraitProxy.class.getName())){returnCENTREDIAGTRAIT_ICON;
if (name.equals(LaboratoireReferenceProxy.class.getName())){returnLABORATOIREREFERENCE_ICON;
if (name.equals(LieuDitProxy.class.getName())){returnLIEUDIT_ICON;
if (name.equals(RegimeProxy.class.getName())){returnREGIME_ICON;
if (name.equals(PriseMedicamentRegimeProxy.class.getName())){returnPRISEMEDICAMENTREGIME_ICON;
if (name.equals(MedicamentProxy.class.getName())){returnMEDICAMENT_ICON;
if (name.equals(IntrantProxy.class.getName())){returnINTRANT_ICON;
if (name.equals(FormationProxy.class.getName())){returnFORMATION_ICON;
if (name.equals(CandidatureFormationProxy.class.getName())){returnCANDIDATUREFORMATION_ICON;
if (name.equals(Qualif icationProxy.class.getName())){returnQUALif ICATION_ICON;
if (name.equals(TutorielProxy.class.getName())){returnTUTORIEL_ICON;
if (name.equals(SmsPredefiniProxy.class.getName())){returnSMSPREDEFINI_ICON;
if (name.equals(OutBoxProxy.class.getName())){returnOUTBOX_ICON;
if (name.equals(UtilisateurProxy.class.getName())){returnUTILISATEUR_ICON;
if (estMedicamentAntituberculeuxBox.getValue()==null)estMedicamentAntituberculeuxCrit.setValue(null);
else estMedicamentAntituberculeuxCrit.setValue(String.valueOf(estMedicamentAntituberculeuxBox.getValue()));estMedicamentAntituberculeuxCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(estMedicamentAntituberculeuxBox.getValue()));criteria.add(estMedicamentAntituberculeuxCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadMedicamentDescription())codeFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())designationFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())estMedicamentAntituberculeuxFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (initField==null)handler.saveCandidatureFormation(value);
else handler.saveCandidatureFormation(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Ravitaillemententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelateddetailsList<DetailRavitaillement>ravca=entity.getDetails();
if (ravca!=null){for(DetailRavitaillementravcaItem:ravca){handlerHelper.prepare(ravcaItem);//managerelatedsortieLotSortieLotdet_ravba=ravcaItem.getSortieLot();
if (det_ravba!=null){handlerHelper.prepare(det_ravba);
if (det_ravca!=null){handlerHelper.prepare(det_ravca);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Ravitaillement>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Ravitaillement>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Ravitaillement>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Ravitaillemententity:entities)delete(entity);
if (cDTDepart_nom!=null&&!cDTDepart_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDTDepart.nom");criteria.setValue(cDTDepart_nom);junction.add(criteria);
if (dateDepartBefore!=null&&!dateDepartBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDepart");criteria.setValue(dateDepartBefore);junction.add(criteria);
if (dateDepartAfter!=null&&!dateDepartAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDepart");criteria.setValue(dateDepartAfter);junction.add(criteria);
if (cDTArrivee_nom!=null&&!cDTArrivee_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDTArrivee.nom");criteria.setValue(cDTArrivee_nom);junction.add(criteria);
if (dateArriveeBefore!=null&&!dateArriveeBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateArrivee");criteria.setValue(dateArriveeBefore);junction.add(criteria);
if (dateArriveeAfter!=null&&!dateArriveeAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateArrivee");criteria.setValue(dateArriveeAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (EpicamIconConstants.PRISEMEDICAMENTREGIME_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PRISEMEDICAMENTREGIME_ICON);PriseMedicamentRegimeDataProviderprovider=newPriseMedicamentRegimeDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeletePriseMedicamentRegime()&&AccessManager.canEditPriseMedicamentRegime())listComposite=newPriseMedicamentRegimeDynaTable(requestFactory,provider,true);
else listComposite=newPriseMedicamentRegimeDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (initField==null)handler.saveRegion(value);
else handler.saveRegion(value,initField);
if (initField==null)handler.saveFormation(value);
else handler.saveFormation(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ArriveePersonnelentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<ArriveePersonnel>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<ArriveePersonnel>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<ArriveePersonnel>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(ArriveePersonnelentity:entities)delete(entity);
if (dateArriveeBefore!=null&&!dateArriveeBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateArrivee");criteria.setValue(dateArriveeBefore);junction.add(criteria);
if (dateArriveeAfter!=null&&!dateArriveeAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateArrivee");criteria.setValue(dateArriveeAfter);junction.add(criteria);
if (region_nom_francais!=null&&!region_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.francais");criteria.setValue(region_nom_francais);junction.add(criteria);
if (region_nom_english!=null&&!region_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.english");criteria.setValue(region_nom_english);junction.add(criteria);
if (districtSante_nom_francais!=null&&!districtSante_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.francais");criteria.setValue(districtSante_nom_francais);junction.add(criteria);
if (districtSante_nom_english!=null&&!districtSante_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.english");criteria.setValue(districtSante_nom_english);junction.add(criteria);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (personnel_nom!=null&&!personnel_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("personnel.nom");criteria.setValue(personnel_nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicTransfertReferenceDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTransfertReference(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedTransfertReferenceReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listTransfertReference(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTransfertReference(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listNonAffectedTransfertReferenceReverse(start,numRows,"dateDepart",false,filterCriteria,property);
else result=request.listTransfertReference(start,numRows,"dateDepart",false,filterCriteria);
else result=request.getTransfertReferenceEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTransfertReference(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listNonAffectedTransfertReferenceReverse(start,numRows,"dateDepart",false,searchCriterions,property);
else result=request.listTransfertReference(start,numRows,"dateDepart",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedTransfertReference(start,numRows,"dateDepart",false,property);
else result=request.listNonAffectedTransfertReferenceReverse(start,numRows,"dateDepart",false,property);
else result=request.listTransfertReference(start,numRows,"dateDepart",false);
if (isFiltered){result.with("patient");result.with("CDTDepart");result.with("CDTArrivee");
else {result.with("patient");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listTransfertReference(start,numRows,property,asc,searchCriterions);
else result=request.listTransfertReference(start,numRows,property,asc,filterCriteria);
else result=request.getTransfertReferenceEmptyList();
else {
if (searchCriterions!=null)result=request.listTransfertReference(start,numRows,property,asc,searchCriterions);
else result=request.listTransfertReference(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTransfertReference(property,searchCriterions);
else returnrequest.countNonAffectedTransfertReferenceReverse(property,searchCriterions);
else returnrequest.countTransfertReference(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTransfertReference(property,filterCriteria);
else returnrequest.countNonAffectedTransfertReferenceReverse(property,filterCriteria);
else returnrequest.countTransfertReference(filterCriteria);
else returnrequest.countNonAffectedTransfertReference("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTransfertReference(property,searchCriterions);
else returnrequest.countNonAffectedTransfertReferenceReverse(property,searchCriterions);
else returnrequest.countTransfertReference(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedTransfertReference(property);
else returnrequest.countNonAffectedTransfertReferenceReverse(property);
else returnrequest.countTransfertReference();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();TransfertReferenceRequestrequest=(TransfertReferenceRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxypatient_identif iantCrit=request.create(BasicCriteriaProxy.class);patient_identif iantCrit.setField("patient.identif iant");patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatient_nomCrit=request.create(BasicCriteriaProxy.class);patient_nomCrit.setField("patient.nom");patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_nomCrit);//SearchfieldNature
if (text.toLowerCase().equals(NLS.constants().transfertReference_nature_transfert_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_TRANSFERT);buffer.append("("+NLS.constants().transfertReference_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (text.toLowerCase().equals(NLS.constants().transfertReference_nature_reference_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_REFERENCE);buffer.append("("+NLS.constants().transfertReference_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listCasTuberculose();
else handler.listCasTuberculose(searchText);
if (searchText==null)handler.listEntreeLot();
else handler.listEntreeLot(searchText);
if (messages.size()>0)messagesPanel.setVisible(true);
if (currentMessageKey!=null&&currentMessageKey.equals(id))displayMessage("");
if (messages.size()<1)messagesPanel.setVisible(false);
if (timer!=null)timer.cancel();
if (!empty)messageCount.setText("("+(currentIndex+1)+"/"+messages.size()+")");
else messageCount.setText("");displayedMessage.setText(text);deleteMessage.setVisible(!empty);
if (currentIndex>=keys.size()&&keys.size()>0)currentIndex=currentIndex-1;
if (currentIndex<keys.size()){currentMessageKey=keys.get(currentIndex);displayMessage(messages.get(currentMessageKey));currentIndex=(currentIndex+1)%messages.size();
if (object==null)returntrue;try{Datelimit=DateUtil.parseDate(limitDate);
if (object.before(limit))returntrue;
else returnfalse;
if (parent!=null){editor=newDetailRavitaillementEditor(factory,true);this.initField=initField;
else editor=newDetailRavitaillementEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailRavitaillement_create_title());createDriver();createNewDetailRavitaillement();this.setContent(editor);
if (parent!=null){editor=newDetailRavitaillementEditor(factory,true);this.initField=initField;
else editor=newDetailRavitaillementEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailRavitaillement(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (sortieLot!=null){
if (entreeLot!=null){
if (AccessManager.canEditDetailRavitaillement())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailRavitaillementformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailRavitaillementEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRavitaillement(RavitaillementProxyvalue,booleanisLocked){editor.setRavitaillement(value,isLocked);
if (searchText==null)handler.listCasIndex();
else handler.listCasIndex(searchText);
if (initField==null)handler.saveCentreDiagTrait(value);
else handler.saveCentreDiagTrait(value,initField);
if (bool!=null){if (bool.booleanValue())returnBaseNLS.constants().boolean_true();
else returnBaseNLS.constants().boolean_false();
else //returnBaseNLS.constants().boolean_unknown();return"";
if (parent!=null){editor=newExamenATBEditor(factory,true);this.initField=initField;
else editor=newExamenATBEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().examenATB_create_title());createDriver();createNewExamenATB();this.setContent(editor);
if (parent!=null){editor=newExamenATBEditor(factory,true);this.initField=initField;
else editor=newExamenATBEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchExamenATB(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditExamenATB())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("ExamenATBformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewExamenATBEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){editor.setLaboratoireReference(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){editor.setCasTb(value,isLocked);
if (paramId!=null){Binarybinary=binaryHandler.getBinary(paramId);
if (binary!=null){resp.setHeader("Content-Disposition","attachment;filename=\""+binary.getFileName()+"\"");resp.setContentType(binary.getContentType());resp.setContentLength((int)binary.getLength());FileInputStreamfis=newFileInputStream(BinaryFileManager.getInstance().buildFilePath(binary));IOUtils.copy(fis,resp.getOutputStream());fis.close();
else {resp.sendError(404);
else 
if (flvId!=null){Binarybinary=binaryHandler.getBinary(flvId);
if (binary!=null){FileflvFile=BinaryFileManager.getInstance().buildFlvFilePath(binary);resp.setHeader("Content-Disposition","attachment;filename=\""+binary.getFileName()+".flv"+"\"");resp.setContentType("x-flash-video");resp.setContentLength((int)flvFile.length());FileInputStreamfis=newFileInputStream(flvFile);IOUtils.copy(fis,resp.getOutputStream());fis.close();
else {resp.sendError(404);
else 
if (mp3Id!=null){Binarybinary=binaryHandler.getBinary(mp3Id);
if (binary!=null){Filemp3File=BinaryFileManager.getInstance().buildMp3FilePath(binary);+"\"");resp.setContentType("audio/mp3");resp.setContentLength((int)mp3File.length());FileInputStreamfis=newFileInputStream(mp3File);IOUtils.copy(fis,resp.getOutputStream());fis.close();
else {resp.sendError(404);
else 
if (thumbId!=null){Binarybinary=binaryHandler.getBinary(thumbId);
if (binary!=null){FilethumbFile=BinaryFileManager.getInstance().buildThumbFilePath(binary);resp.setHeader("Content-Disposition","attachment;filename=\""+binary.getFileName()+"\"");resp.setContentType(binary.getContentType());resp.setContentLength((int)thumbFile.length());FileInputStreamfis=newFileInputStream(thumbFile);IOUtils.copy(fis,resp.getOutputStream());fis.close();
else {resp.sendError(404);
else {resp.sendError(404);
if (handler==null)initHandler();returnhandler.getById(id);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("casTb").join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if therelationfieldbuttonsshallbehiddenpublicEntreeLotEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadEntreeLotDescription())CDT.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())lot.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())quantite.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())CDT.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())lot.setVisible(false);
if (!AccessManager.canEditEntreeLotDescription())quantite.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().entreeLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (searchText==null)handler.listExamenMicroscopie();
else handler.listExamenMicroscopie(searchText);
if (ProfileUtil.isAdmin()){Column<DynamicFieldTemplateProxy,String>formTypeColumn=newFormTypeColumn();formTypeColumn.setSortable(true);table.addColumn(formTypeColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_formType());Column<DynamicFieldTemplateProxy,String>fieldNameColumn=newFieldNameColumn();fieldNameColumn.setSortable(true);table.addColumn(fieldNameColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_fieldName());Column<DynamicFieldTemplateProxy,String>fieldTypeColumn=newFieldTypeColumn();fieldTypeColumn.setSortable(true);table.addColumn(fieldTypeColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_fieldType());Column<DynamicFieldTemplateProxy,String>templateCreatorColumn=newTemplateCreatorColumn();templateCreatorColumn.setSortable(true);table.addColumn(templateCreatorColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_templateCreator());Column<DynamicFieldTemplateProxy,String>descriptionColumn=newDescriptionColumn();descriptionColumn.setSortable(true);table.addColumn(descriptionColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_description());Column<DynamicFieldTemplateProxy,String>fieldPositionColumn=newFieldPositionColumn();fieldPositionColumn.setSortable(true);table.addColumn(fieldPositionColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_fieldPosition());Column<DynamicFieldTemplateProxy,String>isDefaultColumn=newIsDefaultColumn();isDefaultColumn.setSortable(true);table.addColumn(isDefaultColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_isDefault());Column<DynamicFieldTemplateProxy,String>allUsersColumn=newAllUsersColumn();allUsersColumn.setSortable(true);table.addColumn(allUsersColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_allUsers());Column<DynamicFieldTemplateProxy,String>isActivatedColumn=newIsActivatedColumn();isActivatedColumn.setSortable(true);table.addColumn(isActivatedColumn,DynFieldsNLS.constants().dynamicField_Template_field_s_isActivated());
if (ProfileUtil.isAdmin()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/dynamicfieldtemplate/",true);
else returnnull;
if (ProfileUtil.isAdmin()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (ProfileUtil.isAdmin()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DynamicFieldTemplateProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){DynFieldsRendererrenderer=DynFieldsRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+DynFieldsNLS.constants().dynamicField_Template_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DynamicFieldTemplateProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDynamicField_TemplateRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDynamicField_Templateentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDynamicFieldTemplateEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (object.getFieldName()==null)value="";
else value=object.getFieldName();returnvalue;
if (object.getFieldType()==null)value="";
else value=renderer.getEnumDisplayValue(DynamicFieldTemplateProxy.class,"fieldType",object.getFieldType());returnvalue;
if (object.getFormType()==null)value="";
else value=renderer.getEnumDisplayValue(DynamicFieldTemplateProxy.class,"formType",object.getFormType());returnvalue;
if (object.getTemplateCreator()==null)value="";
else value=object.getTemplateCreator().getLogin();returnvalue;
if (object.getDescription()==null)value="";
else value=object.getDescription();returnvalue;
if (object.getIsDefault()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getIsDefault());returnvalue;
if (object.getFieldPosition()==null)value="";
else value=object.getFieldPosition().toString();returnvalue;
if (object.getAllUsers()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getAllUsers());returnvalue;
if (object.getIsActivated()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getIsActivated());returnvalue;
if (handler==null)initHandler();returnhandler.getById(id);
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if (entity.getPatientLie()!=null){bck.setPatientLie(entity.getPatientLie().getId());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Tutorielentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);
if (entity.getAudioT()!=null&&entity.getAudioT().getModif ied()==null){Binarybinary=entity.getAudioT();handlerHelper.prepare(binary);
if (entity.getVideoT()!=null&&entity.getVideoT().getModif ied()==null){Binarybinary=entity.getVideoT();handlerHelper.prepare(binary);
if (entity.getTextT()!=null&&entity.getTextT().getModif ied()==null){Binarybinary=entity.getTextT();handlerHelper.prepare(binary);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Tutoriel>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Tutoriel>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Tutoriel>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Tutorielentity:entities)delete(entity);
if (nom_francais!=null&&!nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.francais");criteria.setValue(nom_francais);junction.add(criteria);
if (nom_english!=null&&!nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.english");criteria.setValue(nom_english);junction.add(criteria);
if (reference!=null&&!reference.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("reference");criteria.setValue(reference);junction.add(criteria);
if (type!=null&&!type.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("type");criteria.setValue(type);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.CDT.id"),personnel.getCDT().getId());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicRegimeDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegime(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedRegimeReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listRegime(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegime(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedRegimeReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listRegime(start,numRows,"modif ied",false,filterCriteria);
else result=request.getRegimeEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegime(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedRegimeReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listRegime(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegime(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedRegimeReverse(start,numRows,"modif ied",false,property);
else result=request.listRegime(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listRegime(start,numRows,property,asc,searchCriterions);
else result=request.listRegime(start,numRows,property,asc,filterCriteria);
else result=request.getRegimeEmptyList();
else {
if (searchCriterions!=null)result=request.listRegime(start,numRows,property,asc,searchCriterions);
else result=request.listRegime(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegime(property,searchCriterions);
else returnrequest.countNonAffectedRegimeReverse(property,searchCriterions);
else returnrequest.countRegime(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegime(property,filterCriteria);
else returnrequest.countNonAffectedRegimeReverse(property,filterCriteria);
else returnrequest.countRegime(filterCriteria);
else returnrequest.countNonAffectedRegime("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegime(property,searchCriterions);
else returnrequest.countNonAffectedRegimeReverse(property,searchCriterions);
else returnrequest.countRegime(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegime(property);
else returnrequest.countNonAffectedRegimeReverse(property);
else returnrequest.countRegime();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();RegimeRequestrequest=(RegimeRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().regime_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldType
if (text.toLowerCase().equals(NLS.constants().regime_type_phaseInitiale_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.REGIME_TYPE_PHASEINITIALE);buffer.append("("+NLS.constants().regime_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().regime_type_phaseContinuation_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.REGIME_TYPE_PHASECONTINUATION);buffer.append("("+NLS.constants().regime_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().regime_type_independant_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.REGIME_TYPE_INDEPENDANT);buffer.append("("+NLS.constants().regime_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(CasTuberculoseentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedpriseMedicamenteusePhaseInitialeList<PriseMedicamenteuse>tbcasecc=entity.getPriseMedicamenteusePhaseInitiale();
if (tbcasecc!=null){for(PriseMedicamenteusetbcaseccItem:tbcasecc){handlerHelper.prepare(tbcaseccItem);
if (tbcasecd!=null){for(PriseMedicamenteusetbcasecdItem:tbcasecd){handlerHelper.prepare(tbcasecdItem);
if (tbcasece!=null){for(RendezVoustbcaseceItem:tbcasece){handlerHelper.prepare(tbcaseceItem);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<CasTuberculose>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<CasTuberculose>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<CasTuberculose>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(CasTuberculoseentity:entities)delete(entity);
if (patient_identif iant!=null&&!patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.identif iant");criteria.setValue(patient_identif iant);junction.add(criteria);
if (patient_nom!=null&&!patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.nom");criteria.setValue(patient_nom);junction.add(criteria);
if (dateDebutTraitementBefore!=null&&!dateDebutTraitementBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDebutTraitement");criteria.setValue(dateDebutTraitementBefore);junction.add(criteria);
if (dateDebutTraitementAfter!=null&&!dateDebutTraitementAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDebutTraitement");criteria.setValue(dateDebutTraitementAfter);junction.add(criteria);
if (typePatient!=null&&!typePatient.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("typePatient");criteria.setValue(typePatient);junction.add(criteria);
if (formeMaladie!=null&&!formeMaladie.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("formeMaladie");criteria.setValue(formeMaladie);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (ProfileUtil.isAdmin()){Column<CardEntityProxy,String>nameColumn=newNameColumn();nameColumn.setSortable(true);table.addColumn(nameColumn,AdminNLS.constants().cardEntity_name());
if (object!=null)value=renderer.getDisplayValue(object);returnvalue;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailReceptionIntrantentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedentreeLotEntreeLotdet_rec_intad=entity.getEntreeLot();
if (det_rec_intad!=null){handlerHelper.prepare(det_rec_intad);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailReceptionIntrant>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailReceptionIntrant>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailReceptionIntrant>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailReceptionIntrantentity:entities)delete(entity);
if (commande_cDT_nom!=null&&!commande_cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("commande.cDT.nom");criteria.setValue(commande_cDT_nom);junction.add(criteria);
if (commande_dateBefore!=null&&!commande_dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("commande.date");criteria.setValue(commande_dateBefore);junction.add(criteria);
if (commande_dateAfter!=null&&!commande_dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("commande.date");criteria.setValue(commande_dateAfter);junction.add(criteria);
if (detailCommande_intrant_identif iant!=null&&!detailCommande_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("detailCommande.intrant.identif iant");criteria.setValue(detailCommande_intrant_identif iant);junction.add(criteria);
if (detailCommande_quantiteRequise!=null&&!detailCommande_quantiteRequise.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("detailCommande.quantiteRequise");criteria.setValue(detailCommande_quantiteRequise);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (EpicamIconConstants.UTILISATEUR_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.UTILISATEUR_ICON);UtilisateurDataProviderprovider=newUtilisateurDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteUtilisateur()&&AccessManager.canEditUtilisateur())listComposite=newUtilisateurDynaTable(requestFactory,provider,true);
else listComposite=newUtilisateurDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (parent!=null){editor=newLotEditor(factory,true);this.initField=initField;
else editor=newLotEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().lot_create_title());createDriver();createNewLot();this.setContent(editor);
if (parent!=null){editor=newLotEditor(factory,true);this.initField=initField;
else editor=newLotEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchLot(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditLot())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (isNew){checkLotUnicityForCdt();
else fireSaveRequest();
if (isUnique!=null&&!isUnique)editor.raiseLotNotUniqueError();fireSaveRequest();
if (editorDriver.hasErrors()){//Window.alert("Lotformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewLotEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editor.setMedicament(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){editor.setIntrant(value,isLocked);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if (initField==null)handler.saveTutoriel(value);
else handler.saveTutoriel(value,initField);
if (dateBeforeBox.getValue()!=null){FilterCriteriadateBeforeCrit=newFilterCriteria();dateBeforeCrit.setField("date");dateBeforeCrit.setFieldDisplayName(NLS.constants().inventaire_field_date()+BaseNLS.constants().search_operator_inferior());dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateBeforeCrit.setValue(DateUtil.getDate(dateBeforeBox.getValue()));dateBeforeCrit.setValueDisplayName(DateUtil.getDate(dateBeforeBox.getValue()));criteria.add(dateBeforeCrit);
if (dateAfterBox.getValue()!=null){FilterCriteriadateAfterCrit=newFilterCriteria();dateAfterCrit.setField("date");dateAfterCrit.setFieldDisplayName(NLS.constants().inventaire_field_date()+BaseNLS.constants().search_operator_superior());dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateAfterCrit.setValue(DateUtil.getDate(dateAfterBox.getValue()));dateAfterCrit.setValueDisplayName(DateUtil.getDate(dateAfterBox.getValue()));criteria.add(dateAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadInventaireInformationsDepart()){dateBeforeFilterBox.setVisible(false);dateAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (selected){layout.removeStyleName(style.imogeneMenuItemOver());layout.addStyleDependentName(color+"selected");
else layout.removeStyleDependentName(color+"selected");
if (!selected)layout.addStyleName(style.imogeneMenuItemOver());
if (INSTANCE==null){INSTANCE=newImogDoubleParser();
if ("".equals(object.toString())){returnnull;
if therelationfieldbuttonsshallbehiddenpublicProfileEditor(AdminRequestFactoryfactory,booleanhideButtons,ImogBeanRendererrenderer){this.requestFactory=factory;setRelationFields(renderer);initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();name.setEdited(isEdited);if (editedValue!=null&&editedValue.getId()!=null&&editedValue.getId().equals(Profile.ADMINISTRATOR)){entityProfiles.setVisible(false);fieldGroupProfiles.setVisible(false);
else {entityProfiles.setEdited(isEdited);fieldGroupProfiles.setEdited(isEdited);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (!ProfileUtil.isAdmin())descriptionSection.setVisible(false);
if (parent!=null){editor=newDetailInventaireEditor(factory,true);this.initField=initField;
else editor=newDetailInventaireEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailInventaire_create_title());createDriver();createNewDetailInventaire();this.setContent(editor);
if (parent!=null){editor=newDetailInventaireEditor(factory,true);this.initField=initField;
else editor=newDetailInventaireEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailInventaire(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditDetailInventaire())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailInventaireformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailInventaireEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetInventaire(InventaireProxyvalue,booleanisLocked){editor.setInventaire(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){editor.setLot(value,isLocked);
if (parent!=null){editor=newLaboratoireReferenceEditor(factory,true);this.initField=initField;
else editor=newLaboratoireReferenceEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().laboratoireReference_create_title());createDriver();createNewLaboratoireReference();this.setContent(editor);
if (parent!=null){editor=newLaboratoireReferenceEditor(factory,true);this.initField=initField;
else editor=newLaboratoireReferenceEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchLaboratoireReference(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getNom()==null){LocalizedTextProxynewNom=request.create(LocalizedTextProxy.class);current.setNom(newNom);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (current.getCoordonnees()==null){GeoFieldProxynewCoordonnees=request.create(GeoFieldProxy.class);current.setCoordonnees(newCoordonnees);
if (AccessManager.canEditLaboratoireReference())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("LaboratoireReferenceformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewLaboratoireReferenceEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicSortieLotEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadSortieLotDescription())CDT.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())lot.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())quantite.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())CDT.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())lot.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())quantite.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().sortieLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (EpicamIconConstants.MEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.MEDICAMENT_ICON);MedicamentDataProviderprovider=newMedicamentDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteMedicament()&&AccessManager.canEditMedicament())listComposite=newMedicamentDynaTable(requestFactory,provider,true);
else listComposite=newMedicamentDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (EpicamIconConstants.ENTREELOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.ENTREELOT_ICON);EntreeLotDataProviderprovider=newEntreeLotDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteEntreeLot()&&AccessManager.canEditEntreeLot())listComposite=newEntreeLotDynaTable(requestFactory,provider,true);
else listComposite=newEntreeLotDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(TransfertReferenceentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);//updateCDTlistforpatient(removeCDTdepartandaddCDTarrivee)Patientpatient=entity.getPatient();
if (patient!=null){List<CentreDiagTrait>centresPatient=patient.getCentres();CentreDiagTraitcentreArrivee=entity.getCDTArrivee();CentreDiagTraitcentreDepart=entity.getCDTDepart();booleanupdatePatient=false;
if (centreDepart!=null&&centresPatient.contains(centreDepart)){
if (centresPatient.remove(centreDepart))updatePatient=true;
if (centreArrivee!=null&&!centresPatient.contains(centreArrivee)){
if (centresPatient.add(centreArrivee))updatePatient=true;
if (updatePatient)patientDao.saveOrUpdate(patient,false);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<TransfertReference>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<TransfertReference>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<TransfertReference>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(TransfertReferenceentity:entities)delete(entity);
if (patient_identif iant!=null&&!patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.identif iant");criteria.setValue(patient_identif iant);junction.add(criteria);
if (patient_nom!=null&&!patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.nom");criteria.setValue(patient_nom);junction.add(criteria);
if (nature!=null&&!nature.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nature");criteria.setValue(nature);junction.add(criteria);
if (cDTDepart_nom!=null&&!cDTDepart_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDTDepart.nom");criteria.setValue(cDTDepart_nom);junction.add(criteria);
if (dateDepartBefore!=null&&!dateDepartBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDepart");criteria.setValue(dateDepartBefore);junction.add(criteria);
if (dateDepartAfter!=null&&!dateDepartAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDepart");criteria.setValue(dateDepartAfter);junction.add(criteria);
if (cDTArrivee_nom!=null&&!cDTArrivee_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDTArrivee.nom");criteria.setValue(cDTArrivee_nom);junction.add(criteria);
if (dateArriveeBefore!=null&&!dateArriveeBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateArrivee");criteria.setValue(dateArriveeBefore);junction.add(criteria);
if (dateArriveeAfter!=null&&!dateArriveeAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateArrivee");criteria.setValue(dateArriveeAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (handler==null)initHandler();returnhandler.getById(id);
if (searchText==null)handler.listLieuDit();
else handler.listLieuDit(searchText);
if (handler==null)initHandler();returnhandler.getById(id);
if therelationfieldbuttonsshallbehiddenpublicExamenBiologiqueEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();date.setEdited(isEdited);poids.setEdited(isEdited);observations.setEdited(isEdited);
if (!AccessManager.canReadExamenBiologiqueDescription())date.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription())poids.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription())observations.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())date.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())poids.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())observations.setVisible(false);
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//poidsisarequiredfield
if (poids.getValueWithoutParseException()==null&&poids.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"poids");
if (errors!=null&&errors.size()>0){List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>poidsFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("poids"))poidsFieldErrors.add(error);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (poidsFieldErrors.size()>0)poids.showErrors(poidsFieldErrors);
if (dateBeforeBox.getValue()!=null){FilterCriteriadateBeforeCrit=newFilterCriteria();dateBeforeCrit.setField("date");dateBeforeCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_inferior());dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateBeforeCrit.setValue(DateUtil.getDate(dateBeforeBox.getValue()));dateBeforeCrit.setValueDisplayName(DateUtil.getDate(dateBeforeBox.getValue()));criteria.add(dateBeforeCrit);
if (dateAfterBox.getValue()!=null){FilterCriteriadateAfterCrit=newFilterCriteria();dateAfterCrit.setField("date");dateAfterCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_superior());dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateAfterCrit.setValue(DateUtil.getDate(dateAfterBox.getValue()));dateAfterCrit.setValueDisplayName(DateUtil.getDate(dateAfterBox.getValue()));criteria.add(dateAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCommandeInformationsDepart()){dateBeforeFilterBox.setVisible(false);dateAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if therelationfieldbuttonsshallbehiddenpublicCasIndexEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get());
else patientLie=newImogSingleRelationBox<PatientProxy>(false,patientLieDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patientLie.setEdited(isEdited);typeRelation.setEdited(isEdited);
if (!AccessManager.canReadCasIndexDescription())patientLie.setVisible(false);
if (!AccessManager.canReadCasIndexDescription())typeRelation.setVisible(false);
if (!AccessManager.canEditCasIndexDescription())patientLie.setVisible(false);
if (!AccessManager.canEditCasIndexDescription())typeRelation.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatientLie(PatientProxyvalue,booleanisLocked){patientLie.setLocked(isLocked);patientLie.setValue(value);
if (patientLie.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patientLie.getValue().getId(),relationPopup,"patientLie");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patientLie"))patientLie.setValue(value,true);
if (patientLie.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patientLie");//typeRelationisarequiredfield
if (typeRelation.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"typeRelation");
if (errors!=null&&errors.size()>0){List<EditorError>patientLieFieldErrors=newArrayList<EditorError>();List<EditorError>typeRelationFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("patientLie"))patientLieFieldErrors.add(error);
if (field.equals("typeRelation"))typeRelationFieldErrors.add(error);
if (patientLieFieldErrors.size()>0)patientLie.showErrors(patientLieFieldErrors);
if (typeRelationFieldErrors.size()>0)typeRelation.showErrors(typeRelationFieldErrors);
if (AccessManager.canReadCasTuberculoseInformations()){Column<CasTuberculoseProxy,String>patientColumn=newPatientColumn();patientColumn.setSortable(true);table.addColumn(patientColumn,NLS.constants().casTuberculose_field_s_patient());
if (AccessManager.canReadCasTuberculoseInformations()){Column<CasTuberculoseProxy,String>dateDebutTraitementColumn=newDateDebutTraitementColumn();dateDebutTraitementColumn.setSortable(true);table.addColumn(dateDebutTraitementColumn,NLS.constants().casTuberculose_field_s_dateDebutTraitement());
if (AccessManager.canReadCasTuberculoseInformations()){Column<CasTuberculoseProxy,String>typePatientColumn=newTypePatientColumn();typePatientColumn.setSortable(true);table.addColumn(typePatientColumn,NLS.constants().casTuberculose_field_s_typePatient());
if (AccessManager.canReadCasTuberculoseInformations()){Column<CasTuberculoseProxy,String>formeMaladieColumn=newFormeMaladieColumn();formeMaladieColumn.setSortable(true);table.addColumn(formeMaladieColumn,NLS.constants().casTuberculose_field_s_formeMaladie());
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/castuberculose/",true);
else returnnull;
if (AccessManager.canDeleteCasTuberculose()&&AccessManager.canEditCasTuberculose()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteCasTuberculose()&&AccessManager.canEditCasTuberculose()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<CasTuberculoseProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().casTuberculose_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(CasTuberculoseProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getCasTuberculoseRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedCasTuberculoseentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListCasTuberculoseEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.TBCASE_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=casTuberculose_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPatient()==null)value="";
else value=renderer.getDisplayValue(object.getPatient());
if (object!=null){
if (object.getDateDebutTraitement()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDebutTraitement());
if (object!=null){
if (object.getTypePatient()==null)value="";
else value=renderer.getEnumDisplayValue(CasTuberculoseProxy.class,"typePatient",object.getTypePatient());
if (object!=null){
if (object.getFormeMaladie()==null)value="";
else value=renderer.getEnumDisplayValue(CasTuberculoseProxy.class,"formeMaladie",object.getFormeMaladie());
if (AccessManager.canReadQualif icationDescription()){Column<Qualif icationProxy,String>codeColumn=newCodeColumn();codeColumn.setSortable(true);table.addColumn(codeColumn,NLS.constants().qualif ication_field_s_code());
if (AccessManager.canReadQualif icationDescription()){Column<Qualif icationProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().qualif ication_field_s_nom());
if (AccessManager.canCreateQualif ication()&&AccessManager.canEditQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/qualif ication/",true);
else returnnull;
if (AccessManager.canDeleteQualif ication()&&AccessManager.canEditQualif ication()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteQualif ication()&&AccessManager.canEditQualif ication()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<Qualif icationProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().qualif ication_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(Qualif icationProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getQualif icationRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedQualif icationentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListQualif icationEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.QUA_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=qualif ication_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCode()==null)value="";
else value=object.getCode();
if (object!=null){
if (object.getNom()==null)value="";
else value=renderer.getLocalizedText(object.getNom());
if (locale.equals("fr"))return"nom.francais";
if (locale.equals("en"))return"nom.english";return"nom";
if (beanDataProvider!=null&&beanDataProvider.getSearchCriterions()!=null)beanDataProvider.setSearchCriterions(null);popup=newDialogBox(false,true);popup.setHTML("<imgsrc='"+GWT.getModuleBaseURL()+"images/drag_top_right.png'style='text-align:right;height=16px;width=16px'>");popup.setGlassEnabled(true);wrapperPanel=newWrapperPanel();wrapperPanel.setPanelContentHeight("470px");table=newDataGrid<T>(itemByPage,GWT.<TableResources>create(TableResources.class)){@OverrideprotectedvoidonUnload(){removeHandlers();super.onUnload();
if (type.equals("click")){
if (event.getColumn()>0){Tvalue=event.getValue();
if (selectionModel.isSelected(value))selectionModel.setSelected(value,false);
else selectionModel.setSelected(value,true);
else okButton.setVisible(false);
if (filterPanel!=null){//addfilterbuttonfinalPopupButtonfilterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton,1);filterPanel.setFilterButtonClickHandler((newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){List<FilterCriteria>criteria=filterPanel.getFilterCriteria();beanDataProvider.filter(criteria);table.setVisibleRangeAndClearData(newRange(0,itemByPage),true);
if (values!=null){for(Tvalue:values){
if (!parentBox.isPresent(value))parentBox.addValue(value,true);
if (pager.hasPreviousPage())scrollTopImage.setDisabled(false);
else scrollTopImage.setDisabled(true);
if (pager.hasNextPage())scrollBottomImage.setDisabled(false);
else scrollBottomImage.setDisabled(true);
if (e.isNorth()){
if (pager.hasPreviousPage()){pager.previousPage();setScrollButtonsVisibility();
else {
if (pager.hasNextPage()){pager.nextPage();setScrollButtonsVisibility();
if avalueispresentinthebox*@paramtoTestthevaluetobetested*@returnprotectedbooleanisPresent(TtoTest){returnparentBox.isPresent(toTest);
if (pager.hasPreviousPage()){pager.previousPage();setScrollButtonsVisibility();
if (pager.hasNextPage()){pager.nextPage();setScrollButtonsVisibility();
if (!selectionModel.isSelected(item))returnfalse;
if (count!=null){updateRowCount(count.intValue(),true);pager.setTotalNbOfRows(count.intValue());updateTable(display);
if (dateDebutBeforeBox.getValue()!=null){FilterCriteriadateDebutBeforeCrit=newFilterCriteria();dateDebutBeforeCrit.setField("dateDebut");dateDebutBeforeCrit.setFieldDisplayName(NLS.constants().formation_field_dateDebut()+BaseNLS.constants().search_operator_inferior());dateDebutBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateDebutBeforeCrit.setValue(DateUtil.getDate(dateDebutBeforeBox.getValue()));dateDebutBeforeCrit.setValueDisplayName(DateUtil.getDate(dateDebutBeforeBox.getValue()));criteria.add(dateDebutBeforeCrit);
if (dateDebutAfterBox.getValue()!=null){FilterCriteriadateDebutAfterCrit=newFilterCriteria();dateDebutAfterCrit.setField("dateDebut");dateDebutAfterCrit.setFieldDisplayName(NLS.constants().formation_field_dateDebut()+BaseNLS.constants().search_operator_superior());dateDebutAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateDebutAfterCrit.setValue(DateUtil.getDate(dateDebutAfterBox.getValue()));dateDebutAfterCrit.setValueDisplayName(DateUtil.getDate(dateDebutAfterBox.getValue()));criteria.add(dateDebutAfterCrit);
if (locale.equals("fr"))libelleCrit.setField("libelle.francais");
if (locale.equals("en"))libelleCrit.setField("libelle.english");libelleCrit.setFieldDisplayName(NLS.constants().formation_field_libelle());libelleCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);libelleCrit.setValue(libelleBox.getValue());libelleCrit.setValueDisplayName(libelleBox.getValue());criteria.add(libelleCrit);FilterCriterialieuCrit=newFilterCriteria();
if (locale.equals("fr"))lieuCrit.setField("lieu.francais");
if (locale.equals("en"))lieuCrit.setField("lieu.english");lieuCrit.setFieldDisplayName(NLS.constants().formation_field_lieu());lieuCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lieuCrit.setValue(lieuBox.getValue());lieuCrit.setValueDisplayName(lieuBox.getValue());criteria.add(lieuCrit);FilterCriteriaeffectueeCrit=newFilterCriteria();effectueeCrit.setField("effectuee");effectueeCrit.setFieldDisplayName(NLS.constants().formation_field_effectuee());effectueeCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);
if (effectueeBox.getValue()==null)effectueeCrit.setValue(null);
else effectueeCrit.setValue(String.valueOf(effectueeBox.getValue()));effectueeCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(effectueeBox.getValue()));criteria.add(effectueeCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadFormationDescription()){dateDebutBeforeFilterBox.setVisible(false);dateDebutAfterFilterBox.setVisible(false);
if (!AccessManager.canReadFormationDescription())libelleFilterBox.setVisible(false);
if (!AccessManager.canReadFormationDescription())lieuFilterBox.setVisible(false);
if (!AccessManager.canReadFormationDescription())effectueeFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (handler==null)initHandler();returnhandler.getById(id);
if (params.length==0)returnnull;
else {
if ((params[0].equals("view")||params[0].equals("edit")||params[0].equals("list"))&&params.length==3){returnnewEntityToken(params[0],params[1],params[2]);
else 
if ((params[0].equals("new")||params[0].equals("list")||params[0].equals("xls"))&&params.length==2){returnnewEntityToken(params[0],params[1],"");
else 
if (params[0].equals("specif ic")&&params.length==4){returnnewEntityToken(params[1],params[2],params[3]);
else 
if (params[0].equals("specif ic")&&params.length==3){returnnewEntityToken(params[2],params[2],"");
else 
if (params[0].equals(TK_CLASSIC)){returnnewEntityToken(TK_CLASSIC,TK_CLASSIC,"");
else {returnnull;
if (initField==null)handler.saveCasIndex(value);
else handler.saveCasIndex(value,initField);
if (AccessManager.canReadDetailCommandeIntrantDescription()){Column<DetailCommandeIntrantProxy,String>intrantColumn=newIntrantColumn();intrantColumn.setSortable(true);table.addColumn(intrantColumn,NLS.constants().detailCommandeIntrant_field_s_intrant());
if (AccessManager.canReadDetailCommandeIntrantDescription()){Column<DetailCommandeIntrantProxy,String>quantiteRequiseColumn=newQuantiteRequiseColumn();quantiteRequiseColumn.setSortable(true);table.addColumn(quantiteRequiseColumn,NLS.constants().detailCommandeIntrant_field_s_quantiteRequise());
if (AccessManager.canReadDetailCommandeIntrantDescription()){Column<DetailCommandeIntrantProxy,String>quantiteEnStockColumn=newQuantiteEnStockColumn();quantiteEnStockColumn.setSortable(true);table.addColumn(quantiteEnStockColumn,NLS.constants().detailCommandeIntrant_field_s_quantiteEnStock());
if (AccessManager.canCreateDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailcommandeintrant/",true);
else returnnull;
if (AccessManager.canDeleteDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailCommandeIntrantProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailCommandeIntrant_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailCommandeIntrantProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailCommandeIntrantRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailCommandeIntrantentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailCommandeIntrantEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailCommandeIntrant()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_CMD_INT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailCommandeIntrant_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getIntrant()==null)value="";
else value=renderer.getDisplayValue(object.getIntrant());
if (object!=null){
if (object.getQuantiteRequise()==null)value="";
else value=object.getQuantiteRequise().toString();
if (object!=null){
if (object.getQuantiteEnStock()==null)value="";
else value=object.getQuantiteEnStock().toString();
if (searchText==null)handler.listExamenSerologie();
else handler.listExamenSerologie(searchText);
if therelationfieldbuttonsshallbehiddenpublicRegimeEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();nom.setEdited(isEdited);type.setEdited(isEdited);dureeTraitement.setEdited(isEdited);poidsMin.setEdited(isEdited);poidsMax.setEdited(isEdited);description.setEdited(isEdited);prisesMedicamenteuses.setEdited(isEdited);actif .setEdited(isEdited);
if (!AccessManager.canReadRegimeDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditRegimeDescription())descriptionSection.setVisible(false);
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");//typeisarequiredfield
if (type.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"type");//dureeTraitementisarequiredfield
if (dureeTraitement.getValueWithoutParseException()==null&&dureeTraitement.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dureeTraitement");//dureeTraitementshallbesuperiororequalto'1'
if (dureeTraitement.getValueWithoutParseException()!=null&&!(dureeTraitement.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().regime_field_dureeTraitement_min()),null,"dureeTraitement");//poidsMinisarequiredfield
if (poidsMin.getValueWithoutParseException()==null&&poidsMin.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"poidsMin");//poidsMinshallbesuperiororequalto'0'
if (poidsMin.getValueWithoutParseException()!=null&&!(poidsMin.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().regime_field_poidsMin_min()),null,"poidsMin");//poidsMaxisarequiredfield
if (poidsMax.getValueWithoutParseException()==null&&poidsMax.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"poidsMax");//poidsMaxshallbesuperiororequalto'1'
if (poidsMax.getValueWithoutParseException()!=null&&!(poidsMax.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().regime_field_poidsMax_min()),null,"poidsMax");//prisesMedicamenteusesnestedformshallbevalidatedprisesMedicamenteuses.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>nomFieldErrors=newArrayList<EditorError>();List<EditorError>typeFieldErrors=newArrayList<EditorError>();List<EditorError>dureeTraitementFieldErrors=newArrayList<EditorError>();List<EditorError>poidsMinFieldErrors=newArrayList<EditorError>();List<EditorError>poidsMaxFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nom"))nomFieldErrors.add(error);
if (field.equals("type"))typeFieldErrors.add(error);
if (field.equals("dureeTraitement"))dureeTraitementFieldErrors.add(error);
if (field.equals("poidsMin"))poidsMinFieldErrors.add(error);
if (field.equals("poidsMax"))poidsMaxFieldErrors.add(error);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if (typeFieldErrors.size()>0)type.showErrors(typeFieldErrors);
if (dureeTraitementFieldErrors.size()>0)dureeTraitement.showErrors(dureeTraitementFieldErrors);
if (poidsMinFieldErrors.size()>0)poidsMin.showErrors(poidsMinFieldErrors);
if (poidsMaxFieldErrors.size()>0)poidsMax.showErrors(poidsMaxFieldErrors);
if (statusBar==null)return;intpercent=IUploader.Utils.getPercent(done,total);statusBar.setWidth(percent+"px");statusMsg.setText(percent+"%");
if (scheduledFuture!=null){LOG.info("CancelscheduledNTPoffsettask");scheduledFuture.cancel(false);scheduledFuture=null;
if (statusBar==null)return;intpercent=IUploader.Utils.getPercent(done,total);statusBar.setWidth(percent+"px");statusMsg.setText(percent+"%");
if (prg!=null)panel.remove(prg);prg=progress;panel.add(prg);prg.setVisible(false);
if (prg!=null){
if (prginstanceofHasProgress)((HasProgress)prg).setProgress(done,total);
if (showProgress&&prg==null)setProgressWidget(newBasicProgressBar());
if (prg!=null)prg.setVisible(showProgress);fileNameLabel.setVisible(prginstanceofBasicProgressBar||!showProgress);statusLabel.setVisible(!showProgress);statusLabel.setText(message);cancelLabel.setVisible(hasCancelActions&&!cancelCfg.contains(CancelBehavior.DISABLED));
switch(stat){caseQUEUED:updateStatusPanel(false,i18nStrs.uploadStatusQueued());break;caseSUBMITING:updateStatusPanel(false,i18nStrs.uploadStatusSubmitting());break;caseINPROGRESS:updateStatusPanel(true,i18nStrs.uploadStatusInProgress());
if (!cancelCfg.contains(CancelBehavior.STOP_CURRENT))cancelLabel.setVisible(false);break;caseSUCCESS:updateStatusPanel(false,i18nStrs.uploadStatusSuccess());
if (!cancelCfg.contains(CancelBehavior.REMOVE_REMOTE))cancelLabel.setVisible(false);break;caseCANCELING:updateStatusPanel(false,i18nStrs.uploadStatusCanceling());break;caseCANCELED:updateStatusPanel(false,i18nStrs.uploadStatusCanceled());
if (cancelCfg.contains(CancelBehavior.REMOVE_CANCELLED_FROM_LIST))this.setVisible(false);break;caseERROR:updateStatusPanel(false,i18nStrs.uploadStatusError());break;default:break;
if (dateNaissanceBeforeBox.getValue()!=null){FilterCriteriadateNaissanceBeforeCrit=newFilterCriteria();dateNaissanceBeforeCrit.setField("dateNaissance");dateNaissanceBeforeCrit.setFieldDisplayName(NLS.constants().personnel_field_dateNaissance()+BaseNLS.constants().search_operator_inferior());dateNaissanceBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateNaissanceBeforeCrit.setValue(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));dateNaissanceBeforeCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));criteria.add(dateNaissanceBeforeCrit);
if (dateNaissanceAfterBox.getValue()!=null){FilterCriteriadateNaissanceAfterCrit=newFilterCriteria();dateNaissanceAfterCrit.setField("dateNaissance");dateNaissanceAfterCrit.setFieldDisplayName(NLS.constants().personnel_field_dateNaissance()+BaseNLS.constants().search_operator_superior());dateNaissanceAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateNaissanceAfterCrit.setValue(DateUtil.getDate(dateNaissanceAfterBox.getValue()));dateNaissanceAfterCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceAfterBox.getValue()));criteria.add(dateNaissanceAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPersonnelIdentif ication())nomFilterBox.setVisible(false);
if (!AccessManager.canReadPersonnelIdentif ication()){dateNaissanceBeforeFilterBox.setVisible(false);dateNaissanceAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())loginFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("phaseIntensive",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT),"region.id");Path<?>join2=DaoUtil.getCascadeRoot(root.join("phaseContinuation",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT),"region.id");returnbuilder.or(builder.equal(join,personnel.getRegion().getId()),builder.equal(join2,personnel.getRegion().getId()));
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("phaseIntensive",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT),"districtSante.id");Path<?>join2=DaoUtil.getCascadeRoot(root.join("phaseContinuation",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.or(builder.equal(join,personnel.getDistrictSante().getId()),builder.equal(join2,personnel.getDistrictSante().getId()));
else 
if ("3".equals(niveau)){Path<?>join=root.join("phaseIntensive",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT).get("id");Path<?>join2=root.join("phaseContinuation",JoinType.LEFT).join("patient",JoinType.LEFT).join("centres",JoinType.LEFT).get("id");returnbuilder.or(builder.equal(join,personnel.getCDT().getId()),builder.equal(join2,personnel.getCDT().getId()));
if (initField==null)handler.saveArriveePersonnel(value);
else handler.saveArriveePersonnel(value,initField);
if (parent!=null){editor=newIntrantEditor(factory,true);this.initField=initField;
else editor=newIntrantEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().intrant_create_title());createDriver();createNewIntrant();this.setContent(editor);
if (parent!=null){editor=newIntrantEditor(factory,true);this.initField=initField;
else editor=newIntrantEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchIntrant(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditIntrant())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Intrantformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewIntrantEvent(current.getId(),closeEvent));
if (EpicamIconConstants.EXAMENATB_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENATB_ICON);ExamenATBDataProviderprovider=newExamenATBDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteExamenATB()&&AccessManager.canEditExamenATB())listComposite=newExamenATBDynaTable(requestFactory,provider,true);
else listComposite=newExamenATBDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicDetailInventaireEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantiteReelle.setEdited(isEdited);//readonlyfieldquantiteTheorique.setEdited(false);
if (!AccessManager.canReadDetailInventaireDescription())CDT.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())lot.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteReelle.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteTheorique.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())CDT.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())lot.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())quantiteReelle.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())quantiteTheorique.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteReelleisarequiredfield
if (quantiteReelle.getValueWithoutParseException()==null&&quantiteReelle.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteReelle");//quantiteReelleshallbesuperiororequalto'0'
if (quantiteReelle.getValueWithoutParseException()!=null&&!(quantiteReelle.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteReelle_min()),null,"quantiteReelle");//quantiteTheoriqueshallbesuperiororequalto'0'
if (quantiteTheorique.getValueWithoutParseException()!=null&&!(quantiteTheorique.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteTheorique_min()),null,"quantiteTheorique");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteReelleFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteTheoriqueFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantiteReelle"))quantiteReelleFieldErrors.add(error);
if (field.equals("quantiteTheorique"))quantiteTheoriqueFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteReelleFieldErrors.size()>0)quantiteReelle.showErrors(quantiteReelleFieldErrors);
if (quantiteTheoriqueFieldErrors.size()>0)quantiteTheorique.showErrors(quantiteTheoriqueFieldErrors);
if (parent!=null){editor=newRavitaillementEditor(factory,true);this.initField=initField;
else editor=newRavitaillementEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().ravitaillement_create_title());createDriver();createNewRavitaillement();this.setContent(editor);
if (parent!=null){editor=newRavitaillementEditor(factory,true);this.initField=initField;
else editor=newRavitaillementEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchRavitaillement(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (details!=null&&details.size()>0){for(DetailRavitaillementProxyitem:details){
if (AccessManager.canEditRavitaillement())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Ravitaillementformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewRavitaillementEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDTDepart(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){editor.setRegionArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSanteArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDTArrivee(value,isLocked);
if (ravitaillement_dateDepartBeforeBox.getValue()!=null){FilterCriteriaravitaillement_dateDepartBeforeCrit=newFilterCriteria();ravitaillement_dateDepartBeforeCrit.setField("ravitaillement.dateDepart");ravitaillement_dateDepartBeforeCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateDepart()+BaseNLS.constants().search_operator_inferior());ravitaillement_dateDepartBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);ravitaillement_dateDepartBeforeCrit.setValue(DateUtil.getDate(ravitaillement_dateDepartBeforeBox.getValue()));ravitaillement_dateDepartBeforeCrit.setValueDisplayName(DateUtil.getDate(ravitaillement_dateDepartBeforeBox.getValue()));criteria.add(ravitaillement_dateDepartBeforeCrit);
if (ravitaillement_dateDepartAfterBox.getValue()!=null){FilterCriteriaravitaillement_dateDepartAfterCrit=newFilterCriteria();ravitaillement_dateDepartAfterCrit.setField("ravitaillement.dateDepart");ravitaillement_dateDepartAfterCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateDepart()+BaseNLS.constants().search_operator_superior());ravitaillement_dateDepartAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);ravitaillement_dateDepartAfterCrit.setValue(DateUtil.getDate(ravitaillement_dateDepartAfterBox.getValue()));ravitaillement_dateDepartAfterCrit.setValueDisplayName(DateUtil.getDate(ravitaillement_dateDepartAfterBox.getValue()));criteria.add(ravitaillement_dateDepartAfterCrit);
if (ravitaillement_dateArriveeBeforeBox.getValue()!=null){FilterCriteriaravitaillement_dateArriveeBeforeCrit=newFilterCriteria();ravitaillement_dateArriveeBeforeCrit.setField("ravitaillement.dateArrivee");ravitaillement_dateArriveeBeforeCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateArrivee()+BaseNLS.constants().search_operator_inferior());ravitaillement_dateArriveeBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);ravitaillement_dateArriveeBeforeCrit.setValue(DateUtil.getDate(ravitaillement_dateArriveeBeforeBox.getValue()));ravitaillement_dateArriveeBeforeCrit.setValueDisplayName(DateUtil.getDate(ravitaillement_dateArriveeBeforeBox.getValue()));criteria.add(ravitaillement_dateArriveeBeforeCrit);
if (ravitaillement_dateArriveeAfterBox.getValue()!=null){FilterCriteriaravitaillement_dateArriveeAfterCrit=newFilterCriteria();ravitaillement_dateArriveeAfterCrit.setField("ravitaillement.dateArrivee");ravitaillement_dateArriveeAfterCrit.setFieldDisplayName(NLS.constants().ravitaillement_field_dateArrivee()+BaseNLS.constants().search_operator_superior());ravitaillement_dateArriveeAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);ravitaillement_dateArriveeAfterCrit.setValue(DateUtil.getDate(ravitaillement_dateArriveeAfterBox.getValue()));ravitaillement_dateArriveeAfterCrit.setValueDisplayName(DateUtil.getDate(ravitaillement_dateArriveeAfterBox.getValue()));criteria.add(ravitaillement_dateArriveeAfterCrit);
if (sortielot_lot_quantiteBox.getValue()==null)sortielot_lot_quantiteCrit.setValue(null);
else sortielot_lot_quantiteCrit.setValue(String.valueOf(sortielot_lot_quantiteBox.getValue()));sortielot_lot_quantiteCrit.setValueDisplayName(String.valueOf(sortielot_lot_quantiteBox.getValue()));criteria.add(sortielot_lot_quantiteCrit);FilterCriteriasortielot_quantiteCrit=newFilterCriteria();sortielot_quantiteCrit.setField("sortieLot.quantite");sortielot_quantiteCrit.setFieldDisplayName(NLS.constants().sortieLot_field_quantite());sortielot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (sortielot_quantiteBox.getValue()==null)sortielot_quantiteCrit.setValue(null);
else sortielot_quantiteCrit.setValue(String.valueOf(sortielot_quantiteBox.getValue()));sortielot_quantiteCrit.setValueDisplayName(String.valueOf(sortielot_quantiteBox.getValue()));criteria.add(sortielot_quantiteCrit);FilterCriteriaentreelot_lot_numeroCrit=newFilterCriteria();entreelot_lot_numeroCrit.setField("entreeLot.lot.numero");entreelot_lot_numeroCrit.setFieldDisplayName(NLS.constants().lot_field_numero());entreelot_lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);entreelot_lot_numeroCrit.setValue(entreelot_lot_numeroBox.getValue());entreelot_lot_numeroCrit.setValueDisplayName(entreelot_lot_numeroBox.getValue());criteria.add(entreelot_lot_numeroCrit);FilterCriteriaentreelot_lot_intrant_identif iantCrit=newFilterCriteria();entreelot_lot_intrant_identif iantCrit.setField("entreeLot.lot.intrant.identif iant");entreelot_lot_intrant_identif iantCrit.setFieldDisplayName(NLS.constants().intrant_field_identif iant());entreelot_lot_intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);entreelot_lot_intrant_identif iantCrit.setValue(entreelot_lot_intrant_identif iantBox.getValue());entreelot_lot_intrant_identif iantCrit.setValueDisplayName(entreelot_lot_intrant_identif iantBox.getValue());criteria.add(entreelot_lot_intrant_identif iantCrit);FilterCriteriaentreelot_lot_medicament_designationCrit=newFilterCriteria();entreelot_lot_medicament_designationCrit.setField("entreeLot.lot.medicament.designation");entreelot_lot_medicament_designationCrit.setFieldDisplayName(NLS.constants().medicament_field_designation());entreelot_lot_medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);entreelot_lot_medicament_designationCrit.setValue(entreelot_lot_medicament_designationBox.getValue());entreelot_lot_medicament_designationCrit.setValueDisplayName(entreelot_lot_medicament_designationBox.getValue());criteria.add(entreelot_lot_medicament_designationCrit);FilterCriteriaentreelot_lot_quantiteCrit=newFilterCriteria();entreelot_lot_quantiteCrit.setField("entreeLot.lot.quantite");entreelot_lot_quantiteCrit.setFieldDisplayName(NLS.constants().lot_field_quantite());entreelot_lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (entreelot_lot_quantiteBox.getValue()==null)entreelot_lot_quantiteCrit.setValue(null);
else entreelot_lot_quantiteCrit.setValue(String.valueOf(entreelot_lot_quantiteBox.getValue()));entreelot_lot_quantiteCrit.setValueDisplayName(String.valueOf(entreelot_lot_quantiteBox.getValue()));criteria.add(entreelot_lot_quantiteCrit);FilterCriteriaentreelot_quantiteCrit=newFilterCriteria();entreelot_quantiteCrit.setField("entreeLot.quantite");entreelot_quantiteCrit.setFieldDisplayName(NLS.constants().entreeLot_field_quantite());entreelot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (entreelot_quantiteBox.getValue()==null)entreelot_quantiteCrit.setValue(null);
else entreelot_quantiteCrit.setValue(String.valueOf(entreelot_quantiteBox.getValue()));entreelot_quantiteCrit.setValueDisplayName(String.valueOf(entreelot_quantiteBox.getValue()));criteria.add(entreelot_quantiteCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())ravitaillement_cdtdepart_nomFilterBox.setVisible(false);
if (!AccessManager.canReadRavitaillementInformationsDepart()){ravitaillement_dateDepartBeforeFilterBox.setVisible(false);ravitaillement_dateDepartAfterFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())ravitaillement_cdtarrivee_nomFilterBox.setVisible(false);
if (!AccessManager.canReadRavitaillementInformationArrivee()){ravitaillement_dateArriveeBeforeFilterBox.setVisible(false);ravitaillement_dateArriveeAfterFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())sortielot_lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())sortielot_lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())sortielot_lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())sortielot_lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())sortielot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())entreelot_lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())entreelot_lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())entreelot_lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())entreelot_lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadEntreeLotDescription())entreelot_quantiteFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDistrictSanteDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDistrictSante(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedDistrictSanteReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listDistrictSante(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDistrictSante(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedDistrictSanteReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listDistrictSante(start,numRows,"nom",true,filterCriteria);
else result=request.getDistrictSanteEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDistrictSante(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedDistrictSanteReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listDistrictSante(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDistrictSante(start,numRows,"nom",true,property);
else result=request.listNonAffectedDistrictSanteReverse(start,numRows,"nom",true,property);
else result=request.listDistrictSante(start,numRows,"nom",true);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDistrictSante(start,numRows,property,asc,searchCriterions);
else result=request.listDistrictSante(start,numRows,property,asc,filterCriteria);
else result=request.getDistrictSanteEmptyList();
else {
if (searchCriterions!=null)result=request.listDistrictSante(start,numRows,property,asc,searchCriterions);
else result=request.listDistrictSante(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDistrictSante(property,searchCriterions);
else returnrequest.countNonAffectedDistrictSanteReverse(property,searchCriterions);
else returnrequest.countDistrictSante(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDistrictSante(property,filterCriteria);
else returnrequest.countNonAffectedDistrictSanteReverse(property,filterCriteria);
else returnrequest.countDistrictSante(filterCriteria);
else returnrequest.countNonAffectedDistrictSante("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDistrictSante(property,searchCriterions);
else returnrequest.countNonAffectedDistrictSanteReverse(property,searchCriterions);
else returnrequest.countDistrictSante(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDistrictSante(property);
else returnrequest.countNonAffectedDistrictSanteReverse(property);
else returnrequest.countDistrictSante();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DistrictSanteRequestrequest=(DistrictSanteRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxyregion_nomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(text);buffer.append("("+NLS.constants().region_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(region_nomCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().districtSante_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setFieldDisplayName(NLS.constants().tutoriel_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriteriareferenceCrit=newFilterCriteria();referenceCrit.setField("reference");referenceCrit.setFieldDisplayName(NLS.constants().tutoriel_field_reference());referenceCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);referenceCrit.setValue(referenceBox.getValue());referenceCrit.setValueDisplayName(referenceBox.getValue());criteria.add(referenceCrit);FilterCriteriatypeCrit=newFilterCriteria();typeCrit.setField("type");typeCrit.setFieldDisplayName(NLS.constants().tutoriel_field_type());typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(typeBox.getValue(typeBox.getSelectedIndex()));typeCrit.setValueDisplayName(EpicamRenderer.get().getEnumDisplayValue(TutorielProxy.class,"type",typeBox.getValue(typeBox.getSelectedIndex())));criteria.add(typeCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadTutorielDescription())nomFilterBox.setVisible(false);
if (!AccessManager.canReadTutorielDescription())referenceFilterBox.setVisible(false);
if (!AccessManager.canReadTutorielDescription())typeFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (entity.getCentres()!=null){StringBuilderbuilder=newStringBuilder();for(CentreDiagTraiti:entity.getCentres()){builder.append(i.getId()).append(";");
if (entity.getLieuxDits()!=null){StringBuilderbuilder=newStringBuilder();for(LieuDiti:entity.getLieuxDits()){builder.append(i.getId()).append(";");
if (entity.getCasTuberculose()!=null){StringBuilderbuilder=newStringBuilder();for(CasTuberculosei:entity.getCasTuberculose()){builder.append(i.getId()).append(";");
if (entity.getCasIndex()!=null){StringBuilderbuilder=newStringBuilder();for(CasIndexi:entity.getCasIndex()){builder.append(i.getId()).append(";");
if (entity.getExamensBiologiques()!=null){StringBuilderbuilder=newStringBuilder();for(ExamenBiologiquei:entity.getExamensBiologiques()){builder.append(i.getId()).append(";");
if (entity.getSerologies()!=null){StringBuilderbuilder=newStringBuilder();for(ExamenSerologiei:entity.getSerologies()){builder.append(i.getId()).append(";");
if (initField==null)handler.saveLieuDit(value);
else handler.saveLieuDit(value,initField);
if (EpicamIconConstants.EXAMENMICROSCOPIE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENMICROSCOPIE_ICON);ExamenMicroscopieDataProviderprovider=newExamenMicroscopieDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteExamenMicroscopie()&&AccessManager.canEditExamenMicroscopie())listComposite=newExamenMicroscopieDynaTable(requestFactory,provider,true);
else listComposite=newExamenMicroscopieDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicExamenBiologiqueEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patient.setEdited(isEdited);date.setEdited(isEdited);poids.setEdited(isEdited);observations.setEdited(isEdited);
if (!AccessManager.canReadExamenBiologiqueDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (patient.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patient");//dateisarequiredfield
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//poidsisarequiredfield
if (poids.getValueWithoutParseException()==null&&poids.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"poids");
if (errors!=null&&errors.size()>0){List<EditorError>patientFieldErrors=newArrayList<EditorError>();List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>poidsFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("patient"))patientFieldErrors.add(error);
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("poids"))poidsFieldErrors.add(error);
if (patientFieldErrors.size()>0)patient.showErrors(patientFieldErrors);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (poidsFieldErrors.size()>0)poids.showErrors(poidsFieldErrors);
if (searchText==null)handler.listPersonnel();
else handler.listPersonnel(searchText);
if (dateEffectiveBeforeBox.getValue()!=null){FilterCriteriadateEffectiveBeforeCrit=newFilterCriteria();dateEffectiveBeforeCrit.setField("dateEffective");dateEffectiveBeforeCrit.setFieldDisplayName(NLS.constants().priseMedicamenteuse_field_dateEffective()+BaseNLS.constants().search_operator_inferior());dateEffectiveBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateEffectiveBeforeCrit.setValue(DateUtil.getDate(dateEffectiveBeforeBox.getValue()));dateEffectiveBeforeCrit.setValueDisplayName(DateUtil.getDate(dateEffectiveBeforeBox.getValue()));criteria.add(dateEffectiveBeforeCrit);
if (dateEffectiveAfterBox.getValue()!=null){FilterCriteriadateEffectiveAfterCrit=newFilterCriteria();dateEffectiveAfterCrit.setField("dateEffective");dateEffectiveAfterCrit.setFieldDisplayName(NLS.constants().priseMedicamenteuse_field_dateEffective()+BaseNLS.constants().search_operator_superior());dateEffectiveAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateEffectiveAfterCrit.setValue(DateUtil.getDate(dateEffectiveAfterBox.getValue()));dateEffectiveAfterCrit.setValueDisplayName(DateUtil.getDate(dateEffectiveAfterBox.getValue()));criteria.add(dateEffectiveAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPriseMedicamenteuseDescription()){dateEffectiveBeforeFilterBox.setVisible(false);dateEffectiveAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicLaboratoireReferenceFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newLaboratoireReferenceEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newLaboratoireReferenceEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newLaboratoireReferenceEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newLaboratoireReferenceEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.LABORATOIREREFERENCE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LABORATOIREREFERENCE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicLaboratoireReferenceFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if (initField==null)handler.saveHorsUsage(value);
else handler.saveHorsUsage(value,initField);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.CDT.id"),personnel.getCDT().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicRavitaillementFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newRavitaillementEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newRavitaillementEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newRavitaillementEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newRavitaillementEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.RAVITAILLEMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RAVITAILLEMENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicRavitaillementFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDTDepart(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegionArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSanteArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDTArrivee(value,isLocked);
if (EpicamIconConstants.CENTREDIAGTRAIT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CENTREDIAGTRAIT_ICON);CentreDiagTraitDataProviderprovider=newCentreDiagTraitDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())listComposite=newCentreDiagTraitDynaTable(requestFactory,provider,true);
else listComposite=newCentreDiagTraitDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (IMOG_RESOURCES==null){IMOG_RESOURCES=GWT.create(ImogPagerResources.class);
if (AccessManager.canReadFormationDescription()){Column<FormationProxy,String>dateDebutColumn=newDateDebutColumn();dateDebutColumn.setSortable(true);table.addColumn(dateDebutColumn,NLS.constants().formation_field_s_dateDebut());
if (AccessManager.canReadFormationDescription()){Column<FormationProxy,String>libelleColumn=newLibelleColumn();libelleColumn.setSortable(true);table.addColumn(libelleColumn,NLS.constants().formation_field_s_libelle());
if (AccessManager.canReadFormationDescription()){Column<FormationProxy,String>lieuColumn=newLieuColumn();lieuColumn.setSortable(true);table.addColumn(lieuColumn,NLS.constants().formation_field_s_lieu());
if (AccessManager.canReadFormationDescription()){Column<FormationProxy,String>effectueeColumn=newEffectueeColumn();effectueeColumn.setSortable(true);table.addColumn(effectueeColumn,NLS.constants().formation_field_s_effectuee());
if (AccessManager.canCreateFormation()&&AccessManager.canEditFormation()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/formation/",true);
else returnnull;
if (AccessManager.canDeleteFormation()&&AccessManager.canEditFormation()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteFormation()&&AccessManager.canEditFormation()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<FormationProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().formation_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(FormationProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getFormationRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedFormationentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListFormationEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportFormation()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.FORM_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=formation_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getDateDebut()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateDebut());
if (object!=null){
if (object.getLibelle()==null)value="";
else value=renderer.getLocalizedText(object.getLibelle());
if (locale.equals("fr"))return"libelle.francais";
if (locale.equals("en"))return"libelle.english";return"libelle";
if (object!=null){
if (object.getLieu()==null)value="";
else value=renderer.getLocalizedText(object.getLieu());
if (locale.equals("fr"))return"lieu.francais";
if (locale.equals("en"))return"lieu.english";return"lieu";
if (object!=null){
if (object.getEffectuee()==null)value="";
else value=BooleanUtil.getBooleanDisplayValue(object.getEffectuee());
if (handler==null)initHandler();returnhandler.getById(id);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Patiententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedcasIndexList<CasIndex>patdb=entity.getCasIndex();
if (patdb!=null){for(CasIndexpatdbItem:patdb){handlerHelper.prepare(patdbItem);
if (patea!=null){for(ExamenBiologiquepateaItem:patea){handlerHelper.prepare(pateaItem);
if (pateb!=null){for(ExamenSerologiepatebItem:pateb){handlerHelper.prepare(patebItem);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Patient>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Patient>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Patient>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Patiententity:entities)delete(entity);
if (identif iant!=null&&!identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("identif iant");criteria.setValue(identif iant);junction.add(criteria);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (dateNaissanceBefore!=null&&!dateNaissanceBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceBefore);junction.add(criteria);
if (dateNaissanceAfter!=null&&!dateNaissanceAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateNaissance");criteria.setValue(dateNaissanceAfter);junction.add(criteria);
if (age!=null&&!age.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("age");criteria.setValue(age);junction.add(criteria);
if (sexe!=null&&!sexe.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("sexe");criteria.setValue(sexe);junction.add(criteria);
if (profession!=null&&!profession.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("profession");criteria.setValue(profession);junction.add(criteria);
if (telephoneUn!=null&&!telephoneUn.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("telephoneUn");criteria.setValue(telephoneUn);junction.add(criteria);
if (telephoneDeux!=null&&!telephoneDeux.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("telephoneDeux");criteria.setValue(telephoneDeux);junction.add(criteria);
if (pacNom!=null&&!pacNom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("pacNom");criteria.setValue(pacNom);junction.add(criteria);
if (pacTelephoneUn!=null&&!pacTelephoneUn.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("pacTelephoneUn");criteria.setValue(pacTelephoneUn);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailCommandeMedicamentDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeMedicament(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailCommandeMedicamentReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailCommandeMedicament(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeMedicament(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedDetailCommandeMedicamentReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listDetailCommandeMedicament(start,numRows,"modif ied",false,filterCriteria);
else result=request.getDetailCommandeMedicamentEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeMedicament(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailCommandeMedicamentReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailCommandeMedicament(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailCommandeMedicament(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedDetailCommandeMedicamentReverse(start,numRows,"modif ied",false,property);
else result=request.listDetailCommandeMedicament(start,numRows,"modif ied",false);
if (isFiltered){result.with("medicament");
else {result.with("medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailCommandeMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listDetailCommandeMedicament(start,numRows,property,asc,filterCriteria);
else result=request.getDetailCommandeMedicamentEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailCommandeMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listDetailCommandeMedicament(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeMedicament(property,searchCriterions);
else returnrequest.countNonAffectedDetailCommandeMedicamentReverse(property,searchCriterions);
else returnrequest.countDetailCommandeMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeMedicament(property,filterCriteria);
else returnrequest.countNonAffectedDetailCommandeMedicamentReverse(property,filterCriteria);
else returnrequest.countDetailCommandeMedicament(filterCriteria);
else returnrequest.countNonAffectedDetailCommandeMedicament("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeMedicament(property,searchCriterions);
else returnrequest.countNonAffectedDetailCommandeMedicamentReverse(property,searchCriterions);
else returnrequest.countDetailCommandeMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailCommandeMedicament(property);
else returnrequest.countNonAffectedDetailCommandeMedicamentReverse(property);
else returnrequest.countDetailCommandeMedicament();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailCommandeMedicamentRequestrequest=(DetailCommandeMedicamentRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldQuantiteRequisetry{Integer.valueOf(text);BasicCriteriaProxyquantiteRequiseCrit=request.create(BasicCriteriaProxy.class);quantiteRequiseCrit.setField("quantiteRequise");quantiteRequiseCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);quantiteRequiseCrit.setValue(text);buffer.append("("+NLS.constants().detailCommandeMedicament_field_quantiteRequise()+":"+text+")"+SYMBOL_OR+"");criterionList.add(quantiteRequiseCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(OutBoxentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<OutBox>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<OutBox>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<OutBox>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(OutBoxentity:entities)delete(entity);
if (message!=null&&!message.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("message");criteria.setValue(message);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (dateNaissanceBeforeBox.getValue()!=null){FilterCriteriadateNaissanceBeforeCrit=newFilterCriteria();dateNaissanceBeforeCrit.setField("dateNaissance");dateNaissanceBeforeCrit.setFieldDisplayName(NLS.constants().utilisateur_field_dateNaissance()+BaseNLS.constants().search_operator_inferior());dateNaissanceBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateNaissanceBeforeCrit.setValue(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));dateNaissanceBeforeCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceBeforeBox.getValue()));criteria.add(dateNaissanceBeforeCrit);
if (dateNaissanceAfterBox.getValue()!=null){FilterCriteriadateNaissanceAfterCrit=newFilterCriteria();dateNaissanceAfterCrit.setField("dateNaissance");dateNaissanceAfterCrit.setFieldDisplayName(NLS.constants().utilisateur_field_dateNaissance()+BaseNLS.constants().search_operator_superior());dateNaissanceAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateNaissanceAfterCrit.setValue(DateUtil.getDate(dateNaissanceAfterBox.getValue()));dateNaissanceAfterCrit.setValueDisplayName(DateUtil.getDate(dateNaissanceAfterBox.getValue()));criteria.add(dateNaissanceAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadUtilisateurIdentif ication())nomFilterBox.setVisible(false);
if (!AccessManager.canReadUtilisateurIdentif ication())professionFilterBox.setVisible(false);
if (!AccessManager.canReadUtilisateurIdentif ication()){dateNaissanceBeforeFilterBox.setVisible(false);dateNaissanceAfterFilterBox.setVisible(false);
if (!AccessManager.isAdmin())loginFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getMedicaments()!=null){StringBuilderbuilder=newStringBuilder();for(DetailCommandeMedicamenti:entity.getMedicaments()){builder.append(i.getId()).append(";");
if (entity.getIntrants()!=null){StringBuilderbuilder=newStringBuilder();for(DetailCommandeIntranti:entity.getIntrants()){builder.append(i.getId()).append(";");
if (parent!=null){editor=newMedicamentEditor(factory,true);this.initField=initField;
else editor=newMedicamentEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().medicament_create_title());createDriver();createNewMedicament();this.setContent(editor);
if (parent!=null){editor=newMedicamentEditor(factory,true);this.initField=initField;
else editor=newMedicamentEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchMedicament(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditMedicament())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Medicamentformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewMedicamentEvent(current.getId(),closeEvent));
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(EntreeLotentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<EntreeLot>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<EntreeLot>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<EntreeLot>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(EntreeLotentity:entities)delete(entity);
if (lot_numero!=null&&!lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.numero");criteria.setValue(lot_numero);junction.add(criteria);
if (lot_intrant_identif iant!=null&&!lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.intrant.identif iant");criteria.setValue(lot_intrant_identif iant);junction.add(criteria);
if (lot_medicament_designation!=null&&!lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.medicament.designation");criteria.setValue(lot_medicament_designation);junction.add(criteria);
if (lot_quantite!=null&&!lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("lot.quantite");criteria.setValue(lot_quantite);junction.add(criteria);
if (quantite!=null&&!quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantite");criteria.setValue(quantite);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (EpicamIconConstants.CASINDEX_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CASINDEX_ICON);CasIndexDataProviderprovider=newCasIndexDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteCasIndex()&&AccessManager.canEditCasIndex())listComposite=newCasIndexDynaTable(requestFactory,provider,true);
else listComposite=newCasIndexDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDTDepart()!=null){bck.setCDTDepart(entity.getCDTDepart().getId());
if (entity.getPatient()!=null){bck.setPatient(entity.getPatient().getId());
if (entity.getRegionArrivee()!=null){bck.setRegionArrivee(entity.getRegionArrivee().getId());
if (entity.getDistrictSanteArrivee()!=null){bck.setDistrictSanteArrivee(entity.getDistrictSanteArrivee().getId());
if (entity.getCDTArrivee()!=null){bck.setCDTArrivee(entity.getCDTArrivee().getId());
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicNotif icationFormPanel(AdminRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField,BooleanreturnToList,FormTypeUtilformTypeUtil,ImogBeanRendererrenderer){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();wrapperPanel.setIcon(AdminIconConstants.NOTif ICATION_ICON);
if (entityId!=null){
if (parent==null)editorWorkflow=newNotif icationEditorWorkflow(requestFactory,entityId,titleContainer,formTypeUtil,renderer);
else {editorWorkflow=newNotif icationEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField,formTypeUtil,renderer);
else {
if (parent==null){editorWorkflow=newNotif icationEditorWorkflow(requestFactory,titleContainer,formTypeUtil,renderer);
if (returnToList!=null&&returnToList)editorWorkflow.setCloseEvent(newListNotif icationEvent());
else editorWorkflow.setCloseEvent(newGoHomeEvent());
else {editorWorkflow=newNotif icationEditorWorkflow(requestFactory,titleContainer,parent,initField,formTypeUtil,renderer);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicNotif icationFormPanel(AdminRequestFactoryrequestFactory,StringentityId,FormTypeUtilformTypeUtil,ImogBeanRendererrenderer){this(requestFactory,entityId,null,null,null,formTypeUtil,renderer);
if anentityisbeingcreated*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicNotif icationFormPanel(AdminRequestFactoryrequestFactory,StringentityId,BooleanreturnToList,FormTypeUtilformTypeUtil,ImogBeanRendererrenderer){this(requestFactory,entityId,null,null,returnToList,formTypeUtil,renderer);
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getLaboratoireReference()!=null){bck.setLaboratoireReference(entity.getLaboratoireReference().getId());
if (entity.getCasTb()!=null){bck.setCasTb(entity.getCasTb().getId());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicImogActorDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){result=request.listAppliUser(start,numRows,"login",true,searchCriterions);
else {result=request.listAppliUser(start,numRows,"login",true,filterCriteria);
else result=request.getAppliUserEmptyList();
else {
if (searchCriterions!=null){result=request.listAppliUser(start,numRows,"login",true,searchCriterions);
else {result=request.listAppliUser(start,numRows,"login",true);
if (isFiltered){
else {
if (getSearchCriterions()==null)result=request.listAppliUser(start,numRows,property,asc);
else result=request.listAppliUser(start,numRows,property,asc,getSearchCriterions());returnresult;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){returnrequest.countAppliUser(searchCriterions);
else {returnrequest.countAppliUser(filterCriteria);
else {ImogJunctionProxyconJunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();BasicCriteriaProxycrit=request.create(BasicCriteriaProxy.class);crit.setField("id");crit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);crit.setValue("");criterionList.add(crit);conJunction.setCriterions(criterionList);returnrequest.countAppliUser(conJunction);
else {
if (searchCriterions!=null){returnrequest.countAppliUser(searchCriterions);
else {returnrequest.countAppliUser();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {ImogActorRequestrequest=(ImogActorRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldLoginBasicCriteriaProxyloginCrit=request.create(BasicCriteriaProxy.class);loginCrit.setField("login");loginCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);loginCrit.setValue(text);buffer.append("("+AdminNLS.constants().imogActor_field_login()+":"+text+")"+SYMBOL_OR+"");criterionList.add(loginCrit);disJunction.setCriterions(criterionList);fullTextSearch=true;//addFilterCriteria
if exists
if (isFiltered&&filterCriteria!=null){ImogJunctionProxyconJunctionFilt=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionListFilt=newArrayList<ImogCriterionProxy>();criterionListFilt.add(filterCriteria);criterionListFilt.add(disJunction);conJunctionFilt.setCriterions(criterionListFilt);setSearchCriterions(conJunctionFilt);
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getPersonnel()!=null){bck.setPersonnel(entity.getPersonnel().getId());
if (entity.getReception()!=null){bck.setReception(entity.getReception().getId());
if (entity.getCommande()!=null){bck.setCommande(entity.getCommande().getId());
if (entity.getDetailCommande()!=null){bck.setDetailCommande(entity.getDetailCommande().getId());
if (entity.getEntreeLot()!=null){bck.setEntreeLot(entity.getEntreeLot().getId());
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"lot.CDT.id"),personnel.getCDT().getId());
if (date==null){return"";
else {returndateTimeFormat.format(date);
if (dateText.length()>0){date=dateTimeFormat.parse(dateText);
if (reportError){dateBox.addStyleName(DATE_BOX_FORMAT_ERROR);
if therewasaparseerrorDateparse(DateBoxdateBox,Stringtext,booleanreportError);*if theformatdidanymodif icationstothedatebox'sstyling,reset*themnow.**@paramabandon*truewhenthecurrentformatisbeingreplacedbyanother*@paramdateBox*thedateboxvoidreset(DateBoxdateBox,booleanabandon);
if (enabled&&isDatePickerShowing()==false){updateDateFromTextBox();
if (enabled){showDatePicker();
if (enabled&&allowDPShow){updateDateFromTextBox();
if (enabled&&allowDPShow&&isDatePickerShowing()==false){showDatePicker();
if (enabled){
switch(event.getNativeKeyCode()){caseKeyCodes.KEY_ENTER:caseKeyCodes.KEY_TAB:updateDateFromTextBox();//DeliberatefallthroughcaseKeyCodes.KEY_ESCAPE:caseKeyCodes.KEY_UP:hideDatePicker();break;caseKeyCodes.KEY_DOWN:showDatePicker();break;
if (editor==null){editor=TakesValueEditor.of(this);
if thetextboxisempty,orcannotbe*interpreted.**@returnthecurrentdatevaluepublicDategetValue(){returnparseDate(true);
if datepickeriscurrentlyshowing,false
if not.publicbooleanisDatePickerShowing(){returnpopup.isShowing();
if thedateboxisenabled,false
if not.publicbooleanisEnabled(){returnbox.isEnabled();
if (this.format!=format){Datedate=getValue();//Thiscallletstheformatterdowhateverothercleanupis//requiredto//
switchformatters.//this.format.reset(this,true);//Nowupdatetheformatandshowthecurrentdateusingthenew//format.this.format=format;setValue(date);
if (current==null){current=newDate();
if (reportError){getFormat().reset(this,false);
if (date!=null){picker.setCurrentMonth(date);
if (updateText){format.reset(this,false);box.setText(getFormat().format(this,date));
if (fireEvents){DateChangeEvent.fireif NotEqualDates(this,oldDate,date);
if (fireNullValues||(parsedDate!=null)){setValue(picker.getValue(),parsedDate,true,false);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ExamenBiologiqueentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<ExamenBiologique>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<ExamenBiologique>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<ExamenBiologique>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(ExamenBiologiqueentity:entities)delete(entity);
if (patient_identif iant!=null&&!patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.identif iant");criteria.setValue(patient_identif iant);junction.add(criteria);
if (patient_nom!=null&&!patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.nom");criteria.setValue(patient_nom);junction.add(criteria);
if (dateBefore!=null&&!dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("date");criteria.setValue(dateBefore);junction.add(criteria);
if (dateAfter!=null&&!dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("date");criteria.setValue(dateAfter);junction.add(criteria);
if (poids!=null&&!poids.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.FLOAT_OPERATOR_EQUAL);criteria.setField("poids");criteria.setValue(poids);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamentRegimeEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();medicament.setEdited(isEdited);quantite.setEdited(isEdited);quantiteUnite.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())medicament.setVisible(false);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())quantite.setVisible(false);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())quantiteUnite.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())medicament.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())quantite.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())quantiteUnite.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().priseMedicamentRegime_field_quantite_min()),null,"quantite");//quantiteUniteisarequiredfield
if (quantiteUnite.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteUnite");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteUniteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (field.equals("quantiteUnite"))quantiteUniteFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (quantiteUniteFieldErrors.size()>0)quantiteUnite.showErrors(quantiteUniteFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if (uploader.getEntity()!=null){thisValue=uploader.getEntity();
if (editable){infoPanel.setVisible(false);editPanel.setVisible(true);//main.remove(infoPanel);//main.add(editPanel);
else {infoPanel.setVisible(true);editPanel.setVisible(false);//main.remove(editPanel);//main.add(infoPanel);
if (sound!=null&&!playing){sound.play();playing=true;playerStatus.setUrl(PLAYER_STOP);GWT.log("Startplayingthesound",null);return;
if (sound!=null&&playing){sound.stop();playing=false;playerStatus.setUrl(PLAYER_PLAY);GWT.log("Stopplayingthesound",null);return;
else playerStatus.setUrl(PLAYER_DISABLED);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailReceptionMedicamententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedentreeLotEntreeLotdet_rec_medad=entity.getEntreeLot();
if (det_rec_medad!=null){handlerHelper.prepare(det_rec_medad);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailReceptionMedicament>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailReceptionMedicament>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailReceptionMedicament>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailReceptionMedicamententity:entities)delete(entity);
if (commande_cDT_nom!=null&&!commande_cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("commande.cDT.nom");criteria.setValue(commande_cDT_nom);junction.add(criteria);
if (commande_dateBefore!=null&&!commande_dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("commande.date");criteria.setValue(commande_dateBefore);junction.add(criteria);
if (commande_dateAfter!=null&&!commande_dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("commande.date");criteria.setValue(commande_dateAfter);junction.add(criteria);
if (detailCommande_medicament_designation!=null&&!detailCommande_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("detailCommande.medicament.designation");criteria.setValue(detailCommande_medicament_designation);junction.add(criteria);
if (detailCommande_quantiteRequise!=null&&!detailCommande_quantiteRequise.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("detailCommande.quantiteRequise");criteria.setValue(detailCommande_quantiteRequise);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (criteria!=null&&criteria.size()>0){ImogJunctionProxyconJunctionFilt=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();for(Stringkey:criteria.keySet()){BasicCriteriaProxyfitlerCrit=request.create(BasicCriteriaProxy.class);fitlerCrit.setField(criteria.get(key));fitlerCrit.setOperation(CriteriaConstants.RELATIONFIELD_OPERATOR_EQUAL);fitlerCrit.setValue(key);criterionList.add(fitlerCrit);
if thedataproviderispermanentlyfiltered*@returntrue
if thedataproviderispermanentlyfilteredpublicbooleanisFiltered(){returnisFiltered;
if (newRequest)context=getEntityContext();
else newRequest=true;returncontext;
if (criteria==null||criteria.size()==0){setSearchCriterions(null);
else {RequestContextcontext=getContext();newRequest=false;ImogJunctionProxymain=context.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>junctionCriterions=newArrayList<ImogCriterionProxy>();for(FilterCriteriacrit:criteria){
if (crit.getValue()!=null&&!crit.getValue().isEmpty()){BasicCriteriaProxycritProxy=context.create(BasicCriteriaProxy.class);critProxy.setField(crit.getField());critProxy.setOperation(crit.getOperation());critProxy.setValue(crit.getValue());junctionCriterions.add(critProxy);appendFilterMessage(buffer,crit.getFieldDisplayName(),crit.getValueDisplayName());
if (junctionCriterions.size()>0){main.setCriterions(junctionCriterions);//addFilterCriteria
if exists
if (isFiltered&&filterCriteria!=null){ImogJunctionProxyconJunctionFilt=context.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionListFilt=newArrayList<ImogCriterionProxy>();criterionListFilt.add(filterCriteria);criterionListFilt.add(main);conJunctionFilt.setCriterions(criterionListFilt);setSearchCriterions(conJunctionFilt);
else setSearchCriterions(main);isFiltering=true;
else {setSearchCriterions(null);
if (isFiltering)returnbuffer.toString();
else returnnull;
if (filterCrits!=null&&filterCrits.size()>0){//filterhastobecreatedinthesamecontext->clonedImogJunctionProxyfilterConj=null;
if (filterinstanceofImogConjunctionProxy)filterConj=request.create(ImogConjunctionProxy.class);
else filterConj=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>filterConjList=newArrayList<ImogCriterionProxy>();for(ImogCriterionProxyfilterCrit:filterCrits){
if (filterCritinstanceofBasicCriteriaProxy){BasicCriteriaProxybasic=(BasicCriteriaProxy)filterCrit;BasicCriteriaProxybasicCrit=request.create(BasicCriteriaProxy.class);basicCrit.setField(basic.getField());basicCrit.setOperation(basic.getOperation());basicCrit.setValue(basic.getValue());filterConjList.add(basicCrit);
if (isDeleted)deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);
else deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());criteria.add(deletedEntityCrit);returncriteria;
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"CDT.id"),personnel.getCDT().getId());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailReceptionMedicamentDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionMedicament(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailReceptionMedicamentReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailReceptionMedicament(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionMedicament(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedDetailReceptionMedicamentReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listDetailReceptionMedicament(start,numRows,"modif ied",false,filterCriteria);
else result=request.getDetailReceptionMedicamentEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionMedicament(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailReceptionMedicamentReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailReceptionMedicament(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionMedicament(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedDetailReceptionMedicamentReverse(start,numRows,"modif ied",false,property);
else result=request.listDetailReceptionMedicament(start,numRows,"modif ied",false);
if (isFiltered){result.with("commande");result.with("commande.CDT");result.with("detailCommande");result.with("detailCommande.medicament");
else {result.with("detailCommande");result.with("detailCommande.medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailReceptionMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listDetailReceptionMedicament(start,numRows,property,asc,filterCriteria);
else result=request.getDetailReceptionMedicamentEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailReceptionMedicament(start,numRows,property,asc,searchCriterions);
else result=request.listDetailReceptionMedicament(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionMedicament(property,searchCriterions);
else returnrequest.countNonAffectedDetailReceptionMedicamentReverse(property,searchCriterions);
else returnrequest.countDetailReceptionMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionMedicament(property,filterCriteria);
else returnrequest.countNonAffectedDetailReceptionMedicamentReverse(property,filterCriteria);
else returnrequest.countDetailReceptionMedicament(filterCriteria);
else returnrequest.countNonAffectedDetailReceptionMedicament("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionMedicament(property,searchCriterions);
else returnrequest.countNonAffectedDetailReceptionMedicamentReverse(property,searchCriterions);
else returnrequest.countDetailReceptionMedicament(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionMedicament(property);
else returnrequest.countNonAffectedDetailReceptionMedicamentReverse(property);
else returnrequest.countDetailReceptionMedicament();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailReceptionMedicamentRequestrequest=(DetailReceptionMedicamentRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycommande_cDT_nomCrit=request.create(BasicCriteriaProxy.class);commande_cDT_nomCrit.setField("commande.cDT.nom");commande_cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);commande_cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_cDT_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxycommande_dateCrit=request.create(BasicCriteriaProxy.class);commande_dateCrit.setField("commande.date");commande_dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);commande_dateCrit.setValue(text);buffer.append("("+NLS.constants().commande_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listDepartPersonnel();
else handler.listDepartPersonnel(searchText);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setFieldDisplayName(NLS.constants().qualif ication_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadQualif icationDescription())codeFilterBox.setVisible(false);
if (!AccessManager.canReadQualif icationDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setFieldDisplayName(NLS.constants().region_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadRegionDescription())codeFilterBox.setVisible(false);
if (!AccessManager.canReadRegionDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);listComposite=newFieldGroupDynaTable(requestFactory,provider,false,renderer);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamenteuseEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateEffective.setEdited(isEdited);prise.setEdited(isEdited);cotrimoxazole.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamenteuseDescription())dateEffective.setVisible(false);
if (!AccessManager.canReadPriseMedicamenteuseDescription())prise.setVisible(false);
if (!AccessManager.canReadPriseMedicamenteuseDescription())cotrimoxazole.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())dateEffective.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())prise.setVisible(false);
if (!AccessManager.canEditPriseMedicamenteuseDescription())cotrimoxazole.setVisible(false);
if (dateEffective.getValueWithoutParseException()==null&&dateEffective.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateEffective");//priseisarequiredfield
if (prise.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"prise");//cotrimoxazoleisarequiredfield
if (cotrimoxazole.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cotrimoxazole");
if (errors!=null&&errors.size()>0){List<EditorError>dateEffectiveFieldErrors=newArrayList<EditorError>();List<EditorError>priseFieldErrors=newArrayList<EditorError>();List<EditorError>cotrimoxazoleFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("dateEffective"))dateEffectiveFieldErrors.add(error);
if (field.equals("prise"))priseFieldErrors.add(error);
if (field.equals("cotrimoxazole"))cotrimoxazoleFieldErrors.add(error);
if (dateEffectiveFieldErrors.size()>0)dateEffective.showErrors(dateEffectiveFieldErrors);
if (priseFieldErrors.size()>0)prise.showErrors(priseFieldErrors);
if (cotrimoxazoleFieldErrors.size()>0)cotrimoxazole.showErrors(cotrimoxazoleFieldErrors);
if (searchText==null)handler.listLaboratoireReference();
else handler.listLaboratoireReference(searchText);
if (initField==null)handler.saveRendezVous(value);
else handler.saveRendezVous(value,initField);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadMedicamentDescription())medicament_designationFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (synchronizer.authenticate(url,login,password)!=Synchronizer.AUTH_SUCCESS){return;
if (synchronizer.synchronize(url,login,password,terminal,null)!=Synchronizer.SYNC_SUCCESS){return;
if (params==null){params=newSyncParams();
if (params==null||params.getUrl()==null||params.getLogin()==null||params.getPassword()==null||params.getTerminal()==null){LOG.info("Synchronizationparametersnotintialized");return;
if (scheduledFuture!=null){LOG.info("Cancelscheduledsynchronization");scheduledFuture.cancel(false);scheduledFuture=null;
if (initField==null)handler.saveNotif ication(value);
else handler.saveNotif ication(value,initField);
if (parent!=null){editor=newFormationEditor(factory,true);this.initField=initField;
else editor=newFormationEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().formation_create_title());createDriver();createNewFormation();this.setContent(editor);
if (parent!=null){editor=newFormationEditor(factory,true);this.initField=initField;
else editor=newFormationEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchFormation(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getLibelle()==null){LocalizedTextProxynewLibelle=request.create(LocalizedTextProxy.class);current.setLibelle(newLibelle);
if (current.getLieu()==null){LocalizedTextProxynewLieu=request.create(LocalizedTextProxy.class);current.setLieu(newLieu);
if (current.getObjectif s()==null){LocalizedTextProxynewObjectif s=request.create(LocalizedTextProxy.class);current.setObjectif s(newObjectif s);
if (AccessManager.canEditFormation())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("Formationformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewFormationEvent(current.getId(),closeEvent));
if therelationfieldbuttonsshallbehiddenpublicCasIndexEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get());
else patientLie=newImogSingleRelationBox<PatientProxy>(false,patientLieDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patientLie.setEdited(isEdited);typeRelation.setEdited(isEdited);
if (!AccessManager.canReadCasIndexDescription())patientLie.setVisible(false);
if (!AccessManager.canReadCasIndexDescription())typeRelation.setVisible(false);
if (!AccessManager.canEditCasIndexDescription())patientLie.setVisible(false);
if (!AccessManager.canEditCasIndexDescription())typeRelation.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatientLie(PatientProxyvalue,booleanisLocked){patientLie.setLocked(isLocked);patientLie.setValue(value);
if (patientLie.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patientLie.getValue().getId(),relationPopup,"patientLie");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patientLie"))patientLie.setValue(value,true);
if (patientLie.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patientLie");//typeRelationisarequiredfield
if (typeRelation.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"typeRelation");
if (errors!=null&&errors.size()>0){List<EditorError>patientLieFieldErrors=newArrayList<EditorError>();List<EditorError>typeRelationFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("patientLie"))patientLieFieldErrors.add(error);
if (field.equals("typeRelation"))typeRelationFieldErrors.add(error);
if (patientLieFieldErrors.size()>0)patientLie.showErrors(patientLieFieldErrors);
if (typeRelationFieldErrors.size()>0)typeRelation.showErrors(typeRelationFieldErrors);
if (EpicamIconConstants.EXAMENBIOLOGIQUE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENBIOLOGIQUE_ICON);ExamenBiologiqueDataProviderprovider=newExamenBiologiqueDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteExamenBiologique()&&AccessManager.canEditExamenBiologique())listComposite=newExamenBiologiqueDynaTable(requestFactory,provider,true);
else listComposite=newExamenBiologiqueDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (proxy.getCoordonnees()!=null){Pointpoint=newPoint(proxy.getCoordonnees().getLongitude(),proxy.getCoordonnees().getLatitude());Stylestyle=newStyle();style.setFontSize("8");style.setLabel(proxy.getNom());style.setFontWeight("bold");style.setFontFamily("arial");style.setFill(true);style.setFillColor("#00B69E");VectorFeaturecdtFeature=newVectorFeature(point);cdtFeature.setStyle(style);cdtLayer.addFeature(cdtFeature);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Inventaireentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelateddetailsList<DetailInventaire>invae=entity.getDetails();
if (invae!=null){for(DetailInventaireinvaeItem:invae){handlerHelper.prepare(invaeItem);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Inventaire>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Inventaire>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Inventaire>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Inventaireentity:entities)delete(entity);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (dateBefore!=null&&!dateBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("date");criteria.setValue(dateBefore);junction.add(criteria);
if (dateAfter!=null&&!dateAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("date");criteria.setValue(dateAfter);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLieuDitDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (parent!=null){editor=newDetailCommandeIntrantEditor(factory,true);this.initField=initField;
else editor=newDetailCommandeIntrantEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailCommandeIntrant_create_title());createDriver();createNewDetailCommandeIntrant();this.setContent(editor);
if (parent!=null){editor=newDetailCommandeIntrantEditor(factory,true);this.initField=initField;
else editor=newDetailCommandeIntrantEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailCommandeIntrant(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditDetailCommandeIntrant())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailCommandeIntrantformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailCommandeIntrantEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editor.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){editor.setIntrant(value,isLocked);
if (actor!=null){//DatecDate=actor.getLastLoginDate();//if (cDate==null)//cDate=newDate();//StringlastLoginDate=TextFormatUtil.getDateTime(cDate);Stringmetadata=BaseNLS.messages().form_metadata_current_user(actor.getLogin());actorInfo.setHTML(metadata);
if (locale!=null&&!locale.equals(""))selectLocale(locale);locBox.addChangeHandler(newLocaleHandler());
if (value.equals(loc)){locBox.setSelectedIndex(i);return;
if (searchText==null)handler.listDistrictSante();
else handler.listDistrictSante(searchText);
if (isDefaultBox.getValue()==null)isDefaultCrit.setValue(null);
else isDefaultCrit.setValue(String.valueOf(isDefaultBox.getValue()));isDefaultCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(isDefaultBox.getValue()));criteria.add(isDefaultCrit);FilterCriteriafieldPositionCrit=newFilterCriteria();fieldPositionCrit.setField("fieldPosition");fieldPositionCrit.setFieldDisplayName(DynFieldsNLS.constants().dynamicField_Template_field_fieldPosition());fieldPositionCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (fieldPositionBox.getValue()==null)fieldPositionCrit.setValue(null);
else fieldPositionCrit.setValue(String.valueOf(fieldPositionBox.getValue()));fieldPositionCrit.setValueDisplayName(String.valueOf(fieldPositionBox.getValue()));criteria.add(fieldPositionCrit);FilterCriteriaallUsersCrit=newFilterCriteria();allUsersCrit.setField("allUsers");allUsersCrit.setFieldDisplayName(DynFieldsNLS.constants().dynamicField_Template_field_allUsers());allUsersCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);
if (allUsersBox.getValue()==null)allUsersCrit.setValue(null);
else allUsersCrit.setValue(String.valueOf(allUsersBox.getValue()));allUsersCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(allUsersBox.getValue()));criteria.add(allUsersCrit);FilterCriteriaisActivatedCrit=newFilterCriteria();isActivatedCrit.setField("isActivated");isActivatedCrit.setFieldDisplayName(DynFieldsNLS.constants().dynamicField_Template_field_isActivated());isActivatedCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);
if (isActivatedBox.getValue()==null)isActivatedCrit.setValue(null);
else isActivatedCrit.setValue(String.valueOf(isActivatedBox.getValue()));isActivatedCrit.setValueDisplayName(BooleanUtil.getBooleanDisplayValue(isActivatedBox.getValue()));criteria.add(isActivatedCrit);returncriteria;
if (!ProfileUtil.isAdmin()){allUsersFilterBox.setVisible(false);isActivatedFilterBox.setVisible(false);
if (EpicamIconConstants.LIEUDIT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LIEUDIT_ICON);LieuDitDataProviderprovider=newLieuDitDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteLieuDit()&&AccessManager.canEditLieuDit())listComposite=newLieuDitDynaTable(requestFactory,provider,true);
else listComposite=newLieuDitDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (INSTANCE==null){INSTANCE=newImogIntParser();
if ("".equals(object.toString())){returnnull;
if (ProfileUtil.isAdmin()){Column<Notif icationProxy,String>formTypeColumn=newFormTypeColumn();formTypeColumn.setSortable(true);table.addColumn(formTypeColumn,AdminNLS.constants().notif ication_field_s_formType());Column<Notif icationProxy,String>nameColumn=newNameColumn();nameColumn.setSortable(true);table.addColumn(nameColumn,AdminNLS.constants().notif ication_field_s_name());Column<Notif icationProxy,String>methodColumn=newMethodColumn();methodColumn.setSortable(true);table.addColumn(methodColumn,AdminNLS.constants().notif ication_field_s_method());Column<Notif icationProxy,String>operationColumn=newOperationColumn();operationColumn.setSortable(true);table.addColumn(operationColumn,AdminNLS.constants().notif ication_field_s_operation());
if (ProfileUtil.isAdmin()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/notif ication/",true);
else returnnull;
if (ProfileUtil.isAdmin()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (ProfileUtil.isAdmin()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<Notif icationProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){AdminRendererrenderer=AdminRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+AdminNLS.constants().notif ication_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(Notif icationProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getNotif icationRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedNotif icationentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListNotif icationEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExport())//Commandcommand=newCommand(){//publicvoidexecute(){////History.newItem("xls/company");//
if (object.getName()==null)value="";
else value=object.getName();returnvalue;
if (object.getFormType()==null)value="";
else value=renderer.getEnumDisplayValue(Notif icationProxy.class,"formType",object.getFormType());returnvalue;
if (object.getMethod()==null)value="";
else value=renderer.getEnumDisplayValue(Notif icationProxy.class,"method",object.getMethod());returnvalue;
if (object.getOperation()==null)value="";
else value=renderer.getEnumDisplayValue(Notif icationProxy.class,"operation",object.getOperation());returnvalue;
if (initField==null)handler.saveExamenSerologie(value);
else handler.saveExamenSerologie(value,initField);
if (AccessManager.canReadSmsPredefiniDescription()){Column<SmsPredefiniProxy,String>typeColumn=newTypeColumn();typeColumn.setSortable(true);table.addColumn(typeColumn,NLS.constants().smsPredefini_field_s_type());
if (AccessManager.canReadSmsPredefiniDescription()){Column<SmsPredefiniProxy,String>objetColumn=newObjetColumn();objetColumn.setSortable(true);table.addColumn(objetColumn,NLS.constants().smsPredefini_field_s_objet());
if (AccessManager.canReadSmsPredefiniDescription()){Column<SmsPredefiniProxy,String>messageColumn=newMessageColumn();messageColumn.setSortable(true);table.addColumn(messageColumn,NLS.constants().smsPredefini_field_s_message());
if (AccessManager.canCreateSmsPredefini()&&AccessManager.canEditSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/smspredefini/",true);
else returnnull;
if (AccessManager.canDeleteSmsPredefini()&&AccessManager.canEditSmsPredefini()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteSmsPredefini()&&AccessManager.canEditSmsPredefini()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<SmsPredefiniProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().smsPredefini_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(SmsPredefiniProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getSmsPredefiniRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedSmsPredefinientrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListSmsPredefiniEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.SMS_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=smsPredefini_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getType()==null)value="";
else value=renderer.getEnumDisplayValue(SmsPredefiniProxy.class,"type",object.getType());
if (object!=null){
if (object.getObjet()==null)value="";
else value=renderer.getLocalizedText(object.getObjet());
if (locale.equals("fr"))return"objet.francais";
if (locale.equals("en"))return"objet.english";return"objet";
if (object!=null){
if (object.getMessage()==null)value="";
else value=renderer.getLocalizedText(object.getMessage());
if (locale.equals("fr"))return"message.francais";
if (locale.equals("en"))return"message.english";return"message";
if (initField==null)handler.saveRegime(value);
else handler.saveRegime(value,initField);
if (parent==null){LOG.info("ContextRefreshEvent:RootContext");return;
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getLot()!=null){bck.setLot(entity.getLot().getId());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(EntityProfileentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<EntityProfile>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<EntityProfile>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<EntityProfile>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(EntityProfileentity:entities)delete(entity);
if (profile_name!=null&&!profile_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("profile.name");criteria.setValue(profile_name);junction.add(criteria);
if (entity_name!=null&&!entity_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("entity.name");criteria.setValue(entity_name);junction.add(criteria);
if (directAccess!=null&&!directAccess.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("directAccess");criteria.setValue(directAccess);junction.add(criteria);
if (create!=null&&!create.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("create");criteria.setValue(create);junction.add(criteria);
if (delete!=null&&!delete.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("delete");criteria.setValue(delete);junction.add(criteria);
if (export!=null&&!export.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("export");criteria.setValue(export);junction.add(criteria);
if (parent!=null){editor=newDepartPersonnelEditor(factory,true);this.initField=initField;
else editor=newDepartPersonnelEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().departPersonnel_create_title());createDriver();createNewDepartPersonnel();this.setContent(editor);
if (parent!=null){editor=newDepartPersonnelEditor(factory,true);this.initField=initField;
else editor=newDepartPersonnelEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDepartPersonnel(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditDepartPersonnel())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DepartPersonnelformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDepartPersonnelEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editor.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){editor.setPersonnel(value,isLocked);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(LaboratoireReferenceentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<LaboratoireReference>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<LaboratoireReference>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<LaboratoireReference>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(LaboratoireReferenceentity:entities)delete(entity);
if (nom_francais!=null&&!nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.francais");criteria.setValue(nom_francais);junction.add(criteria);
if (nom_english!=null&&!nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.english");criteria.setValue(nom_english);junction.add(criteria);
if (nature!=null&&!nature.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nature");criteria.setValue(nature);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (parent!=null){editor=newDetailReceptionMedicamentEditor(factory,true);this.initField=initField;
else editor=newDetailReceptionMedicamentEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailReceptionMedicament_create_title());createDriver();createNewDetailReceptionMedicament();this.setContent(editor);
if (parent!=null){editor=newDetailReceptionMedicamentEditor(factory,true);this.initField=initField;
else editor=newDetailReceptionMedicamentEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailReceptionMedicament(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (entreeLot!=null){
if (AccessManager.canEditDetailReceptionMedicament())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailReceptionMedicamentformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailReceptionMedicamentEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){editor.setReception(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editor.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeMedicamentProxyvalue,booleanisLocked){editor.setDetailCommande(value,isLocked);
if (AccessManager.canReadExamenBiologiqueDescription()){Column<ExamenBiologiqueProxy,String>patientColumn=newPatientColumn();patientColumn.setSortable(true);table.addColumn(patientColumn,NLS.constants().examenBiologique_field_s_patient());
if (AccessManager.canReadExamenBiologiqueDescription()){Column<ExamenBiologiqueProxy,String>dateColumn=newDateColumn();dateColumn.setSortable(true);table.addColumn(dateColumn,NLS.constants().examenBiologique_field_s_date());
if (AccessManager.canReadExamenBiologiqueDescription()){Column<ExamenBiologiqueProxy,String>poidsColumn=newPoidsColumn();poidsColumn.setSortable(true);table.addColumn(poidsColumn,NLS.constants().examenBiologique_field_s_poids());
if (AccessManager.canCreateExamenBiologique()&&AccessManager.canEditExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/examenbiologique/",true);
else returnnull;
if (AccessManager.canDeleteExamenBiologique()&&AccessManager.canEditExamenBiologique()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteExamenBiologique()&&AccessManager.canEditExamenBiologique()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ExamenBiologiqueProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().examenBiologique_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ExamenBiologiqueProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getExamenBiologiqueRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedExamenBiologiqueentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListExamenBiologiqueEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.EXAM_BIO_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=examenBiologique_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPatient()==null)value="";
else value=renderer.getDisplayValue(object.getPatient());
if (object!=null){
if (object.getDate()==null)value="";
else value=DateUtil.getFormatedDate(object.getDate());
if (object!=null){
if (object.getPoids()==null)value="";
else value=object.getPoids().toString();
if (isoCode!=null&&!isoCode.isEmpty()){
if (isoCode.length()==2)rb=ResourceBundle.getBundle(propertyFile+"_"+isoCode);
else 
if (isoCode.length()==5)rb=ResourceBundle.getBundle(propertyFile+"_"+isoCode.substring(0,2));
if (!rb.equals(bundle)){rb=bundle;
if (beaninstanceofPatient){returngetDisplayValue((Patient)bean);
if (beaninstanceofCasIndex){returngetDisplayValue((CasIndex)bean);
if (beaninstanceofCasTuberculose){returngetDisplayValue((CasTuberculose)bean);
if (beaninstanceofExamenSerologie){returngetDisplayValue((ExamenSerologie)bean);
if (beaninstanceofExamenBiologique){returngetDisplayValue((ExamenBiologique)bean);
if (beaninstanceofExamenMicroscopie){returngetDisplayValue((ExamenMicroscopie)bean);
if (beaninstanceofExamenATB){returngetDisplayValue((ExamenATB)bean);
if (beaninstanceofPriseMedicamenteuse){returngetDisplayValue((PriseMedicamenteuse)bean);
if (beaninstanceofRendezVous){returngetDisplayValue((RendezVous)bean);
if (beaninstanceofTransfertReference){returngetDisplayValue((TransfertReference)bean);
if (beaninstanceofLot){returngetDisplayValue((Lot)bean);
if (beaninstanceofHorsUsage){returngetDisplayValue((HorsUsage)bean);
if (beaninstanceofEntreeLot){returngetDisplayValue((EntreeLot)bean);
if (beaninstanceofSortieLot){returngetDisplayValue((SortieLot)bean);
if (beaninstanceofCommande){returngetDisplayValue((Commande)bean);
if (beaninstanceofDetailCommandeMedicament){returngetDisplayValue((DetailCommandeMedicament)bean);
if (beaninstanceofDetailCommandeIntrant){returngetDisplayValue((DetailCommandeIntrant)bean);
if (beaninstanceofReception){returngetDisplayValue((Reception)bean);
if (beaninstanceofDetailReceptionMedicament){returngetDisplayValue((DetailReceptionMedicament)bean);
if (beaninstanceofDetailReceptionIntrant){returngetDisplayValue((DetailReceptionIntrant)bean);
if (beaninstanceofRavitaillement){returngetDisplayValue((Ravitaillement)bean);
if (beaninstanceofDetailRavitaillement){returngetDisplayValue((DetailRavitaillement)bean);
if (beaninstanceofInventaire){returngetDisplayValue((Inventaire)bean);
if (beaninstanceofDetailInventaire){returngetDisplayValue((DetailInventaire)bean);
if (beaninstanceofPersonnel){returngetDisplayValue((Personnel)bean);
if (beaninstanceofDepartPersonnel){returngetDisplayValue((DepartPersonnel)bean);
if (beaninstanceofArriveePersonnel){returngetDisplayValue((ArriveePersonnel)bean);
if (beaninstanceofRegion){returngetDisplayValue((Region)bean);
if (beaninstanceofDistrictSante){returngetDisplayValue((DistrictSante)bean);
if (beaninstanceofCentreDiagTrait){returngetDisplayValue((CentreDiagTrait)bean);
if (beaninstanceofLaboratoireReference){returngetDisplayValue((LaboratoireReference)bean);
if (beaninstanceofLieuDit){returngetDisplayValue((LieuDit)bean);
if (beaninstanceofRegime){returngetDisplayValue((Regime)bean);
if (beaninstanceofPriseMedicamentRegime){returngetDisplayValue((PriseMedicamentRegime)bean);
if (beaninstanceofMedicament){returngetDisplayValue((Medicament)bean);
if (beaninstanceofIntrant){returngetDisplayValue((Intrant)bean);
if (beaninstanceofFormation){returngetDisplayValue((Formation)bean);
if (beaninstanceofCandidatureFormation){returngetDisplayValue((CandidatureFormation)bean);
if (beaninstanceofQualif ication){returngetDisplayValue((Qualif ication)bean);
if (beaninstanceofTutoriel){returngetDisplayValue((Tutoriel)bean);
if (beaninstanceofSmsPredefini){returngetDisplayValue((SmsPredefini)bean);
if (beaninstanceofOutBox){returngetDisplayValue((OutBox)bean);
if (beaninstanceofUtilisateur){returngetDisplayValue((Utilisateur)bean);
if (bean.getIdentif iant()!=null){value=value+bean.getIdentif iant()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";
if (bean.getTypeRelation()!=null){value=value+bean.getTypeRelation()+"";
if (bean.getPatientLie()!=null)value=value+getDisplayValue(bean.getPatientLie())+"";returnvalue.trim();
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";returnvalue.trim();
if (bean.getDateTest()!=null)value=value+DateUtil.getFormatedDate(bean.getDateTest())+"";Stringnature=bean.getNature();
if (nature!=null){
if (nature.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_VIH))value=value+rb.getString("examenSerologie_nature_vIH_option")+"";
else 
if (nature.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_CD4))value=value+rb.getString("examenSerologie_nature_cD4_option")+"";
if (bean.getResultatCD4()!=null)value=value+bean.getResultatCD4()+"";StringresultatVIH=bean.getResultatVIH();
if (resultatVIH!=null){
if (resultatVIH.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_POSITif ))value=value+rb.getString("examenSerologie_resultatVIH_positif _option")+"";
else 
if (resultatVIH.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_NEGATif ))value=value+rb.getString("examenSerologie_resultatVIH_negatif _option")+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";
if (bean.getPoids()!=null)value=value+bean.getPoids()+"";returnvalue.trim();
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";Stringresultat=bean.getResultat();
if (resultat!=null){
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_NEGATif ))value=value+rb.getString("examenMicroscopie_resultat_negatif _option")+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_RARE))value=value+rb.getString("examenMicroscopie_resultat_rare_option")+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_UNPLUS))value=value+rb.getString("examenMicroscopie_resultat_unPlus_option")+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_DEUXPLUS))value=value+rb.getString("examenMicroscopie_resultat_deuxPlus_option")+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_TROISPLUS))value=value+rb.getString("examenMicroscopie_resultat_troisPlus_option")+"";
if (bean.getDateExamen()!=null)value=value+DateUtil.getFormatedDate(bean.getDateExamen())+"";
if (bean.getResultat()!=null){value=value+bean.getResultat()+"";
if (bean.getDateEffective()!=null)value=value+DateUtil.getFormatedDate(bean.getDateEffective())+"";returnvalue.trim();
if (bean.getDateRendezVous()!=null)value=value+DateUtil.getFormatedDate(bean.getDateRendezVous())+"";value=value+getBooleanDisplayValue(bean.getHonore())+"";returnvalue.trim();
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";Stringnature=bean.getNature();
if (nature!=null){
if (nature.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_TRANSFERT))value=value+rb.getString("transfertReference_nature_transfert_option")+"";
else 
if (nature.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_REFERENCE))value=value+rb.getString("transfertReference_nature_reference_option")+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";returnvalue.trim();
if (bean.getNumero()!=null){value=value+bean.getNumero()+"";
if (bean.getIntrant()!=null)value=value+getDisplayValue(bean.getIntrant())+"";
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (type!=null){
if (type.equals(EpicamEnumConstants.HORSUSAGE_TYPE_PERIMEE))value=value+rb.getString("horsUsage_type_perimee_option")+"";
else 
if (type.equals(EpicamEnumConstants.HORSUSAGE_TYPE_CASSE))value=value+rb.getString("horsUsage_type_casse_option")+"";
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";returnvalue.trim();
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";
if (bean.getQuantiteRequise()!=null)value=value+bean.getQuantiteRequise()+"";returnvalue.trim();
if (bean.getIntrant()!=null)value=value+getDisplayValue(bean.getIntrant())+"";
if (bean.getQuantiteRequise()!=null)value=value+bean.getQuantiteRequise()+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDateReception()!=null)value=value+DateUtil.getFormatedDate(bean.getDateReception())+"";returnvalue.trim();
if (bean.getDetailCommande()!=null)value=value+getDisplayValue(bean.getDetailCommande())+"";returnvalue.trim();
if (bean.getDetailCommande()!=null)value=value+getDisplayValue(bean.getDetailCommande())+"";returnvalue.trim();
if (bean.getCDTDepart()!=null)value=value+getDisplayValue(bean.getCDTDepart())+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";
if (bean.getCDTArrivee()!=null)value=value+getDisplayValue(bean.getCDTArrivee())+"";
if (bean.getDateArrivee()!=null)value=value+DateUtil.getFormatedDate(bean.getDateArrivee())+"";returnvalue.trim();
if (bean.getRavitaillement()!=null)value=value+getDisplayValue(bean.getRavitaillement())+"";
if (bean.getSortieLot()!=null)value=value+getDisplayValue(bean.getSortieLot())+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";returnvalue.trim();
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantiteTheorique()!=null)value=value+bean.getQuantiteTheorique()+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";returnvalue.trim();
if (bean.getDateArrivee()!=null)value=value+DateUtil.getFormatedDate(bean.getDateArrivee())+"";
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";returnvalue.trim();
if (bean.getDesignation()!=null){value=value+bean.getDesignation()+"";
if (bean.getIdentif iant()!=null){value=value+bean.getIdentif iant()+"";
if (bean.getLibelle()!=null){value=value+getLocalizedText(bean.getLibelle())+"";
if (bean.getDateDebut()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDebut())+"";returnvalue.trim();
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";value=value+getBooleanDisplayValue(bean.getApprouveeRegion())+"";value=value+getBooleanDisplayValue(bean.getApprouveeGTC())+"";
if (bean.getDistrictSante()!=null)value=value+getDisplayValue(bean.getDistrictSante())+"";
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (type!=null){
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_SENSIBILISATION))value=value+rb.getString("smsPredefini_type_sensibilisation_option")+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_QUIZZ))value=value+rb.getString("smsPredefini_type_quizz_option")+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_RAPPELRDV))value=value+rb.getString("smsPredefini_type_rappelRDV_option")+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_MEDICALRECORD))value=value+rb.getString("smsPredefini_type_medicalRecord_option")+"";
if (bean.getObjet()!=null){value=value+getLocalizedText(bean.getObjet())+"";
if (bean.getMessage()!=null){value=value+bean.getMessage()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (fieldValue!=null&&!fieldValue.equals("")){
if (beanClass.equals(Patient.class)){returngetPatientEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CasIndex.class)){returngetCasIndexEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CasTuberculose.class)){returngetCasTuberculoseEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenSerologie.class)){returngetExamenSerologieEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenBiologique.class)){returngetExamenBiologiqueEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenMicroscopie.class)){returngetExamenMicroscopieEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenATB.class)){returngetExamenATBEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(PriseMedicamenteuse.class)){returngetPriseMedicamenteuseEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(RendezVous.class)){returngetRendezVousEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(TransfertReference.class)){returngetTransfertReferenceEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Lot.class)){returngetLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(HorsUsage.class)){returngetHorsUsageEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(EntreeLot.class)){returngetEntreeLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(SortieLot.class)){returngetSortieLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Commande.class)){returngetCommandeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailCommandeMedicament.class)){returngetDetailCommandeMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailCommandeIntrant.class)){returngetDetailCommandeIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Reception.class)){returngetReceptionEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailReceptionMedicament.class)){returngetDetailReceptionMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailReceptionIntrant.class)){returngetDetailReceptionIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Ravitaillement.class)){returngetRavitaillementEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailRavitaillement.class)){returngetDetailRavitaillementEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Inventaire.class)){returngetInventaireEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailInventaire.class)){returngetDetailInventaireEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Personnel.class)){returngetPersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DepartPersonnel.class)){returngetDepartPersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ArriveePersonnel.class)){returngetArriveePersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Region.class)){returngetRegionEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DistrictSante.class)){returngetDistrictSanteEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CentreDiagTrait.class)){returngetCentreDiagTraitEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(LaboratoireReference.class)){returngetLaboratoireReferenceEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(LieuDit.class)){returngetLieuDitEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Regime.class)){returngetRegimeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(PriseMedicamentRegime.class)){returngetPriseMedicamentRegimeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Medicament.class)){returngetMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Intrant.class)){returngetIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Formation.class)){returngetFormationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CandidatureFormation.class)){returngetCandidatureFormationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Qualif ication.class)){returngetQualif icationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Tutoriel.class)){returngetTutorielEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(SmsPredefini.class)){returngetSmsPredefiniEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(OutBox.class)){returngetOutBoxEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Utilisateur.class)){returngetUtilisateurEnumDisplayValue(fieldName,fieldValue);
if (fieldName.equals("sexe")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_SEXE_MASCULIN))value=rb.getString("patient_sexe_masculin_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_SEXE_FEMININ))value=rb.getString("patient_sexe_feminin_option");
if (fieldName.equals("nationalite")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_NATIONALITE_CAMEROUNAIS))value=rb.getString("patient_nationalite_camerounais_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_NATIONALITE_ETRANGER))value=rb.getString("patient_nationalite_etranger_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_DOMICILE))value=rb.getString("patient_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_BUREAU))value=rb.getString("patient_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_AUTRE))value=rb.getString("patient_libelle_autre_option");
if (fieldName.equals("pacLibelle")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_DOMICILE))value=rb.getString("patient_pacLibelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_BUREAU))value=rb.getString("patient_pacLibelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_AUTRE))value=rb.getString("patient_pacLibelle_autre_option");
if (fieldName.equals("typePatient")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_NOUVEAUCAS))value=rb.getString("casTuberculose_typePatient_nouveauCas_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_REPRISEAPRESABANDON))value=rb.getString("casTuberculose_typePatient_repriseApresAbandon_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_ECHEC))value=rb.getString("casTuberculose_typePatient_echec_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_RECHUTE))value=rb.getString("casTuberculose_typePatient_rechute_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_AUTRE))value=rb.getString("casTuberculose_typePatient_autre_option");
if (fieldName.equals("formeMaladie")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMPLUS))value=rb.getString("casTuberculose_formeMaladie_tPMPlus_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMMOINS))value=rb.getString("casTuberculose_formeMaladie_tPMMoins_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_EXTRA_PULMONAIRE))value=rb.getString("casTuberculose_formeMaladie_extra_Pulmonaire_option");
if (fieldName.equals("cotrimoxazole")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_NON))value=rb.getString("casTuberculose_cotrimoxazole_non_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_COTRIMOXAZOLE_960))value=rb.getString("casTuberculose_cotrimoxazole_cotrimoxazole_960_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_COTRIMOXAZOLE_480))value=rb.getString("casTuberculose_cotrimoxazole_cotrimoxazole_480_option");
if (fieldName.equals("devenirMalade")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_GUERRIS))value=rb.getString("casTuberculose_devenirMalade_guerris_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_TERMINE))value=rb.getString("casTuberculose_devenirMalade_termine_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ECHEC))value=rb.getString("casTuberculose_devenirMalade_echec_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_DECEDE))value=rb.getString("casTuberculose_devenirMalade_decede_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_PERDUDEVUE))value=rb.getString("casTuberculose_devenirMalade_perduDeVue_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETPRESCRIPTEUR))value=rb.getString("casTuberculose_devenirMalade_arretPrescripteur_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETEFFETSINDESI))value=rb.getString("casTuberculose_devenirMalade_arretEffetsIndesi_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETSURVENUTB))value=rb.getString("casTuberculose_devenirMalade_arretSurvenuTB_option");
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_VIH))value=rb.getString("examenSerologie_nature_vIH_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_CD4))value=rb.getString("examenSerologie_nature_cD4_option");
if (fieldName.equals("resultatVIH")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_POSITif ))value=rb.getString("examenSerologie_resultatVIH_positif _option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_NEGATif ))value=rb.getString("examenSerologie_resultatVIH_negatif _option");
if (fieldName.equals("raisonDepistage")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_DIAGNOSTIC))value=rb.getString("examenMicroscopie_raisonDepistage_diagnostic_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_SUIVI))value=rb.getString("examenMicroscopie_raisonDepistage_suivi_option");
if (fieldName.equals("resultat")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_NEGATif ))value=rb.getString("examenMicroscopie_resultat_negatif _option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_RARE))value=rb.getString("examenMicroscopie_resultat_rare_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_UNPLUS))value=rb.getString("examenMicroscopie_resultat_unPlus_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_DEUXPLUS))value=rb.getString("examenMicroscopie_resultat_deuxPlus_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_TROISPLUS))value=rb.getString("examenMicroscopie_resultat_troisPlus_option");
if (fieldName.equals("raisonDepistage")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_DIAGNOSTIC))value=rb.getString("examenATB_raisonDepistage_diagnostic_option");
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_SUIVI))value=rb.getString("examenATB_raisonDepistage_suivi_option");
if (fieldName.equals("prise")){
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_PRISESUPERVISEE))value=rb.getString("priseMedicamenteuse_prise_priseSupervisee_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_AUTOMEDICATION))value=rb.getString("priseMedicamenteuse_prise_automedication_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_NONVENU))value=rb.getString("priseMedicamenteuse_prise_nonVenu_option");
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_TRANSFERT))value=rb.getString("transfertReference_nature_transfert_option");
else 
if (fieldValue.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_REFERENCE))value=rb.getString("transfertReference_nature_reference_option");
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.LOT_TYPE_MEDICAMENT))value=rb.getString("lot_type_medicament_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LOT_TYPE_INTRANT))value=rb.getString("lot_type_intrant_option");
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.HORSUSAGE_TYPE_PERIMEE))value=rb.getString("horsUsage_type_perimee_option");
else 
if (fieldValue.equals(EpicamEnumConstants.HORSUSAGE_TYPE_CASSE))value=rb.getString("horsUsage_type_casse_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_DOMICILE))value=rb.getString("personnel_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_BUREAU))value=rb.getString("personnel_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_AUTRE))value=rb.getString("personnel_libelle_autre_option");
if (fieldName.equals("niveau")){
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_CENTRAL))value=rb.getString("personnel_niveau_central_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_REGION))value=rb.getString("personnel_niveau_region_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_DISTRICTSANTE))value=rb.getString("personnel_niveau_districtSante_option");
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_CDT))value=rb.getString("personnel_niveau_cDT_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_DOMICILE))value=rb.getString("region_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_BUREAU))value=rb.getString("region_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_AUTRE))value=rb.getString("region_libelle_autre_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_DOMICILE))value=rb.getString("districtSante_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_BUREAU))value=rb.getString("districtSante_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_AUTRE))value=rb.getString("districtSante_libelle_autre_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_DOMICILE))value=rb.getString("centreDiagTrait_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_BUREAU))value=rb.getString("centreDiagTrait_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_AUTRE))value=rb.getString("centreDiagTrait_libelle_autre_option");
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_NATIONAL))value=rb.getString("laboratoireReference_nature_national_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_REGIONAL))value=rb.getString("laboratoireReference_nature_regional_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_DOMICILE))value=rb.getString("laboratoireReference_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_BUREAU))value=rb.getString("laboratoireReference_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_AUTRE))value=rb.getString("laboratoireReference_libelle_autre_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_DOMICILE))value=rb.getString("lieuDit_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_BUREAU))value=rb.getString("lieuDit_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_AUTRE))value=rb.getString("lieuDit_libelle_autre_option");
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_PHASEINITIALE))value=rb.getString("regime_type_phaseInitiale_option");
else 
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_PHASECONTINUATION))value=rb.getString("regime_type_phaseContinuation_option");
else 
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_INDEPENDANT))value=rb.getString("regime_type_independant_option");
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_TEXTE))value=rb.getString("tutoriel_type_texte_option");
else 
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_AUDIO))value=rb.getString("tutoriel_type_audio_option");
else 
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_VIDEO))value=rb.getString("tutoriel_type_video_option");
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_SENSIBILISATION))value=rb.getString("smsPredefini_type_sensibilisation_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_QUIZZ))value=rb.getString("smsPredefini_type_quizz_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_RAPPELRDV))value=rb.getString("smsPredefini_type_rappelRDV_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_MEDICALRECORD))value=rb.getString("smsPredefini_type_medicalRecord_option");
if (fieldName.equals("periodicite")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_JOUR))value=rb.getString("smsPredefini_periodicite_jour_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_SEMAINE))value=rb.getString("smsPredefini_periodicite_semaine_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_MOIS))value=rb.getString("smsPredefini_periodicite_mois_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_TRIMESTRE))value=rb.getString("smsPredefini_periodicite_trimestre_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_SEMESTRE))value=rb.getString("smsPredefini_periodicite_semestre_option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_PONCTUELLE))value=rb.getString("smsPredefini_periodicite_ponctuelle_option");
if (fieldName.equals("statut")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_STATUT_ACTif ))value=rb.getString("smsPredefini_statut_actif _option");
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_STATUT_INACTif ))value=rb.getString("smsPredefini_statut_inactif _option");
if (fieldName.equals("statut")){
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_ERREUR))value=rb.getString("outBox_statut_erreur_option");
else 
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_AENVOYER))value=rb.getString("outBox_statut_aEnvoyer_option");
else 
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_SUCCES))value=rb.getString("outBox_statut_succes_option");
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_DOMICILE))value=rb.getString("utilisateur_libelle_domicile_option");
else 
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_BUREAU))value=rb.getString("utilisateur_libelle_bureau_option");
else 
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_AUTRE))value=rb.getString("utilisateur_libelle_autre_option");
if (localizedText!=null){Stringtext="";
if (locale.equals("fr"))text=localizedText.getFrancais();
if (locale.equals("en"))text=localizedText.getEnglish();
if (text!=null&&!text.isEmpty())returntext;
else {//returnfirstnotemptytext
if (localizedText.getFrancais()!=null&&!localizedText.getFrancais().isEmpty())returnlocalizedText.getFrancais();
if (localizedText.getEnglish()!=null&&!localizedText.getEnglish().isEmpty())returnlocalizedText.getEnglish();
if (bool!=null){
if (bool.booleanValue())returnrb.getString("boolean_true");
else returnrb.getString("boolean_false");
else return"";
if (date!=null)returnDateUtil.getFormatedDate(date);
else return"";
if (beaninstanceofPatient){returnrb.getString("patient_name");
if (beaninstanceofCasIndex){returnrb.getString("casIndex_name");
if (beaninstanceofCasTuberculose){returnrb.getString("casTuberculose_name");
if (beaninstanceofExamenSerologie){returnrb.getString("examenSerologie_name");
if (beaninstanceofExamenBiologique){returnrb.getString("examenBiologique_name");
if (beaninstanceofExamenMicroscopie){returnrb.getString("examenMicroscopie_name");
if (beaninstanceofExamenATB){returnrb.getString("examenATB_name");
if (beaninstanceofPriseMedicamenteuse){returnrb.getString("priseMedicamenteuse_name");
if (beaninstanceofRendezVous){returnrb.getString("rendezVous_name");
if (beaninstanceofTransfertReference){returnrb.getString("transfertReference_name");
if (beaninstanceofLot){returnrb.getString("lot_name");
if (beaninstanceofHorsUsage){returnrb.getString("horsUsage_name");
if (beaninstanceofEntreeLot){returnrb.getString("entreeLot_name");
if (beaninstanceofSortieLot){returnrb.getString("sortieLot_name");
if (beaninstanceofCommande){returnrb.getString("commande_name");
if (beaninstanceofDetailCommandeMedicament){returnrb.getString("detailCommandeMedicament_name");
if (beaninstanceofDetailCommandeIntrant){returnrb.getString("detailCommandeIntrant_name");
if (beaninstanceofReception){returnrb.getString("reception_name");
if (beaninstanceofDetailReceptionMedicament){returnrb.getString("detailReceptionMedicament_name");
if (beaninstanceofDetailReceptionIntrant){returnrb.getString("detailReceptionIntrant_name");
if (beaninstanceofRavitaillement){returnrb.getString("ravitaillement_name");
if (beaninstanceofDetailRavitaillement){returnrb.getString("detailRavitaillement_name");
if (beaninstanceofInventaire){returnrb.getString("inventaire_name");
if (beaninstanceofDetailInventaire){returnrb.getString("detailInventaire_name");
if (beaninstanceofPersonnel){returnrb.getString("personnel_name");
if (beaninstanceofDepartPersonnel){returnrb.getString("departPersonnel_name");
if (beaninstanceofArriveePersonnel){returnrb.getString("arriveePersonnel_name");
if (beaninstanceofRegion){returnrb.getString("region_name");
if (beaninstanceofDistrictSante){returnrb.getString("districtSante_name");
if (beaninstanceofCentreDiagTrait){returnrb.getString("centreDiagTrait_name");
if (beaninstanceofLaboratoireReference){returnrb.getString("laboratoireReference_name");
if (beaninstanceofLieuDit){returnrb.getString("lieuDit_name");
if (beaninstanceofRegime){returnrb.getString("regime_name");
if (beaninstanceofPriseMedicamentRegime){returnrb.getString("priseMedicamentRegime_name");
if (beaninstanceofMedicament){returnrb.getString("medicament_name");
if (beaninstanceofIntrant){returnrb.getString("intrant_name");
if (beaninstanceofFormation){returnrb.getString("formation_name");
if (beaninstanceofCandidatureFormation){returnrb.getString("candidatureFormation_name");
if (beaninstanceofQualif ication){returnrb.getString("qualif ication_name");
if (beaninstanceofTutoriel){returnrb.getString("tutoriel_name");
if (beaninstanceofSmsPredefini){returnrb.getString("smsPredefini_name");
if (beaninstanceofOutBox){returnrb.getString("outBox_name");
if (beaninstanceofUtilisateur){returnrb.getString("utilisateur_name");
if (EpicamIconConstants.TRANSFERTREFERENCE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.TRANSFERTREFERENCE_ICON);TransfertReferenceDataProviderprovider=newTransfertReferenceDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteTransfertReference()&&AccessManager.canEditTransfertReference())listComposite=newTransfertReferenceDynaTable(requestFactory,provider,true);
else listComposite=newTransfertReferenceDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (EpicamIconConstants.REGION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.REGION_ICON);RegionDataProviderprovider=newRegionDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteRegion()&&AccessManager.canEditRegion())listComposite=newRegionDynaTable(requestFactory,provider,true);
else listComposite=newRegionDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if therelationfieldbuttonsshallbehiddenpublicDetailRavitaillementEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();sortieLot.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailRavitaillementSortie())sortieLot.setVisible(false);
if (!AccessManager.canReadDetailRavitaillementEntree())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementSortie())sortieLot.setVisible(false);
if (!AccessManager.canEditDetailRavitaillementEntree())entreeLot.setVisible(false);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if therelationfieldbuttonsshallbehiddenpublicFieldGroupProfileEditorNestedRow(AdminRequestFactoryfactory,booleanhideButtons,ImogBeanRendererrenderer){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields(renderer);initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencardEntity=newImogSingleRelationBox<CardEntityProxy>(cardEntityDataProvider,renderer,true);
else {//inwrapperpanel,relationbuttonsenabled
if (ProfileUtil.isAdmin())cardEntity=newImogSingleRelationBox<CardEntityProxy>(cardEntityDataProvider,renderer);
else cardEntity=newImogSingleRelationBox<CardEntityProxy>(false,cardEntityDataProvider,renderer);
if (hideButtons)//inpopup,relationbuttonshiddenfieldGroup=newImogSingleRelationBox<FieldGroupProxy>(fieldGroupDataProvider,renderer,true);
else {//inwrapperpanel,relationbuttonsenabled
if (ProfileUtil.isAdmin())fieldGroup=newImogSingleRelationBox<FieldGroupProxy>(fieldGroupDataProvider,renderer);
else fieldGroup=newImogSingleRelationBox<FieldGroupProxy>(false,fieldGroupDataProvider,renderer);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();cardEntity.setEdited(false);fieldGroup.setEdited(false);read.setEdited(isEdited);write.setEdited(isEdited);export.setEdited(isEdited);
if (!ProfileUtil.isAdmin()){cardEntity.setVisible(false);fieldGroup.setVisible(false);read.setVisible(false);write.setVisible(false);export.setVisible(false);
if (!ProfileUtil.isAdmin()){cardEntity.setVisible(false);fieldGroup.setVisible(false);read.setVisible(false);write.setVisible(false);export.setVisible(false);
if (field.equals(cardEntity)){clearFieldGroupWidget();getFieldGroupFilteredByCardEntity(cardEntity.getValue());
if (pCardEntity!=null){
if (!hideButtons)fieldGroup.hideButtons(false);fieldGroupDataProvider.setFilterCriteria(pCardEntity.getId(),"entity.id");
else {fieldGroup.hideButtons(true);fieldGroupDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCardEntity(CardEntityProxyvalue,booleanisLocked){cardEntity.setLocked(isLocked);cardEntity.setValue(value);//FieldFieldGroupdependsonthevalueoffieldcardEntitygetFieldGroupFilteredByCardEntity(value);
if relationfieldshallbelocked(noneditable)publicvoidsetFieldGroup(FieldGroupProxyvalue,booleanisLocked){fieldGroup.setLocked(isLocked);fieldGroup.setValue(value);
if (cardEntity.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cardEntity");//fieldGroupisarequiredfield
if (fieldGroup.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"fieldGroup");
if (searchText==null)handler.listProfile();
else handler.listProfile(searchText);
if (lot_lot_quantiteBox.getValue()==null)lot_lot_quantiteCrit.setValue(null);
else lot_lot_quantiteCrit.setValue(String.valueOf(lot_lot_quantiteBox.getValue()));lot_lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_lot_quantiteBox.getValue()));criteria.add(lot_lot_quantiteCrit);FilterCriterialot_quantiteCrit=newFilterCriteria();lot_quantiteCrit.setField("lot.quantite");lot_quantiteCrit.setFieldDisplayName(NLS.constants().sortieLot_field_quantite());lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (lot_quantiteBox.getValue()==null)lot_quantiteCrit.setValue(null);
else lot_quantiteCrit.setValue(String.valueOf(lot_quantiteBox.getValue()));lot_quantiteCrit.setValueDisplayName(String.valueOf(lot_quantiteBox.getValue()));criteria.add(lot_quantiteCrit);FilterCriteriatypeCrit=newFilterCriteria();typeCrit.setField("type");typeCrit.setFieldDisplayName(NLS.constants().horsUsage_field_type());typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(typeBox.getValue(typeBox.getSelectedIndex()));typeCrit.setValueDisplayName(EpicamRenderer.get().getEnumDisplayValue(HorsUsageProxy.class,"type",typeBox.getValue(typeBox.getSelectedIndex())));criteria.add(typeCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadLotDescription())lot_lot_numeroFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())lot_lot_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())lot_lot_medicament_designationFilterBox.setVisible(false);
if (!AccessManager.canReadLotDescription())lot_lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())lot_quantiteFilterBox.setVisible(false);
if (!AccessManager.canReadHorsUsageDescription())typeFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (parent!=null){editor=newCardEntityEditor(factory,true);this.initField=initField;
else editor=newCardEntityEditor(factory);isNew=true;setEditable(true);setTitle(AdminNLS.constants().cardEntity_create_title());createDriver();createNewCardEntity();this.setContent(editor);
if (parent!=null){editor=newCardEntityEditor(factory,true);this.initField=initField;
else editor=newCardEntityEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCardEntity(entityId);this.setContent(editor);
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("CardEntityformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesAdminRendererrenderer=AdminRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCardEntityEvent(current.getId(),closeEvent));
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadIntrantDescription())identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if theopenbuttonshallbehiddenineditmode*defaultisfalse*@paramhideOpenButtonpublicvoidsetHideOpenButton(booleanhideOpenButton){singleRelationBox.setHideOpenButton(hideOpenButton);
if (handler==null)initHandler();returnhandler.getById(id);
if (uploader.getEntity()!=null){thisValue=uploader.getEntity();
if (editable){infoPanel.setVisible(false);editPanel.setVisible(true);//main.remove(infoPanel);//main.add(editPanel);
else {infoPanel.setVisible(true);editPanel.setVisible(false);//main.remove(editPanel);//main.add(infoPanel);
if (searchText==null)handler.listRendezVous();
else handler.listRendezVous(searchText);
if (!enabled){textBox.addStyleDependentName("disabled");
else {textBox.removeStyleDependentName("disabled");
if (textBox.getValue().isEmpty())returnnull;
else returntextBox.getValue();
if (dateExamenBeforeBox.getValue()!=null){FilterCriteriadateExamenBeforeCrit=newFilterCriteria();dateExamenBeforeCrit.setField("dateExamen");dateExamenBeforeCrit.setFieldDisplayName(NLS.constants().examenATB_field_dateExamen()+BaseNLS.constants().search_operator_inferior());dateExamenBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateExamenBeforeCrit.setValue(DateUtil.getDate(dateExamenBeforeBox.getValue()));dateExamenBeforeCrit.setValueDisplayName(DateUtil.getDate(dateExamenBeforeBox.getValue()));criteria.add(dateExamenBeforeCrit);
if (dateExamenAfterBox.getValue()!=null){FilterCriteriadateExamenAfterCrit=newFilterCriteria();dateExamenAfterCrit.setField("dateExamen");dateExamenAfterCrit.setFieldDisplayName(NLS.constants().examenATB_field_dateExamen()+BaseNLS.constants().search_operator_superior());dateExamenAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateExamenAfterCrit.setValue(DateUtil.getDate(dateExamenAfterBox.getValue()));dateExamenAfterCrit.setValueDisplayName(DateUtil.getDate(dateExamenAfterBox.getValue()));criteria.add(dateExamenAfterCrit);
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())castb_patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())castb_patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadExamenATBExamen()){dateExamenBeforeFilterBox.setVisible(false);dateExamenAfterFilterBox.setVisible(false);
if (!AccessManager.canReadExamenATBExamen())raisonDepistageFilterBox.setVisible(false);
if (!AccessManager.canReadExamenATBExamen())resultatFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if theapplicationshalldisplaytheEntitylistafterclosingtheworkflowpublicEditorWorkflowComposite(EventBuseventBus,LabeltitleContainer,RelationPopupPanelparent){this.eventBus=eventBus;this.parent=parent;this.titleContainer=titleContainer;initWidget(uiBinder.createAndBindUi(this));imogResources.imogStyle().ensureInjected();saveButton=newPushButton(BaseNLS.constants().button_save());editButton=newPushButton(BaseNLS.constants().button_edit());cancelButton=newPushButton(BaseNLS.constants().button_cancel());closeButton=newPushButton(BaseNLS.constants().button_close());//printButton=newPushButton(BaseNLS.constants().button_print());properties();
if (content!=null)formContent.remove(content);content=pContent;formContent.add(content);formContent.setCellWidth(content,"100%");formContent.setCellHeight(content,"100%");
if (Window.confirm(BaseNLS.constants().confirmation_save()))save();
if (isNew){closeForm();
else {setEditable(false);cancel();
if (titleContainer!=null)returntitleContainer.getText();
else return"";
if (titleContainer!=null)titleContainer.setText(title);
if theformiseditablepublicvoidsetEditable(booleaneditable){editButton.setVisible(!editable&&isModif iable);//printButton.setVisible(!editable);saveButton.setVisible(editable);cancelButton.setVisible(editable);closeButton.setVisible(!editable);
if thisformismodif iable.*@parampModif iabletrue
if theformismodif iablepublicvoidsetModif iable(booleanpModif iable){isModif iable=pModif iable;editButton.setVisible(isModif iable);
if (bean.getCreated()!=null&&bean.getCreatedBy()!=null){Stringcreated=DateUtil.getDate(bean.getCreated());Stringcreator=bean.getCreatedBy();createUpdate=BaseNLS.messages().form_metadata_creation(created,creator);
if (bean.getModif ied()!=null&&bean.getModif iedBy()!=null){Stringmodif ied=DateUtil.getDate(bean.getModif ied());Stringmodif ier=bean.getModif iedBy();modif Update=BaseNLS.messages().form_metadata_modif ication(modif ied,modif ier);
if (bean.getId()!=null){idUpdate=BaseNLS.messages().form_metadata_id(bean.getId());
else {eventBus.fireEvent(newHistoryBackEvent());
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getLieuxDits()!=null){StringBuilderbuilder=newStringBuilder();for(LieuDiti:entity.getLieuxDits()){builder.append(i.getId()).append(";");
if (parent!=null){editor=newDetailReceptionIntrantEditor(factory,true);this.initField=initField;
else editor=newDetailReceptionIntrantEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().detailReceptionIntrant_create_title());createDriver();createNewDetailReceptionIntrant();this.setContent(editor);
if (parent!=null){editor=newDetailReceptionIntrantEditor(factory,true);this.initField=initField;
else editor=newDetailReceptionIntrantEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchDetailReceptionIntrant(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (entreeLot!=null){
if (AccessManager.canEditDetailReceptionIntrant())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("DetailReceptionIntrantformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewDetailReceptionIntrantEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){editor.setReception(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){editor.setCommande(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeIntrantProxyvalue,booleanisLocked){editor.setDetailCommande(value,isLocked);
if (dureeTraitementBox.getValue()==null)dureeTraitementCrit.setValue(null);
else dureeTraitementCrit.setValue(String.valueOf(dureeTraitementBox.getValue()));dureeTraitementCrit.setValueDisplayName(String.valueOf(dureeTraitementBox.getValue()));criteria.add(dureeTraitementCrit);FilterCriteriapoidsMinCrit=newFilterCriteria();poidsMinCrit.setField("poidsMin");poidsMinCrit.setFieldDisplayName(NLS.constants().regime_field_poidsMin());poidsMinCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (poidsMinBox.getValue()==null)poidsMinCrit.setValue(null);
else poidsMinCrit.setValue(String.valueOf(poidsMinBox.getValue()));poidsMinCrit.setValueDisplayName(String.valueOf(poidsMinBox.getValue()));criteria.add(poidsMinCrit);FilterCriteriapoidsMaxCrit=newFilterCriteria();poidsMaxCrit.setField("poidsMax");poidsMaxCrit.setFieldDisplayName(NLS.constants().regime_field_poidsMax());poidsMaxCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (poidsMaxBox.getValue()==null)poidsMaxCrit.setValue(null);
else poidsMaxCrit.setValue(String.valueOf(poidsMaxBox.getValue()));poidsMaxCrit.setValueDisplayName(String.valueOf(poidsMaxBox.getValue()));criteria.add(poidsMaxCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadRegimeDescription())nomFilterBox.setVisible(false);
if (!AccessManager.canReadRegimeDescription())typeFilterBox.setVisible(false);
if (!AccessManager.canReadRegimeDescription())dureeTraitementFilterBox.setVisible(false);
if (!AccessManager.canReadRegimeDescription())poidsMinFilterBox.setVisible(false);
if (!AccessManager.canReadRegimeDescription())poidsMaxFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (beanDataProvider!=null&&beanDataProvider.getSearchCriterions()!=null)beanDataProvider.setSearchCriterions(null);popup=newPopupPanel(true);table=newDataGrid<T>(itemByPage,GWT.<TableResources>create(TableResources.class)){@OverrideprotectedvoidonUnload(){for(HandlerRegistrationr:registrations)r.removeHandler();registrations.clear();super.onUnload();
if (value==null){return;
if (count!=null){updateRowCount(count.intValue(),true);pager.setTotalNbOfRows(count.intValue());updateTable(display);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(LieuDitentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<LieuDit>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<LieuDit>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<LieuDit>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(LieuDitentity:entities)delete(entity);
if (nom!=null&&!nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom");criteria.setValue(nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicCasIndexFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newCasIndexEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newCasIndexEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newCasIndexEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newCasIndexEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.CASINDEX_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CASINDEX_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicCasIndexFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPatientLie(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatientLie(value,isLocked);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicUtilisateurFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newUtilisateurEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newUtilisateurEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newUtilisateurEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newUtilisateurEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.UTILISATEUR_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.UTILISATEUR_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicUtilisateurFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>identif iantColumn=newIdentif iantColumn();identif iantColumn.setSortable(true);table.addColumn(identif iantColumn,NLS.constants().patient_field_s_identif iant());
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().patient_field_s_nom());
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>dateNaissanceColumn=newDateNaissanceColumn();dateNaissanceColumn.setSortable(true);table.addColumn(dateNaissanceColumn,NLS.constants().patient_field_s_dateNaissance());
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>ageColumn=newAgeColumn();ageColumn.setSortable(true);table.addColumn(ageColumn,NLS.constants().patient_field_s_age());
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>sexeColumn=newSexeColumn();sexeColumn.setSortable(true);table.addColumn(sexeColumn,NLS.constants().patient_field_s_sexe());
if (AccessManager.canReadPatientIdentif ication()){Column<PatientProxy,String>professionColumn=newProfessionColumn();professionColumn.setSortable(true);table.addColumn(professionColumn,NLS.constants().patient_field_s_profession());
if (AccessManager.canReadPatientContact()){Column<PatientProxy,String>telephoneUnColumn=newTelephoneUnColumn();telephoneUnColumn.setSortable(true);table.addColumn(telephoneUnColumn,NLS.constants().patient_field_s_telephoneUn());
if (AccessManager.canReadPatientContact()){Column<PatientProxy,String>telephoneDeuxColumn=newTelephoneDeuxColumn();telephoneDeuxColumn.setSortable(true);table.addColumn(telephoneDeuxColumn,NLS.constants().patient_field_s_telephoneDeux());
if (AccessManager.canReadPatientPersonneContact()){Column<PatientProxy,String>pacNomColumn=newPacNomColumn();pacNomColumn.setSortable(true);table.addColumn(pacNomColumn,NLS.constants().patient_field_s_pacNom());
if (AccessManager.canReadPatientPersonneContact()){Column<PatientProxy,String>pacTelephoneUnColumn=newPacTelephoneUnColumn();pacTelephoneUnColumn.setSortable(true);table.addColumn(pacTelephoneUnColumn,NLS.constants().patient_field_s_pacTelephoneUn());
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/patient/",true);
else returnnull;
if (AccessManager.canDeletePatient()&&AccessManager.canEditPatient()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeletePatient()&&AccessManager.canEditPatient()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<PatientProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().patient_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(PatientProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getPatientRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedPatiententrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListPatientEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportPatient()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.PAT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=patient_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getIdentif iant()==null)value="";
else value=object.getIdentif iant();
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (object!=null){
if (object.getDateNaissance()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateNaissance());
if (object!=null){
if (object.getAge()==null)value="";
else value=object.getAge().toString();
if (object!=null){
if (object.getSexe()==null)value="";
else value=renderer.getEnumDisplayValue(PatientProxy.class,"sexe",object.getSexe());
if (object!=null){
if (object.getProfession()==null)value="";
else value=object.getProfession();
if (object!=null){
if (object.getTelephoneUn()==null)value="";
else value=object.getTelephoneUn();
if (object!=null){
if (object.getTelephoneDeux()==null)value="";
else value=object.getTelephoneDeux();
if (object!=null){
if (object.getPacNom()==null)value="";
else value=object.getPacNom();
if (object!=null){
if (object.getPacTelephoneUn()==null)value="";
else value=object.getPacTelephoneUn();
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicPriseMedicamenteuseFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newPriseMedicamenteuseEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newPriseMedicamenteuseEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newPriseMedicamenteuseEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newPriseMedicamenteuseEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.PRISEMEDICAMENTEUSE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PRISEMEDICAMENTEUSE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicPriseMedicamenteuseFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseIntensive(CasTuberculoseProxyvalue,booleanisLocked){editorWorkflow.setPhaseIntensive(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPhaseContinuation(CasTuberculoseProxyvalue,booleanisLocked){editorWorkflow.setPhaseContinuation(value,isLocked);
if (!ProfileUtil.isAdmin())nameFilterBox.setVisible(false);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDynamicFieldTemplateFormPanel(ImogRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField,BooleanreturnToList,FormTypeUtilformTypeUtil){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();wrapperPanel.setIcon(DynFieldsIconConstants.DYNAMICFIELD_TEMPLATE_ICON);
if (entityId!=null){
if (parent==null)editorWorkflow=newDynamicFieldTemplateEditorWorkflow(requestFactory,entityId,titleContainer,formTypeUtil);
else {editorWorkflow=newDynamicFieldTemplateEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField,formTypeUtil);wrapperPanel.setPanelContentHeight("650px");wrapperPanel.setPanelContentWidth("600px");
else {
if (parent==null){editorWorkflow=newDynamicFieldTemplateEditorWorkflow(requestFactory,titleContainer,formTypeUtil);
if (returnToList!=null&&returnToList)editorWorkflow.setCloseEvent(newListDynamicFieldTemplateEvent());
else editorWorkflow.setCloseEvent(newGoHomeEvent());
else {editorWorkflow=newDynamicFieldTemplateEditorWorkflow(requestFactory,titleContainer,parent,initField,formTypeUtil);wrapperPanel.setPanelContentHeight("650px");wrapperPanel.setPanelContentWidth("600px");
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicDynamicFieldTemplateFormPanel(ImogRequestFactoryrequestFactory,StringentityId,FormTypeUtilformTypeUtil){this(requestFactory,entityId,null,null,null,formTypeUtil);
if anentityisbeingcreated*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicDynamicFieldTemplateFormPanel(ImogRequestFactoryrequestFactory,StringentityId,BooleanreturnToList,FormTypeUtilformTypeUtil){this(requestFactory,entityId,null,null,returnToList,formTypeUtil);
if relationfieldshallbelocked(noneditable)publicvoidsetTemplateCreator(ImogActorProxyvalue,booleanisLocked){editorWorkflow.setTemplateCreator(value,isLocked);
if (beaninstanceofDynamicFieldTemplateProxy){returngetDisplayValue((DynamicFieldTemplateProxy)bean);
if (beaninstanceofDynamicFieldInstanceProxy){returngetDisplayValue((DynamicFieldInstanceProxy)bean);
if (bean.getFieldName()!=null){value=value+bean.getFieldName()+"";
if (fieldType!=null){
if (fieldType.equals(DFConstants.FIELD_TYPE_STRING))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_string_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_TEXT))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_text_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_INT))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_integer_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_FLOAT))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_float_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_DATE))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_date_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_BOOL))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_boolean_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_S))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_singleEnumeration_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_ENUM_M))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_multiEnumeration_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_BIN))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_binary_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_IMG))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_image_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_GEO))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_geoField_option()+"";
else 
if (fieldType.equals(DFConstants.FIELD_TYPE_BCODE))value=value+DynFieldsNLS.constants().dynamicField_Template_fieldType_barCode_option()+"";
if (bean.getFieldValue()!=null){value=value+bean.getFieldValue()+"";
if (fieldValue!=null&&!fieldValue.equals("")){
if (beanClass.equals(DynamicFieldTemplateProxy.class)){returngetDynamicField_TemplateEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DynamicFieldInstanceProxy.class)){returngetDynamicField_InstanceEnumDisplayValue(fieldName,fieldValue);
if (fieldName.equals("fieldType")){
if (fieldValue.equals(DFConstants.FIELD_TYPE_STRING))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_string_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_TEXT))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_text_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_INT))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_integer_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_FLOAT))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_float_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_DATE))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_date_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_BOOL))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_boolean_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_ENUM_S))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_singleEnumeration_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_ENUM_M))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_multiEnumeration_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_BIN))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_binary_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_IMG))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_image_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_GEO))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_geoField_option();
else 
if (fieldValue.equals(DFConstants.FIELD_TYPE_BCODE))value=DynFieldsNLS.constants().dynamicField_Template_fieldType_barCode_option();
if (fieldName.equals("formType")){if (formTypeUtil!=null){List<FormType>formTypes=formTypeUtil.getDynamicFieldFormTypes();for(FormTypetype:formTypes){if (fieldValue.equals(type.getValue()))value=type.getDisplayValue();
if (initField==null)handler.saveDetailRavitaillement(value);
else handler.saveDetailRavitaillement(value,initField);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getLieuxDits()!=null){StringBuilderbuilder=newStringBuilder();for(LieuDiti:entity.getLieuxDits()){builder.append(i.getId()).append(";");
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newLotEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newLotEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newLotEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newLotEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.LOT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.LOT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicLotFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDT(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editorWorkflow.setMedicament(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){editorWorkflow.setIntrant(value,isLocked);
if theboxshallthrowexceptionswhenanunvaliddateisenteredpublicImogDateTimeBox(booleanwithExceptions){initWidget(uiBinder.createAndBindUi(this));
if (!enabled){dateBox.addStyleDependentName("disabled");
else {dateBox.removeStyleDependentName("disabled");
else returnnull;
else returnnull;
else returnnull;
if theenteredvalueisavalidInteger*@returnpublicbooleanisValid(){returnisValid;
if (handler==null)initHandler();returnhandler.getById(id);
if thepropertyforwhichnonaffectedvaluesaresearchedshall*belookedinreverserelationpublicProfileDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedProfile(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedProfileReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listProfile(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedProfile(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedProfileReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listProfile(start,numRows,"modif ied",false,filterCriteria);
else result=request.getProfileEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedProfile(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedProfileReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listProfile(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedProfile(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedProfileReverse(start,numRows,"modif ied",false,property);
else result=request.listProfile(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listProfile(start,numRows,property,asc,searchCriterions);
else result=request.listProfile(start,numRows,property,asc,filterCriteria);
else result=request.getProfileEmptyList();
else {
if (searchCriterions!=null)result=request.listProfile(start,numRows,property,asc,searchCriterions);
else result=request.listProfile(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedProfile(property,searchCriterions);
else returnrequest.countNonAffectedProfileReverse(property,searchCriterions);
else returnrequest.countProfile(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedProfile(property,filterCriteria);
else returnrequest.countNonAffectedProfileReverse(property,filterCriteria);
else returnrequest.countProfile(filterCriteria);
else returnrequest.countNonAffectedProfile("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedProfile(property,searchCriterions);
else returnrequest.countNonAffectedProfileReverse(property,searchCriterions);
else returnrequest.countProfile(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedProfile(property);
else returnrequest.countNonAffectedProfileReverse(property);
else returnrequest.countProfile();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {ProfileRequestrequest=(ProfileRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNameBasicCriteriaProxynameCrit=request.create(BasicCriteriaProxy.class);nameCrit.setField("name");nameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nameCrit.setValue(text);buffer.append("("+AdminNLS.constants().profile_field_name()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nameCrit);disJunction.setCriterions(criterionList);fullTextSearch=true;//addFilterCriteria
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,disJunction));
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if therelationfieldbuttonsshallbehiddenpublicCandidatureFormationEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);personnel.setEdited(isEdited);approuveeRegion.setEdited(isEdited);motif RejetRegion.setEdited(isEdited);approuveeGTC.setEdited(isEdited);motif RejetGTC.setEdited(isEdited);
if (!AccessManager.canReadCandidatureFormationDescription())region.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())districtSante.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())CDT.setVisible(false);
if (!AccessManager.canReadCandidatureFormationDescription())personnel.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())approuveeRegion.setVisible(false);
if (!AccessManager.canReadCandidatureFormationRegionApprobation())motif RejetRegion.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())approuveeGTC.setVisible(false);
if (!AccessManager.canReadCandidatureFormationGtcApprobation())motif RejetGTC.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())region.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())districtSante.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())CDT.setVisible(false);
if (!AccessManager.canEditCandidatureFormationDescription())personnel.setVisible(false);
if (!AccessManager.canEditCandidatureFormationRegionApprobation())approuveeRegion.setVisible(false);
if (!AccessManager.canEditCandidatureFormationRegionApprobation())motif RejetRegion.setVisible(false);
if (!AccessManager.canEditCandidatureFormationGtcApprobation())approuveeGTC.setVisible(false);
if (!AccessManager.canEditCandidatureFormationGtcApprobation())motif RejetGTC.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());
if (allValidation||source.equals(approuveeRegion)){
if ((approuveeRegion.getValue()!=null&&!approuveeRegion.getValue())){motif RejetRegion.setVisible(true);
else {motif RejetRegion.setVisible(false);
if (allValidation||source.equals(approuveeGTC)){
if ((approuveeGTC.getValue()!=null&&!approuveeGTC.getValue())){motif RejetGTC.setVisible(true);
else {motif RejetGTC.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pCDT!=null){
if (!hideButtons)personnel.hideButtons(false);personnelDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {personnel.hideButtons(true);personnelDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldPersonneldependsonthevalueoffieldcDTclearPersonnelWidget();getPersonnelFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){personnel.setLocked(isLocked);personnel.setValue(value);
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (personnel.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PersonnelFormPanelform=newPersonnelFormPanel(requestFactory,personnel.getValue().getId(),relationPopup,"personnel");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (CDT.getValue()!=null)form.setCDT(CDT.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("personnel"))personnel.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//personnelisarequiredfield
if (personnel.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"personnel");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>personnelFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("personnel"))personnelFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (personnelFieldErrors.size()>0)personnel.showErrors(personnelFieldErrors);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(HorsUsageentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedlotSortieLotho_usaa=entity.getLot();
if (ho_usaa!=null){handlerHelper.prepare(ho_usaa);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<HorsUsage>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<HorsUsage>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<HorsUsage>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(HorsUsageentity:entities)delete(entity);
if (lot_lot_numero!=null&&!lot_lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.lot.numero");criteria.setValue(lot_lot_numero);junction.add(criteria);
if (lot_lot_intrant_identif iant!=null&&!lot_lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.lot.intrant.identif iant");criteria.setValue(lot_lot_intrant_identif iant);junction.add(criteria);
if (lot_lot_medicament_designation!=null&&!lot_lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.lot.medicament.designation");criteria.setValue(lot_lot_medicament_designation);junction.add(criteria);
if (lot_lot_quantite!=null&&!lot_lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("lot.lot.quantite");criteria.setValue(lot_lot_quantite);junction.add(criteria);
if (lot_quantite!=null&&!lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("lot.quantite");criteria.setValue(lot_quantite);junction.add(criteria);
if (type!=null&&!type.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("type");criteria.setValue(type);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (list!=null){list.flush();
if (list==null){returnCollections.emptyList();
if thereisnobackinglist,andeditscannotbemade.**<pre>*ListEditor&lt;Foo,MyFooEditor>listEditor=ListEditor.of(...);*listEditor.setValue(listOfFoo);//UsuallycalledbyEditorDriver*listEditor.getList().set(1,newFoo());*listEditor.getEditors().get(1).getFooFieldEditor().setValue(....);*</pre>**@returnaliveviewoftheListEditor'sbackingdata,or<code>null</code>*
if thereisnobackinglist.publicList<T>getList(){returnlist;
if (list==null&&value==null){//fastexitreturn;
if (list!=null&&list.isSameValue(value)){//settingthesamevalueastheonebeingeditedlist.refresh();return;
if (list!=null){//Havingentirevaluereset,sodumpthewrappergracefullylist.detach();
if (value==null){list=null;
else {list=newListEditorWrapper<T,E>(value,chain,editorSource);list.attach();
if (initField==null)handler.savePersonnel(value);
else handler.savePersonnel(value,initField);
if (locale.equals("fr"))objetCrit.setField("objet.francais");
if (locale.equals("en"))objetCrit.setField("objet.english");objetCrit.setFieldDisplayName(NLS.constants().smsPredefini_field_objet());objetCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);objetCrit.setValue(objetBox.getValue());objetCrit.setValueDisplayName(objetBox.getValue());criteria.add(objetCrit);FilterCriteriamessageCrit=newFilterCriteria();
if (locale.equals("fr"))messageCrit.setField("message.francais");
if (locale.equals("en"))messageCrit.setField("message.english");messageCrit.setFieldDisplayName(NLS.constants().smsPredefini_field_message());messageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);messageCrit.setValue(messageBox.getValue());messageCrit.setValueDisplayName(messageBox.getValue());criteria.add(messageCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadSmsPredefiniDescription())typeFilterBox.setVisible(false);
if (!AccessManager.canReadSmsPredefiniDescription())objetFilterBox.setVisible(false);
if (!AccessManager.canReadSmsPredefiniDescription())messageFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (EpicamIconConstants.COMMANDE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.COMMANDE_ICON);CommandeDataProviderprovider=newCommandeDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteCommande()&&AccessManager.canEditCommande())listComposite=newCommandeDynaTable(requestFactory,provider,true);
else listComposite=newCommandeDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);listComposite=newCardEntityDynaTable(requestFactory,provider,false,renderer);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DetailRavitaillemententity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);//managerelatedsortieLotSortieLotdet_ravba=entity.getSortieLot();
if (det_ravba!=null){handlerHelper.prepare(det_ravba);
if (det_ravca!=null){handlerHelper.prepare(det_ravca);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DetailRavitaillement>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DetailRavitaillement>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DetailRavitaillement>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DetailRavitaillemententity:entities)delete(entity);
if (ravitaillement_cDTDepart_nom!=null&&!ravitaillement_cDTDepart_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("ravitaillement.cDTDepart.nom");criteria.setValue(ravitaillement_cDTDepart_nom);junction.add(criteria);
if (ravitaillement_dateDepartBefore!=null&&!ravitaillement_dateDepartBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("ravitaillement.dateDepart");criteria.setValue(ravitaillement_dateDepartBefore);junction.add(criteria);
if (ravitaillement_dateDepartAfter!=null&&!ravitaillement_dateDepartAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("ravitaillement.dateDepart");criteria.setValue(ravitaillement_dateDepartAfter);junction.add(criteria);
if (ravitaillement_cDTArrivee_nom!=null&&!ravitaillement_cDTArrivee_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("ravitaillement.cDTArrivee.nom");criteria.setValue(ravitaillement_cDTArrivee_nom);junction.add(criteria);
if (ravitaillement_dateArriveeBefore!=null&&!ravitaillement_dateArriveeBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("ravitaillement.dateArrivee");criteria.setValue(ravitaillement_dateArriveeBefore);junction.add(criteria);
if (ravitaillement_dateArriveeAfter!=null&&!ravitaillement_dateArriveeAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("ravitaillement.dateArrivee");criteria.setValue(ravitaillement_dateArriveeAfter);junction.add(criteria);
if (sortieLot_lot_numero!=null&&!sortieLot_lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("sortieLot.lot.numero");criteria.setValue(sortieLot_lot_numero);junction.add(criteria);
if (sortieLot_lot_intrant_identif iant!=null&&!sortieLot_lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("sortieLot.lot.intrant.identif iant");criteria.setValue(sortieLot_lot_intrant_identif iant);junction.add(criteria);
if (sortieLot_lot_medicament_designation!=null&&!sortieLot_lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("sortieLot.lot.medicament.designation");criteria.setValue(sortieLot_lot_medicament_designation);junction.add(criteria);
if (sortieLot_lot_quantite!=null&&!sortieLot_lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("sortieLot.lot.quantite");criteria.setValue(sortieLot_lot_quantite);junction.add(criteria);
if (sortieLot_quantite!=null&&!sortieLot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("sortieLot.quantite");criteria.setValue(sortieLot_quantite);junction.add(criteria);
if (entreeLot_lot_numero!=null&&!entreeLot_lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("entreeLot.lot.numero");criteria.setValue(entreeLot_lot_numero);junction.add(criteria);
if (entreeLot_lot_intrant_identif iant!=null&&!entreeLot_lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("entreeLot.lot.intrant.identif iant");criteria.setValue(entreeLot_lot_intrant_identif iant);junction.add(criteria);
if (entreeLot_lot_medicament_designation!=null&&!entreeLot_lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("entreeLot.lot.medicament.designation");criteria.setValue(entreeLot_lot_medicament_designation);junction.add(criteria);
if (entreeLot_lot_quantite!=null&&!entreeLot_lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("entreeLot.lot.quantite");criteria.setValue(entreeLot_lot_quantite);junction.add(criteria);
if (entreeLot_quantite!=null&&!entreeLot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("entreeLot.quantite");criteria.setValue(entreeLot_quantite);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if therelationfieldbuttonsshallbehiddenpublicLieuDitEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);coordonnees.setEdited(isEdited);
if (!AccessManager.canReadLieuDitDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadLieuDitAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditLieuDitDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditLieuDitAdresse())adresseSection.setVisible(false);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicDetailCommandeIntrantEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenintrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateIntrant()&&AccessManager.canEditIntrant())intrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get());
else intrant=newImogSingleRelationBox<IntrantProxy>(false,intrantDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldcommande.setEdited(false);intrant.setEdited(isEdited);quantiteRequise.setEdited(isEdited);//readonlyfieldquantiteEnStock.setEdited(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailCommandeIntrantDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){intrant.setLocked(isLocked);intrant.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (intrant.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();IntrantFormPanelform=newIntrantFormPanel(requestFactory,intrant.getValue().getId(),relationPopup,"intrant");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("intrant"))intrant.setValue(value,true);
if (intrant.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"intrant");//quantiteRequiseisarequiredfield
if (quantiteRequise.getValueWithoutParseException()==null&&quantiteRequise.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteRequise");//quantiteRequiseshallbesuperiororequalto'1'
if (quantiteRequise.getValueWithoutParseException()!=null&&!(quantiteRequise.getValueWithoutParseException()>=1))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteRequise_min()),null,"quantiteRequise");//quantiteEnStockshallbesuperiororequalto'0'
if (quantiteEnStock.getValueWithoutParseException()!=null&&!(quantiteEnStock.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteEnStock_min()),null,"quantiteEnStock");
if (errors!=null&&errors.size()>0){List<EditorError>intrantFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteRequiseFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteEnStockFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("intrant"))intrantFieldErrors.add(error);
if (field.equals("quantiteRequise"))quantiteRequiseFieldErrors.add(error);
if (field.equals("quantiteEnStock"))quantiteEnStockFieldErrors.add(error);
if (intrantFieldErrors.size()>0)intrant.showErrors(intrantFieldErrors);
if (quantiteRequiseFieldErrors.size()>0)quantiteRequise.showErrors(quantiteRequiseFieldErrors);
if (quantiteEnStockFieldErrors.size()>0)quantiteEnStock.showErrors(quantiteEnStockFieldErrors);
if (initField==null)handler.saveImogBean(value);
else handler.saveImogBean(value,initField);
if (handler==null)initHandler();returnhandler.getById(id);
if (handler==null)initHandler();returnhandler.getById(id);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicFieldGroupFormPanel(AdminRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField,ImogBeanRendererrenderer){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newFieldGroupEditorWorkflow(requestFactory,entityId,titleContainer,renderer);
else {editorWorkflow=newFieldGroupEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField,renderer);
else {
if (parent==null){editorWorkflow=newFieldGroupEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newFieldGroupEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicFieldGroupFormPanel(AdminRequestFactoryrequestFactory,StringentityId,ImogBeanRendererrenderer){this(requestFactory,entityId,null,null,renderer);
if (beaninstanceofPatient)return(T)toSecurePatient((Patient)bean);
if (beaninstanceofCasIndex)return(T)toSecureCasIndex((CasIndex)bean);
if (beaninstanceofCasTuberculose)return(T)toSecureCasTuberculose((CasTuberculose)bean);
if (beaninstanceofExamenSerologie)return(T)toSecureExamenSerologie((ExamenSerologie)bean);
if (beaninstanceofExamenBiologique)return(T)toSecureExamenBiologique((ExamenBiologique)bean);
if (beaninstanceofExamenMicroscopie)return(T)toSecureExamenMicroscopie((ExamenMicroscopie)bean);
if (beaninstanceofExamenATB)return(T)toSecureExamenATB((ExamenATB)bean);
if (beaninstanceofPriseMedicamenteuse)return(T)toSecurePriseMedicamenteuse((PriseMedicamenteuse)bean);
if (beaninstanceofRendezVous)return(T)toSecureRendezVous((RendezVous)bean);
if (beaninstanceofTransfertReference)return(T)toSecureTransfertReference((TransfertReference)bean);
if (beaninstanceofLot)return(T)toSecureLot((Lot)bean);
if (beaninstanceofHorsUsage)return(T)toSecureHorsUsage((HorsUsage)bean);
if (beaninstanceofEntreeLot)return(T)toSecureEntreeLot((EntreeLot)bean);
if (beaninstanceofSortieLot)return(T)toSecureSortieLot((SortieLot)bean);
if (beaninstanceofCommande)return(T)toSecureCommande((Commande)bean);
if (beaninstanceofDetailCommandeMedicament)return(T)toSecureDetailCommandeMedicament((DetailCommandeMedicament)bean);
if (beaninstanceofDetailCommandeIntrant)return(T)toSecureDetailCommandeIntrant((DetailCommandeIntrant)bean);
if (beaninstanceofReception)return(T)toSecureReception((Reception)bean);
if (beaninstanceofDetailReceptionMedicament)return(T)toSecureDetailReceptionMedicament((DetailReceptionMedicament)bean);
if (beaninstanceofDetailReceptionIntrant)return(T)toSecureDetailReceptionIntrant((DetailReceptionIntrant)bean);
if (beaninstanceofRavitaillement)return(T)toSecureRavitaillement((Ravitaillement)bean);
if (beaninstanceofDetailRavitaillement)return(T)toSecureDetailRavitaillement((DetailRavitaillement)bean);
if (beaninstanceofInventaire)return(T)toSecureInventaire((Inventaire)bean);
if (beaninstanceofDetailInventaire)return(T)toSecureDetailInventaire((DetailInventaire)bean);
if (beaninstanceofPersonnel)return(T)toSecurePersonnel((Personnel)bean);
if (beaninstanceofDepartPersonnel)return(T)toSecureDepartPersonnel((DepartPersonnel)bean);
if (beaninstanceofArriveePersonnel)return(T)toSecureArriveePersonnel((ArriveePersonnel)bean);
if (beaninstanceofRegion)return(T)toSecureRegion((Region)bean);
if (beaninstanceofDistrictSante)return(T)toSecureDistrictSante((DistrictSante)bean);
if (beaninstanceofCentreDiagTrait)return(T)toSecureCentreDiagTrait((CentreDiagTrait)bean);
if (beaninstanceofLaboratoireReference)return(T)toSecureLaboratoireReference((LaboratoireReference)bean);
if (beaninstanceofLieuDit)return(T)toSecureLieuDit((LieuDit)bean);
if (beaninstanceofRegime)return(T)toSecureRegime((Regime)bean);
if (beaninstanceofPriseMedicamentRegime)return(T)toSecurePriseMedicamentRegime((PriseMedicamentRegime)bean);
if (beaninstanceofMedicament)return(T)toSecureMedicament((Medicament)bean);
if (beaninstanceofIntrant)return(T)toSecureIntrant((Intrant)bean);
if (beaninstanceofFormation)return(T)toSecureFormation((Formation)bean);
if (beaninstanceofCandidatureFormation)return(T)toSecureCandidatureFormation((CandidatureFormation)bean);
if (beaninstanceofQualif ication)return(T)toSecureQualif ication((Qualif ication)bean);
if (beaninstanceofTutoriel)return(T)toSecureTutoriel((Tutoriel)bean);
if (beaninstanceofSmsPredefini)return(T)toSecureSmsPredefini((SmsPredefini)bean);
if (beaninstanceofOutBox)return(T)toSecureOutBox((OutBox)bean);
if (beaninstanceofUtilisateur)return(T)toSecureUtilisateur((Utilisateur)bean);returnbean;
if (isSecured!=null){securedList.add(isSecured);
if (policy.canReadPatientIdentif ication()){isSecured=true;transformedBean.setIdentif iant(bean.getIdentif iant());transformedBean.setNom(bean.getNom());transformedBean.setSexe(bean.getSexe());transformedBean.setDateNaissance(bean.getDateNaissance());transformedBean.setAge(bean.getAge());transformedBean.setProfession(bean.getProfession());transformedBean.setCentres(bean.getCentres());transformedBean.setNationalite(bean.getNationalite());transformedBean.setPrecisionSurNationalite(bean.getPrecisionSurNationalite());transformedBean.setRecevoirCarnetTelPortable(bean.getRecevoirCarnetTelPortable());
else {transformedBean.setIdentif iant(null);transformedBean.setNom(null);transformedBean.setSexe(null);transformedBean.setDateNaissance(null);transformedBean.setAge(null);transformedBean.setProfession(null);transformedBean.setCentres(newVector<CentreDiagTrait>());transformedBean.setNationalite(null);transformedBean.setPrecisionSurNationalite(null);transformedBean.setRecevoirCarnetTelPortable(null);
if (policy.canReadPatientContact()){isSecured=true;transformedBean.setTelephoneUn(bean.getTelephoneUn());transformedBean.setTelephoneDeux(bean.getTelephoneDeux());transformedBean.setTelephoneTrois(bean.getTelephoneTrois());transformedBean.setEmail(bean.getEmail());transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setLieuxDits(bean.getLieuxDits());
else {transformedBean.setTelephoneUn(null);transformedBean.setTelephoneDeux(null);transformedBean.setTelephoneTrois(null);transformedBean.setEmail(null);transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setLieuxDits(newVector<LieuDit>());
if (policy.canReadPatientPersonneContact()){isSecured=true;transformedBean.setPacNom(bean.getPacNom());transformedBean.setPacTelephoneUn(bean.getPacTelephoneUn());transformedBean.setPacTelephoneDeux(bean.getPacTelephoneDeux());transformedBean.setPacTelephoneTrois(bean.getPacTelephoneTrois());transformedBean.setPacEmail(bean.getPacEmail());transformedBean.setPacLibelle(bean.getPacLibelle());transformedBean.setPacComplementAdresse(bean.getPacComplementAdresse());transformedBean.setPacQuartier(bean.getPacQuartier());transformedBean.setPacVille(bean.getPacVille());transformedBean.setPacCodePostal(bean.getPacCodePostal());
else {transformedBean.setPacNom(null);transformedBean.setPacTelephoneUn(null);transformedBean.setPacTelephoneDeux(null);transformedBean.setPacTelephoneTrois(null);transformedBean.setPacEmail(null);transformedBean.setPacLibelle(null);transformedBean.setPacComplementAdresse(null);transformedBean.setPacQuartier(null);transformedBean.setPacVille(null);transformedBean.setPacCodePostal(null);
if (policy.canReadPatientTuberculose()){isSecured=true;transformedBean.setCasTuberculose(bean.getCasTuberculose());transformedBean.setCasIndex(bean.getCasIndex());
else {transformedBean.setCasTuberculose(newVector<CasTuberculose>());transformedBean.setCasIndex(newVector<CasIndex>());
if (policy.canReadPatientExamens()){isSecured=true;transformedBean.setExamensBiologiques(bean.getExamensBiologiques());transformedBean.setSerologies(bean.getSerologies());
else {transformedBean.setExamensBiologiques(newVector<ExamenBiologique>());transformedBean.setSerologies(newVector<ExamenSerologie>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadCasIndexDescription()){isSecured=true;
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
if (transformedBean.getPatientLie()==null||bean.getPatientLie()==null||!transformedBean.getPatientLie().getId().equals(bean.getPatientLie().getId())){transformedBean.setPatientLie(bean.getPatientLie());
else {transformedBean.setPatient(null);transformedBean.setPatientLie(null);transformedBean.setTypeRelation(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadCasTuberculoseInformations()){isSecured=true;transformedBean.setIdentif iant(bean.getIdentif iant());transformedBean.setNumRegTB(bean.getNumRegTB());
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
else {transformedBean.setIdentif iant(null);transformedBean.setNumRegTB(null);transformedBean.setPatient(null);transformedBean.setDateDebutTraitement(null);transformedBean.setTypePatient(null);transformedBean.setTypePatientPrecisions(null);transformedBean.setFormeMaladie(null);transformedBean.setExtraPulmonairePrecisions(null);transformedBean.setCotrimoxazole(null);transformedBean.setAntiRetroViraux(null);transformedBean.setFumeur(null);transformedBean.setFumeurArreter(null);
if (policy.canReadCasTuberculoseExamen()){isSecured=true;transformedBean.setExamensMiscrocopies(bean.getExamensMiscrocopies());transformedBean.setExamensATB(bean.getExamensATB());
else {transformedBean.setExamensMiscrocopies(newVector<ExamenMicroscopie>());transformedBean.setExamensATB(newVector<ExamenATB>());
if (policy.canReadCasTuberculoseTraitement()){isSecured=true;
if (transformedBean.getRegimePhaseInitiale()==null||bean.getRegimePhaseInitiale()==null||!transformedBean.getRegimePhaseInitiale().getId().equals(bean.getRegimePhaseInitiale().getId())){transformedBean.setRegimePhaseInitiale(bean.getRegimePhaseInitiale());
if (transformedBean.getRegimePhaseContinuation()==null||bean.getRegimePhaseContinuation()==null||!transformedBean.getRegimePhaseContinuation().getId().equals(bean.getRegimePhaseContinuation().getId())){transformedBean.setRegimePhaseContinuation(bean.getRegimePhaseContinuation());
else {transformedBean.setRegimePhaseInitiale(null);transformedBean.setRegimePhaseContinuation(null);transformedBean.setPriseMedicamenteusePhaseInitiale(newVector<PriseMedicamenteuse>());transformedBean.setPriseMedicamenteusePhaseContinuation(newVector<PriseMedicamenteuse>());transformedBean.setRendezVous(newVector<RendezVous>());
if (policy.canReadCasTuberculoseFinTraitement()){isSecured=true;transformedBean.setDateFinTraitement(bean.getDateFinTraitement());transformedBean.setDevenirMalade(bean.getDevenirMalade());transformedBean.setObservation(bean.getObservation());
else {transformedBean.setDateFinTraitement(null);transformedBean.setDevenirMalade(null);transformedBean.setObservation(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadExamenSerologieDescription()){isSecured=true;
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
else {transformedBean.setPatient(null);transformedBean.setDateTest(null);transformedBean.setNature(null);transformedBean.setResultatVIH(null);transformedBean.setResultatCD4(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadExamenBiologiqueDescription()){isSecured=true;
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
else {transformedBean.setPatient(null);transformedBean.setDate(null);transformedBean.setPoids(null);transformedBean.setObservations(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadExamenMicroscopieCentreExamen()){isSecured=true;
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getLaboratoireReference()==null||bean.getLaboratoireReference()==null||!transformedBean.getLaboratoireReference().getId().equals(bean.getLaboratoireReference().getId())){transformedBean.setLaboratoireReference(bean.getLaboratoireReference());
else {transformedBean.setCDT(null);transformedBean.setLaboratoireReference(null);
if (policy.canReadExamenMicroscopieExamen()){isSecured=true;
if (transformedBean.getCasTb()==null||bean.getCasTb()==null||!transformedBean.getCasTb().getId().equals(bean.getCasTb().getId())){transformedBean.setCasTb(bean.getCasTb());
else {transformedBean.setCasTb(null);transformedBean.setDate(null);transformedBean.setRaisonDepistage(null);transformedBean.setResultat(null);transformedBean.setObservations(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadExamenATBCentreExamen()){isSecured=true;
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getLaboratoireReference()==null||bean.getLaboratoireReference()==null||!transformedBean.getLaboratoireReference().getId().equals(bean.getLaboratoireReference().getId())){transformedBean.setLaboratoireReference(bean.getLaboratoireReference());
else {transformedBean.setCDT(null);transformedBean.setLaboratoireReference(null);
if (policy.canReadExamenATBExamen()){isSecured=true;
if (transformedBean.getCasTb()==null||bean.getCasTb()==null||!transformedBean.getCasTb().getId().equals(bean.getCasTb().getId())){transformedBean.setCasTb(bean.getCasTb());
else {transformedBean.setCasTb(null);transformedBean.setDateExamen(null);transformedBean.setRaisonDepistage(null);transformedBean.setResultat(null);transformedBean.setObservations(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadPriseMedicamenteuseDescription()){isSecured=true;
if (transformedBean.getPhaseIntensive()==null||bean.getPhaseIntensive()==null||!transformedBean.getPhaseIntensive().getId().equals(bean.getPhaseIntensive().getId())){transformedBean.setPhaseIntensive(bean.getPhaseIntensive());
if (transformedBean.getPhaseContinuation()==null||bean.getPhaseContinuation()==null||!transformedBean.getPhaseContinuation().getId().equals(bean.getPhaseContinuation().getId())){transformedBean.setPhaseContinuation(bean.getPhaseContinuation());
else {transformedBean.setPhaseIntensive(null);transformedBean.setPhaseContinuation(null);transformedBean.setDateEffective(null);transformedBean.setPrise(null);transformedBean.setCotrimoxazole(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadRendezVousDescription()){isSecured=true;
if (transformedBean.getCasTb()==null||bean.getCasTb()==null||!transformedBean.getCasTb().getId().equals(bean.getCasTb().getId())){transformedBean.setCasTb(bean.getCasTb());
else {transformedBean.setCasTb(null);transformedBean.setDateRendezVous(null);transformedBean.setHonore(null);transformedBean.setNombreSMSEnvoye(null);transformedBean.setCommentaire(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadTransfertReferenceInformationsDepart()){isSecured=true;transformedBean.setNature(bean.getNature());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDTDepart()==null||bean.getCDTDepart()==null||!transformedBean.getCDTDepart().getId().equals(bean.getCDTDepart().getId())){transformedBean.setCDTDepart(bean.getCDTDepart());
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
else {transformedBean.setNature(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDTDepart(null);transformedBean.setPatient(null);transformedBean.setDateDepart(null);transformedBean.setMotif Depart(null);
if (policy.canReadTransfertReferenceInformationArrivee()){isSecured=true;
if (transformedBean.getRegionArrivee()==null||bean.getRegionArrivee()==null||!transformedBean.getRegionArrivee().getId().equals(bean.getRegionArrivee().getId())){transformedBean.setRegionArrivee(bean.getRegionArrivee());
if (transformedBean.getDistrictSanteArrivee()==null||bean.getDistrictSanteArrivee()==null||!transformedBean.getDistrictSanteArrivee().getId().equals(bean.getDistrictSanteArrivee().getId())){transformedBean.setDistrictSanteArrivee(bean.getDistrictSanteArrivee());
if (transformedBean.getCDTArrivee()==null||bean.getCDTArrivee()==null||!transformedBean.getCDTArrivee().getId().equals(bean.getCDTArrivee().getId())){transformedBean.setCDTArrivee(bean.getCDTArrivee());
else {transformedBean.setRegionArrivee(null);transformedBean.setDistrictSanteArrivee(null);transformedBean.setCDTArrivee(null);transformedBean.setDateArrivee(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadLotDescription()){isSecured=true;
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getMedicament()==null||bean.getMedicament()==null||!transformedBean.getMedicament().getId().equals(bean.getMedicament().getId())){transformedBean.setMedicament(bean.getMedicament());
if (transformedBean.getIntrant()==null||bean.getIntrant()==null||!transformedBean.getIntrant().getId().equals(bean.getIntrant().getId())){transformedBean.setIntrant(bean.getIntrant());
else {transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setNumero(null);transformedBean.setType(null);transformedBean.setMedicament(null);transformedBean.setIntrant(null);transformedBean.setQuantiteInitiale(null);transformedBean.setQuantite(null);transformedBean.setDatePeremption(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadHorsUsageDescription()){isSecured=true;
if (transformedBean.getLot()==null||bean.getLot()==null||!transformedBean.getLot().getId().equals(bean.getLot().getId())){transformedBean.setLot(bean.getLot());
else {transformedBean.setLot(null);transformedBean.setType(null);transformedBean.setMotif (null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadEntreeLotDescription()){isSecured=true;
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getLot()==null||bean.getLot()==null||!transformedBean.getLot().getId().equals(bean.getLot().getId())){transformedBean.setLot(bean.getLot());
else {transformedBean.setCDT(null);transformedBean.setLot(null);transformedBean.setQuantite(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadSortieLotDescription()){isSecured=true;
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getLot()==null||bean.getLot()==null||!transformedBean.getLot().getId().equals(bean.getLot().getId())){transformedBean.setLot(bean.getLot());
else {transformedBean.setCDT(null);transformedBean.setLot(null);transformedBean.setQuantite(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadCommandeInformationsDepart()){isSecured=true;transformedBean.setDate(bean.getDate());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
else {transformedBean.setDate(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setMedicaments(newVector<DetailCommandeMedicament>());transformedBean.setIntrants(newVector<DetailCommandeIntrant>());
if (policy.canReadCommandeRegionApprobation()){isSecured=true;transformedBean.setApprouveeRegion(bean.getApprouveeRegion());transformedBean.setMotif RejetRegion(bean.getMotif RejetRegion());
else {transformedBean.setApprouveeRegion(null);transformedBean.setMotif RejetRegion(null);
if (policy.canReadCommandeGtcApprobation()){isSecured=true;transformedBean.setApprouveeGTC(bean.getApprouveeGTC());transformedBean.setMotif RejetGTC(bean.getMotif RejetGTC());
else {transformedBean.setApprouveeGTC(null);transformedBean.setMotif RejetGTC(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailCommandeMedicamentDescription()){isSecured=true;
if (transformedBean.getCommande()==null||bean.getCommande()==null||!transformedBean.getCommande().getId().equals(bean.getCommande().getId())){transformedBean.setCommande(bean.getCommande());
if (transformedBean.getMedicament()==null||bean.getMedicament()==null||!transformedBean.getMedicament().getId().equals(bean.getMedicament().getId())){transformedBean.setMedicament(bean.getMedicament());
else {transformedBean.setCommande(null);transformedBean.setMedicament(null);transformedBean.setQuantiteRequise(null);transformedBean.setQuantiteEnStock(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailCommandeIntrantDescription()){isSecured=true;
if (transformedBean.getCommande()==null||bean.getCommande()==null||!transformedBean.getCommande().getId().equals(bean.getCommande().getId())){transformedBean.setCommande(bean.getCommande());
if (transformedBean.getIntrant()==null||bean.getIntrant()==null||!transformedBean.getIntrant().getId().equals(bean.getIntrant().getId())){transformedBean.setIntrant(bean.getIntrant());
else {transformedBean.setCommande(null);transformedBean.setIntrant(null);transformedBean.setQuantiteRequise(null);transformedBean.setQuantiteEnStock(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadReceptionDescription()){isSecured=true;
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getCommande()==null||bean.getCommande()==null||!transformedBean.getCommande().getId().equals(bean.getCommande().getId())){transformedBean.setCommande(bean.getCommande());
else {transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setCommande(null);transformedBean.setDateReception(null);transformedBean.setMedicaments(newVector<DetailReceptionMedicament>());transformedBean.setIntrants(newVector<DetailReceptionIntrant>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailReceptionMedicamentDescription()){isSecured=true;
if (transformedBean.getReception()==null||bean.getReception()==null||!transformedBean.getReception().getId().equals(bean.getReception().getId())){transformedBean.setReception(bean.getReception());
if (transformedBean.getCommande()==null||bean.getCommande()==null||!transformedBean.getCommande().getId().equals(bean.getCommande().getId())){transformedBean.setCommande(bean.getCommande());
if (transformedBean.getDetailCommande()==null||bean.getDetailCommande()==null||!transformedBean.getDetailCommande().getId().equals(bean.getDetailCommande().getId())){transformedBean.setDetailCommande(bean.getDetailCommande());
if (transformedBean.getEntreeLot()==null||bean.getEntreeLot()==null||!transformedBean.getEntreeLot().getId().equals(bean.getEntreeLot().getId())){transformedBean.setEntreeLot(bean.getEntreeLot());
else {transformedBean.setReception(null);transformedBean.setCommande(null);transformedBean.setDetailCommande(null);transformedBean.setEntreeLot(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailReceptionIntrantDescription()){isSecured=true;
if (transformedBean.getReception()==null||bean.getReception()==null||!transformedBean.getReception().getId().equals(bean.getReception().getId())){transformedBean.setReception(bean.getReception());
if (transformedBean.getCommande()==null||bean.getCommande()==null||!transformedBean.getCommande().getId().equals(bean.getCommande().getId())){transformedBean.setCommande(bean.getCommande());
if (transformedBean.getDetailCommande()==null||bean.getDetailCommande()==null||!transformedBean.getDetailCommande().getId().equals(bean.getDetailCommande().getId())){transformedBean.setDetailCommande(bean.getDetailCommande());
if (transformedBean.getEntreeLot()==null||bean.getEntreeLot()==null||!transformedBean.getEntreeLot().getId().equals(bean.getEntreeLot().getId())){transformedBean.setEntreeLot(bean.getEntreeLot());
else {transformedBean.setReception(null);transformedBean.setCommande(null);transformedBean.setDetailCommande(null);transformedBean.setEntreeLot(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadRavitaillementInformationsDepart()){isSecured=true;
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDTDepart()==null||bean.getCDTDepart()==null||!transformedBean.getCDTDepart().getId().equals(bean.getCDTDepart().getId())){transformedBean.setCDTDepart(bean.getCDTDepart());
else {transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDTDepart(null);transformedBean.setDateDepart(null);
if (policy.canReadRavitaillementInformationArrivee()){isSecured=true;
if (transformedBean.getRegionArrivee()==null||bean.getRegionArrivee()==null||!transformedBean.getRegionArrivee().getId().equals(bean.getRegionArrivee().getId())){transformedBean.setRegionArrivee(bean.getRegionArrivee());
if (transformedBean.getDistrictSanteArrivee()==null||bean.getDistrictSanteArrivee()==null||!transformedBean.getDistrictSanteArrivee().getId().equals(bean.getDistrictSanteArrivee().getId())){transformedBean.setDistrictSanteArrivee(bean.getDistrictSanteArrivee());
if (transformedBean.getCDTArrivee()==null||bean.getCDTArrivee()==null||!transformedBean.getCDTArrivee().getId().equals(bean.getCDTArrivee().getId())){transformedBean.setCDTArrivee(bean.getCDTArrivee());
else {transformedBean.setRegionArrivee(null);transformedBean.setDistrictSanteArrivee(null);transformedBean.setCDTArrivee(null);transformedBean.setDateArrivee(null);
if (policy.canReadRavitaillementDetail()){isSecured=true;transformedBean.setDetails(bean.getDetails());
else {transformedBean.setDetails(newVector<DetailRavitaillement>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailRavitaillementDescription()){isSecured=true;
if (transformedBean.getRavitaillement()==null||bean.getRavitaillement()==null||!transformedBean.getRavitaillement().getId().equals(bean.getRavitaillement().getId())){transformedBean.setRavitaillement(bean.getRavitaillement());
else {transformedBean.setRavitaillement(null);
if (policy.canReadDetailRavitaillementSortie()){isSecured=true;
if (transformedBean.getSortieLot()==null||bean.getSortieLot()==null||!transformedBean.getSortieLot().getId().equals(bean.getSortieLot().getId())){transformedBean.setSortieLot(bean.getSortieLot());
else {transformedBean.setSortieLot(null);
if (policy.canReadDetailRavitaillementEntree()){isSecured=true;
if (transformedBean.getEntreeLot()==null||bean.getEntreeLot()==null||!transformedBean.getEntreeLot().getId().equals(bean.getEntreeLot().getId())){transformedBean.setEntreeLot(bean.getEntreeLot());
else {transformedBean.setEntreeLot(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadInventaireInformationsDepart()){isSecured=true;transformedBean.setDate(bean.getDate());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
else {transformedBean.setDate(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setDetails(newVector<DetailInventaire>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDetailInventaireDescription()){isSecured=true;
if (transformedBean.getInventaire()==null||bean.getInventaire()==null||!transformedBean.getInventaire().getId().equals(bean.getInventaire().getId())){transformedBean.setInventaire(bean.getInventaire());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getLot()==null||bean.getLot()==null||!transformedBean.getLot().getId().equals(bean.getLot().getId())){transformedBean.setLot(bean.getLot());
else {transformedBean.setInventaire(null);transformedBean.setCDT(null);transformedBean.setLot(null);transformedBean.setQuantiteReelle(null);transformedBean.setQuantiteTheorique(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadPersonnelIdentif ication()){isSecured=true;transformedBean.setNom(bean.getNom());transformedBean.setDateNaissance(bean.getDateNaissance());transformedBean.setProfession(bean.getProfession());
else {transformedBean.setNom(null);transformedBean.setDateNaissance(null);transformedBean.setProfession(null);
if (policy.canReadPersonnelContact()){isSecured=true;transformedBean.setTelephoneUn(bean.getTelephoneUn());transformedBean.setTelephoneDeux(bean.getTelephoneDeux());transformedBean.setTelephoneTrois(bean.getTelephoneTrois());transformedBean.setEmail(bean.getEmail());transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());
else {transformedBean.setTelephoneUn(null);transformedBean.setTelephoneDeux(null);transformedBean.setTelephoneTrois(null);transformedBean.setEmail(null);transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);
if (policy.canReadPersonnelSituation()){isSecured=true;transformedBean.setDateDepart(bean.getDateDepart());transformedBean.setDateArrivee(bean.getDateArrivee());transformedBean.setAEteForme(bean.getAEteForme());transformedBean.setQualif ication(bean.getQualif ication());
else {transformedBean.setDateDepart(null);transformedBean.setDateArrivee(null);transformedBean.setAEteForme(null);transformedBean.setQualif ication(newVector<Qualif ication>());
if (policy.canReadPersonnelNiveauAccess()){isSecured=true;transformedBean.setNiveau(bean.getNiveau());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
else {transformedBean.setNiveau(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setActif (null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDepartPersonnelPersonnel()){isSecured=true;
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getPersonnel()==null||bean.getPersonnel()==null||!transformedBean.getPersonnel().getId().equals(bean.getPersonnel().getId())){transformedBean.setPersonnel(bean.getPersonnel());
else {transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setPersonnel(null);
if (policy.canReadDepartPersonnelDescription()){isSecured=true;transformedBean.setDateDepart(bean.getDateDepart());transformedBean.setMotif Depart(bean.getMotif Depart());
else {transformedBean.setDateDepart(null);transformedBean.setMotif Depart(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadArriveePersonnelDescription()){isSecured=true;
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getPersonnel()==null||bean.getPersonnel()==null||!transformedBean.getPersonnel().getId().equals(bean.getPersonnel().getId())){transformedBean.setPersonnel(bean.getPersonnel());
else {transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setPersonnel(null);transformedBean.setDateArrivee(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadRegionDescription()){isSecured=true;transformedBean.setCode(bean.getCode());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());transformedBean.setDistrictSantes(bean.getDistrictSantes());
else {transformedBean.setCode(null);transformedBean.setNom(null);transformedBean.setDescription(null);transformedBean.setDistrictSantes(newVector<DistrictSante>());
if (policy.canReadRegionAdresse()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setCoordonnees(bean.getCoordonnees());
else {transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setCoordonnees(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadDistrictSanteDescription()){isSecured=true;transformedBean.setCode(bean.getCode());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
else {transformedBean.setCode(null);transformedBean.setNom(null);transformedBean.setDescription(null);transformedBean.setRegion(null);
if (policy.canReadDistrictSanteAdresse()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setCoordonnees(bean.getCoordonnees());
else {transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setCoordonnees(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadCentreDiagTraitDescription()){isSecured=true;transformedBean.setCode(bean.getCode());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
else {transformedBean.setCode(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setNom(null);transformedBean.setDescription(null);
if (policy.canReadCentreDiagTraitAdresse()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setCoordonnees(bean.getCoordonnees());transformedBean.setLieuxDits(bean.getLieuxDits());
else {transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setCoordonnees(null);transformedBean.setLieuxDits(newVector<LieuDit>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadLaboratoireReferenceDescription()){isSecured=true;transformedBean.setNom(bean.getNom());transformedBean.setNature(bean.getNature());transformedBean.setDescription(bean.getDescription());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
else {transformedBean.setNom(null);transformedBean.setNature(null);transformedBean.setDescription(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);
if (policy.canReadLaboratoireReferenceAdresse()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setCoordonnees(bean.getCoordonnees());transformedBean.setLieuxDits(bean.getLieuxDits());
else {transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setCoordonnees(null);transformedBean.setLieuxDits(newVector<LieuDit>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadLieuDitDescription()){isSecured=true;transformedBean.setCode(bean.getCode());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());
else {transformedBean.setCode(null);transformedBean.setNom(null);transformedBean.setDescription(null);
if (policy.canReadLieuDitAdresse()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());transformedBean.setCoordonnees(bean.getCoordonnees());
else {transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);transformedBean.setCoordonnees(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadRegimeDescription()){isSecured=true;transformedBean.setNom(bean.getNom());transformedBean.setType(bean.getType());transformedBean.setDureeTraitement(bean.getDureeTraitement());transformedBean.setPoidsMin(bean.getPoidsMin());transformedBean.setPoidsMax(bean.getPoidsMax());transformedBean.setDescription(bean.getDescription());transformedBean.setPrisesMedicamenteuses(bean.getPrisesMedicamenteuses());transformedBean.setActif (bean.getActif ());
else {transformedBean.setNom(null);transformedBean.setType(null);transformedBean.setDureeTraitement(null);transformedBean.setPoidsMin(null);transformedBean.setPoidsMax(null);transformedBean.setDescription(null);transformedBean.setPrisesMedicamenteuses(newVector<PriseMedicamentRegime>());transformedBean.setActif (null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadPriseMedicamentRegimeDescription()){isSecured=true;
if (transformedBean.getRegime()==null||bean.getRegime()==null||!transformedBean.getRegime().getId().equals(bean.getRegime().getId())){transformedBean.setRegime(bean.getRegime());
if (transformedBean.getMedicament()==null||bean.getMedicament()==null||!transformedBean.getMedicament().getId().equals(bean.getMedicament().getId())){transformedBean.setMedicament(bean.getMedicament());
else {transformedBean.setRegime(null);transformedBean.setMedicament(null);transformedBean.setQuantite(null);transformedBean.setQuantiteUnite(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadMedicamentDescription()){isSecured=true;transformedBean.setCode(bean.getCode());transformedBean.setDesignation(bean.getDesignation());transformedBean.setSeuilPatient(bean.getSeuilPatient());transformedBean.setEstMedicamentAntituberculeux(bean.getEstMedicamentAntituberculeux());
else {transformedBean.setCode(null);transformedBean.setDesignation(null);transformedBean.setSeuilPatient(null);transformedBean.setEstMedicamentAntituberculeux(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadIntrantDescription()){isSecured=true;transformedBean.setIdentif iant(bean.getIdentif iant());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());transformedBean.setSeuilPatient(bean.getSeuilPatient());
else {transformedBean.setIdentif iant(null);transformedBean.setNom(null);transformedBean.setDescription(null);transformedBean.setSeuilPatient(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadFormationDescription()){isSecured=true;transformedBean.setLibelle(bean.getLibelle());transformedBean.setDateDebut(bean.getDateDebut());transformedBean.setDateFin(bean.getDateFin());transformedBean.setLieu(bean.getLieu());transformedBean.setObjectif s(bean.getObjectif s());transformedBean.setEffectuee(bean.getEffectuee());transformedBean.setCandidatures(bean.getCandidatures());
else {transformedBean.setLibelle(null);transformedBean.setDateDebut(null);transformedBean.setDateFin(null);transformedBean.setLieu(null);transformedBean.setObjectif s(null);transformedBean.setEffectuee(null);transformedBean.setCandidatures(newVector<CandidatureFormation>());
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadCandidatureFormationDescription()){isSecured=true;
if (transformedBean.getFormation()==null||bean.getFormation()==null||!transformedBean.getFormation().getId().equals(bean.getFormation().getId())){transformedBean.setFormation(bean.getFormation());
if (transformedBean.getRegion()==null||bean.getRegion()==null||!transformedBean.getRegion().getId().equals(bean.getRegion().getId())){transformedBean.setRegion(bean.getRegion());
if (transformedBean.getDistrictSante()==null||bean.getDistrictSante()==null||!transformedBean.getDistrictSante().getId().equals(bean.getDistrictSante().getId())){transformedBean.setDistrictSante(bean.getDistrictSante());
if (transformedBean.getCDT()==null||bean.getCDT()==null||!transformedBean.getCDT().getId().equals(bean.getCDT().getId())){transformedBean.setCDT(bean.getCDT());
if (transformedBean.getPersonnel()==null||bean.getPersonnel()==null||!transformedBean.getPersonnel().getId().equals(bean.getPersonnel().getId())){transformedBean.setPersonnel(bean.getPersonnel());
else {transformedBean.setFormation(null);transformedBean.setRegion(null);transformedBean.setDistrictSante(null);transformedBean.setCDT(null);transformedBean.setPersonnel(null);
if (policy.canReadCandidatureFormationRegionApprobation()){isSecured=true;transformedBean.setApprouveeRegion(bean.getApprouveeRegion());transformedBean.setMotif RejetRegion(bean.getMotif RejetRegion());
else {transformedBean.setApprouveeRegion(null);transformedBean.setMotif RejetRegion(null);
if (policy.canReadCandidatureFormationGtcApprobation()){isSecured=true;transformedBean.setApprouveeGTC(bean.getApprouveeGTC());transformedBean.setMotif RejetGTC(bean.getMotif RejetGTC());
else {transformedBean.setApprouveeGTC(null);transformedBean.setMotif RejetGTC(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadQualif icationDescription()){isSecured=true;transformedBean.setCode(bean.getCode());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());
else {transformedBean.setCode(null);transformedBean.setNom(null);transformedBean.setDescription(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadTutorielDescription()){isSecured=true;transformedBean.setReference(bean.getReference());transformedBean.setNom(bean.getNom());transformedBean.setDescription(bean.getDescription());transformedBean.setType(bean.getType());transformedBean.setAudioT(bean.getAudioT());transformedBean.setVideoT(bean.getVideoT());transformedBean.setTextT(bean.getTextT());
else {transformedBean.setReference(null);transformedBean.setNom(null);transformedBean.setDescription(null);transformedBean.setType(null);transformedBean.setAudioT(null);transformedBean.setVideoT(null);transformedBean.setTextT(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadSmsPredefiniDescription()){isSecured=true;transformedBean.setType(bean.getType());transformedBean.setObjet(bean.getObjet());transformedBean.setPeriodicite(bean.getPeriodicite());transformedBean.setDateEnvoyeSMSPonctuel(bean.getDateEnvoyeSMSPonctuel());transformedBean.setStatut(bean.getStatut());transformedBean.setMessage(bean.getMessage());transformedBean.setReponse1(bean.getReponse1());transformedBean.setReponse2(bean.getReponse2());transformedBean.setBonneReponse(bean.getBonneReponse());transformedBean.setEnvoyerAPartirDe(bean.getEnvoyerAPartirDe());transformedBean.setArreterEnvoyerA(bean.getArreterEnvoyerA());
else {transformedBean.setType(null);transformedBean.setObjet(null);transformedBean.setPeriodicite(null);transformedBean.setDateEnvoyeSMSPonctuel(null);transformedBean.setStatut(null);transformedBean.setMessage(null);transformedBean.setReponse1(null);transformedBean.setReponse2(null);transformedBean.setBonneReponse(null);transformedBean.setEnvoyerAPartirDe(null);transformedBean.setArreterEnvoyerA(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadOutBoxAdresse()){isSecured=true;
if (transformedBean.getPatient()==null||bean.getPatient()==null||!transformedBean.getPatient().getId().equals(bean.getPatient().getId())){transformedBean.setPatient(bean.getPatient());
else {transformedBean.setPatient(null);
if (policy.canReadOutBoxMessageInformation()){isSecured=true;transformedBean.setMessage(bean.getMessage());transformedBean.setReponse(bean.getReponse());transformedBean.setStatut(bean.getStatut());transformedBean.setDateDernierEssai(bean.getDateDernierEssai());
else {transformedBean.setMessage(null);transformedBean.setReponse(null);transformedBean.setStatut(null);transformedBean.setDateDernierEssai(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (policy.canReadUtilisateurIdentif ication()){isSecured=true;transformedBean.setNom(bean.getNom());transformedBean.setDateNaissance(bean.getDateNaissance());transformedBean.setProfession(bean.getProfession());
else {transformedBean.setNom(null);transformedBean.setDateNaissance(null);transformedBean.setProfession(null);
if (policy.canReadUtilisateurContact()){isSecured=true;transformedBean.setTelephoneUn(bean.getTelephoneUn());transformedBean.setTelephoneDeux(bean.getTelephoneDeux());transformedBean.setTelephoneTrois(bean.getTelephoneTrois());transformedBean.setEmail(bean.getEmail());transformedBean.setLibelle(bean.getLibelle());transformedBean.setComplementAdresse(bean.getComplementAdresse());transformedBean.setQuartier(bean.getQuartier());transformedBean.setVille(bean.getVille());transformedBean.setCodePostal(bean.getCodePostal());
else {transformedBean.setTelephoneUn(null);transformedBean.setTelephoneDeux(null);transformedBean.setTelephoneTrois(null);transformedBean.setEmail(null);transformedBean.setLibelle(null);transformedBean.setComplementAdresse(null);transformedBean.setQuartier(null);transformedBean.setVille(null);transformedBean.setCodePostal(null);
if (isSecured){returntransformedBean;
else {returnnull;
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("casTb").join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("casTb").join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if (commande_dateBeforeBox.getValue()!=null){FilterCriteriacommande_dateBeforeCrit=newFilterCriteria();commande_dateBeforeCrit.setField("commande.date");commande_dateBeforeCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_inferior());commande_dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);commande_dateBeforeCrit.setValue(DateUtil.getDate(commande_dateBeforeBox.getValue()));commande_dateBeforeCrit.setValueDisplayName(DateUtil.getDate(commande_dateBeforeBox.getValue()));criteria.add(commande_dateBeforeCrit);
if (commande_dateAfterBox.getValue()!=null){FilterCriteriacommande_dateAfterCrit=newFilterCriteria();commande_dateAfterCrit.setField("commande.date");commande_dateAfterCrit.setFieldDisplayName(NLS.constants().commande_field_date()+BaseNLS.constants().search_operator_superior());commande_dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);commande_dateAfterCrit.setValue(DateUtil.getDate(commande_dateAfterBox.getValue()));commande_dateAfterCrit.setValueDisplayName(DateUtil.getDate(commande_dateAfterBox.getValue()));criteria.add(commande_dateAfterCrit);
if (detailcommande_quantiteRequiseBox.getValue()==null)detailcommande_quantiteRequiseCrit.setValue(null);
else detailcommande_quantiteRequiseCrit.setValue(String.valueOf(detailcommande_quantiteRequiseBox.getValue()));detailcommande_quantiteRequiseCrit.setValueDisplayName(String.valueOf(detailcommande_quantiteRequiseBox.getValue()));criteria.add(detailcommande_quantiteRequiseCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadCentreDiagTraitDescription())commande_cdt_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCommandeInformationsDepart()){commande_dateBeforeFilterBox.setVisible(false);commande_dateAfterFilterBox.setVisible(false);
if (!AccessManager.canReadIntrantDescription())detailcommande_intrant_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadDetailCommandeIntrantDescription())detailcommande_quantiteRequiseFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (parent!=null){editor=newEnvoiSMSEditor(factory,true);this.initField=initField;
else editor=newEnvoiSMSEditor(factory);isNew=true;setEditable(true);setTitle(BaseNLS.constants().envoiSMS_create_title());createNewEnvoiSMS();this.setContent(editor);
if (parent!=null){editor=newEnvoiSMSEditor(factory,true);this.initField=initField;
else editor=newEnvoiSMSEditor(factory);setModif iable(false);isNew=false;setEditable(false);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {requestFactory.getEventBus().fireEvent(closeEvent);
if relationfieldshallbelocked(noneditable)publicvoidsetSms(SmsPredefiniProxyvalue,booleanisLocked){editor.setSms(value,isLocked);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicTutorielFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newTutorielEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newTutorielEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newTutorielEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newTutorielEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.TUTORIEL_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.TUTORIEL_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicTutorielFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicRegionDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegion(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedRegionReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listRegion(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegion(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedRegionReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listRegion(start,numRows,"nom",true,filterCriteria);
else result=request.getRegionEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegion(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedRegionReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listRegion(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRegion(start,numRows,"nom",true,property);
else result=request.listNonAffectedRegionReverse(start,numRows,"nom",true,property);
else result=request.listRegion(start,numRows,"nom",true);
if (isFiltered){result.with("nom");
else {result.with("nom");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listRegion(start,numRows,property,asc,searchCriterions);
else result=request.listRegion(start,numRows,property,asc,filterCriteria);
else result=request.getRegionEmptyList();
else {
if (searchCriterions!=null)result=request.listRegion(start,numRows,property,asc,searchCriterions);
else result=request.listRegion(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegion(property,searchCriterions);
else returnrequest.countNonAffectedRegionReverse(property,searchCriterions);
else returnrequest.countRegion(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegion(property,filterCriteria);
else returnrequest.countNonAffectedRegionReverse(property,filterCriteria);
else returnrequest.countRegion(filterCriteria);
else returnrequest.countNonAffectedRegion("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegion(property,searchCriterions);
else returnrequest.countNonAffectedRegionReverse(property,searchCriterions);
else returnrequest.countRegion(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRegion(property);
else returnrequest.countNonAffectedRegionReverse(property);
else returnrequest.countRegion();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();RegionRequestrequest=(RegionRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldCodeBasicCriteriaProxycodeCrit=request.create(BasicCriteriaProxy.class);codeCrit.setField("code");codeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);codeCrit.setValue(text);buffer.append("("+NLS.constants().region_field_code()+":"+text+")"+SYMBOL_OR+"");criterionList.add(codeCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().region_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (binary!=null){BinaryDescdesc=newBinaryDesc();desc.setId(binary.getId());desc.setName(binary.getFileName());desc.setSize(binary.getLength());returndesc;
if (searchText==null)handler.listFormation();
else handler.listFormation(searchText);
if (behavior==null){thisBehavior=newDefaultAddressBehavior();
else {thisBehavior=behavior;
if (!enabled){textBoxLong.addStyleDependentName("disabled");textBoxLat.addStyleDependentName("disabled");viewOnMap.addStyleDependentName("clickable");
else {textBoxLong.removeStyleDependentName("disabled");textBoxLat.removeStyleDependentName("disabled");viewOnMap.removeStyleDependentName("clickable");
if (clickable&&getValue()!=null)thisBehavior.addressAction(getValue());
else {textBoxLong.setValue(null);textBoxLat.setValue(null);
else {textBoxLong.setValue(null);textBoxLat.setValue(null);
if (isNull())returnnull;
else {Doublelongitude=null;Doublelatitude=null;try{longitude=textBoxLong.getValueOrThrow();
else returnlongitude+";"+latitude;
if theboxvalueisnull*@returnprivatebooleanisNull(){if (textBoxLong.getValue()==null&&textBoxLat.getValue()==null)returntrue;
else returnfalse;
if (isNull())returnnull;
else returntextBoxLong.getValueOrThrow()+";"+textBoxLat.getValueOrThrow();
if (AccessManager.canReadCasIndexDescription()){Column<CasIndexProxy,String>patientColumn=newPatientColumn();patientColumn.setSortable(true);table.addColumn(patientColumn,NLS.constants().casIndex_field_s_patient());
if (AccessManager.canReadCasIndexDescription()){Column<CasIndexProxy,String>typeRelationColumn=newTypeRelationColumn();typeRelationColumn.setSortable(true);table.addColumn(typeRelationColumn,NLS.constants().casIndex_field_s_typeRelation());
if (AccessManager.canReadCasIndexDescription()){Column<CasIndexProxy,String>patientLieColumn=newPatientLieColumn();patientLieColumn.setSortable(true);table.addColumn(patientLieColumn,NLS.constants().casIndex_field_s_patientLie());
if (AccessManager.canCreateCasIndex()&&AccessManager.canEditCasIndex()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/casindex/",true);
else returnnull;
if (AccessManager.canDeleteCasIndex()&&AccessManager.canEditCasIndex()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteCasIndex()&&AccessManager.canEditCasIndex()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<CasIndexProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().casIndex_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(CasIndexProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getCasIndexRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedCasIndexentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListCasIndexEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportCasIndex()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.CAS_INDEX_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=casIndex_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPatient()==null)value="";
else value=renderer.getDisplayValue(object.getPatient());
if (object!=null){
if (object.getTypeRelation()==null)value="";
else value=object.getTypeRelation();
if (object!=null){
if (object.getPatientLie()==null)value="";
else value=renderer.getDisplayValue(object.getPatientLie());
if (value!=null&&!"".equals(value)){barcode.setUrl(GWT.getHostPageBaseURL()+"getbinary?barcodeId="+value);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicLaboratoireReferenceDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLaboratoireReference(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedLaboratoireReferenceReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listLaboratoireReference(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLaboratoireReference(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedLaboratoireReferenceReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listLaboratoireReference(start,numRows,"nom",true,filterCriteria);
else result=request.getLaboratoireReferenceEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLaboratoireReference(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedLaboratoireReferenceReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listLaboratoireReference(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLaboratoireReference(start,numRows,"nom",true,property);
else result=request.listNonAffectedLaboratoireReferenceReverse(start,numRows,"nom",true,property);
else result=request.listLaboratoireReference(start,numRows,"nom",true);
if (isFiltered){result.with("nom");
else {result.with("nom");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listLaboratoireReference(start,numRows,property,asc,searchCriterions);
else result=request.listLaboratoireReference(start,numRows,property,asc,filterCriteria);
else result=request.getLaboratoireReferenceEmptyList();
else {
if (searchCriterions!=null)result=request.listLaboratoireReference(start,numRows,property,asc,searchCriterions);
else result=request.listLaboratoireReference(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLaboratoireReference(property,searchCriterions);
else returnrequest.countNonAffectedLaboratoireReferenceReverse(property,searchCriterions);
else returnrequest.countLaboratoireReference(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLaboratoireReference(property,filterCriteria);
else returnrequest.countNonAffectedLaboratoireReferenceReverse(property,filterCriteria);
else returnrequest.countLaboratoireReference(filterCriteria);
else returnrequest.countNonAffectedLaboratoireReference("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLaboratoireReference(property,searchCriterions);
else returnrequest.countNonAffectedLaboratoireReferenceReverse(property,searchCriterions);
else returnrequest.countLaboratoireReference(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLaboratoireReference(property);
else returnrequest.countNonAffectedLaboratoireReferenceReverse(property);
else returnrequest.countLaboratoireReference();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();LaboratoireReferenceRequestrequest=(LaboratoireReferenceRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))nomCrit.setField("nom.francais");
if (locale.equals("en"))nomCrit.setField("nom.english");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().laboratoireReference_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldNature
if (text.toLowerCase().equals(NLS.constants().laboratoireReference_nature_national_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_NATIONAL);buffer.append("("+NLS.constants().laboratoireReference_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (text.toLowerCase().equals(NLS.constants().laboratoireReference_nature_regional_option().toLowerCase())){BasicCriteriaProxynatureCrit=request.create(BasicCriteriaProxy.class);natureCrit.setField("nature");natureCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);natureCrit.setValue(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_REGIONAL);buffer.append("("+NLS.constants().laboratoireReference_field_nature()+":"+text+")"+SYMBOL_OR+"");criterionList.add(natureCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(PriseMedicamentRegimeentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<PriseMedicamentRegime>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<PriseMedicamentRegime>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<PriseMedicamentRegime>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(PriseMedicamentRegimeentity:entities)delete(entity);
if (medicament_designation!=null&&!medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("medicament.designation");criteria.setValue(medicament_designation);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (entity.getCommande()!=null){bck.setCommande(entity.getCommande().getId());
if (entity.getIntrant()!=null){bck.setIntrant(entity.getIntrant().getId());
if (handler==null)initHandler();returnhandler.findById(id);
if therelationfieldbuttonsshallbehiddenpublicCasIndexEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpatientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patientLie=newImogSingleRelationBox<PatientProxy>(patientLieDataProvider,EpicamRenderer.get());
else patientLie=newImogSingleRelationBox<PatientProxy>(false,patientLieDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patient.setEdited(isEdited);patientLie.setEdited(isEdited);typeRelation.setEdited(isEdited);
if (!AccessManager.canReadCasIndexDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditCasIndexDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPatientLie(PatientProxyvalue,booleanisLocked){patientLie.setLocked(isLocked);patientLie.setValue(value);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (patientLie.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patientLie.getValue().getId(),relationPopup,"patientLie");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patientLie"))patientLie.setValue(value,true);
if (patient.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patient");//patientLieisarequiredfield
if (patientLie.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patientLie");//typeRelationisarequiredfield
if (typeRelation.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"typeRelation");
if (errors!=null&&errors.size()>0){List<EditorError>patientFieldErrors=newArrayList<EditorError>();List<EditorError>patientLieFieldErrors=newArrayList<EditorError>();List<EditorError>typeRelationFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("patient"))patientFieldErrors.add(error);
if (field.equals("patientLie"))patientLieFieldErrors.add(error);
if (field.equals("typeRelation"))typeRelationFieldErrors.add(error);
if (patientFieldErrors.size()>0)patient.showErrors(patientFieldErrors);
if (patientLieFieldErrors.size()>0)patientLie.showErrors(patientLieFieldErrors);
if (typeRelationFieldErrors.size()>0)typeRelation.showErrors(typeRelationFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if (handler==null)initHandler();return(BinaryFile)handler.getBinary(id);
if (bean.getDeleted()!=null)returnBaseNLS.constants().entity_deleted();
if (beaninstanceofPatientProxy){returngetDisplayValue((PatientProxy)bean);
if (beaninstanceofCasIndexProxy){returngetDisplayValue((CasIndexProxy)bean);
if (beaninstanceofCasTuberculoseProxy){returngetDisplayValue((CasTuberculoseProxy)bean);
if (beaninstanceofExamenSerologieProxy){returngetDisplayValue((ExamenSerologieProxy)bean);
if (beaninstanceofExamenBiologiqueProxy){returngetDisplayValue((ExamenBiologiqueProxy)bean);
if (beaninstanceofExamenMicroscopieProxy){returngetDisplayValue((ExamenMicroscopieProxy)bean);
if (beaninstanceofExamenATBProxy){returngetDisplayValue((ExamenATBProxy)bean);
if (beaninstanceofPriseMedicamenteuseProxy){returngetDisplayValue((PriseMedicamenteuseProxy)bean);
if (beaninstanceofRendezVousProxy){returngetDisplayValue((RendezVousProxy)bean);
if (beaninstanceofTransfertReferenceProxy){returngetDisplayValue((TransfertReferenceProxy)bean);
if (beaninstanceofLotProxy){returngetDisplayValue((LotProxy)bean);
if (beaninstanceofHorsUsageProxy){returngetDisplayValue((HorsUsageProxy)bean);
if (beaninstanceofEntreeLotProxy){returngetDisplayValue((EntreeLotProxy)bean);
if (beaninstanceofSortieLotProxy){returngetDisplayValue((SortieLotProxy)bean);
if (beaninstanceofCommandeProxy){returngetDisplayValue((CommandeProxy)bean);
if (beaninstanceofDetailCommandeMedicamentProxy){returngetDisplayValue((DetailCommandeMedicamentProxy)bean);
if (beaninstanceofDetailCommandeIntrantProxy){returngetDisplayValue((DetailCommandeIntrantProxy)bean);
if (beaninstanceofReceptionProxy){returngetDisplayValue((ReceptionProxy)bean);
if (beaninstanceofDetailReceptionMedicamentProxy){returngetDisplayValue((DetailReceptionMedicamentProxy)bean);
if (beaninstanceofDetailReceptionIntrantProxy){returngetDisplayValue((DetailReceptionIntrantProxy)bean);
if (beaninstanceofRavitaillementProxy){returngetDisplayValue((RavitaillementProxy)bean);
if (beaninstanceofDetailRavitaillementProxy){returngetDisplayValue((DetailRavitaillementProxy)bean);
if (beaninstanceofInventaireProxy){returngetDisplayValue((InventaireProxy)bean);
if (beaninstanceofDetailInventaireProxy){returngetDisplayValue((DetailInventaireProxy)bean);
if (beaninstanceofPersonnelProxy){returngetDisplayValue((PersonnelProxy)bean);
if (beaninstanceofDepartPersonnelProxy){returngetDisplayValue((DepartPersonnelProxy)bean);
if (beaninstanceofArriveePersonnelProxy){returngetDisplayValue((ArriveePersonnelProxy)bean);
if (beaninstanceofRegionProxy){returngetDisplayValue((RegionProxy)bean);
if (beaninstanceofDistrictSanteProxy){returngetDisplayValue((DistrictSanteProxy)bean);
if (beaninstanceofCentreDiagTraitProxy){returngetDisplayValue((CentreDiagTraitProxy)bean);
if (beaninstanceofLaboratoireReferenceProxy){returngetDisplayValue((LaboratoireReferenceProxy)bean);
if (beaninstanceofLieuDitProxy){returngetDisplayValue((LieuDitProxy)bean);
if (beaninstanceofRegimeProxy){returngetDisplayValue((RegimeProxy)bean);
if (beaninstanceofPriseMedicamentRegimeProxy){returngetDisplayValue((PriseMedicamentRegimeProxy)bean);
if (beaninstanceofMedicamentProxy){returngetDisplayValue((MedicamentProxy)bean);
if (beaninstanceofIntrantProxy){returngetDisplayValue((IntrantProxy)bean);
if (beaninstanceofFormationProxy){returngetDisplayValue((FormationProxy)bean);
if (beaninstanceofCandidatureFormationProxy){returngetDisplayValue((CandidatureFormationProxy)bean);
if (beaninstanceofQualif icationProxy){returngetDisplayValue((Qualif icationProxy)bean);
if (beaninstanceofTutorielProxy){returngetDisplayValue((TutorielProxy)bean);
if (beaninstanceofSmsPredefiniProxy){returngetDisplayValue((SmsPredefiniProxy)bean);
if (beaninstanceofOutBoxProxy){returngetDisplayValue((OutBoxProxy)bean);
if (beaninstanceofUtilisateurProxy){returngetDisplayValue((UtilisateurProxy)bean);
if (bean.getIdentif iant()!=null){value=value+bean.getIdentif iant()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";
if (bean.getTypeRelation()!=null){value=value+bean.getTypeRelation()+"";
if (bean.getPatientLie()!=null)value=value+getDisplayValue(bean.getPatientLie())+"";returnvalue.trim();
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";returnvalue.trim();
if (bean.getDateTest()!=null)value=value+DateUtil.getFormatedDate(bean.getDateTest())+"";Stringnature=bean.getNature();
if (nature!=null){
if (nature.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_VIH))value=value+NLS.constants().examenSerologie_nature_vIH_option()+"";
else 
if (nature.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_CD4))value=value+NLS.constants().examenSerologie_nature_cD4_option()+"";
if (bean.getResultatCD4()!=null)value=value+bean.getResultatCD4()+"";StringresultatVIH=bean.getResultatVIH();
if (resultatVIH!=null){
if (resultatVIH.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_POSITif ))value=value+NLS.constants().examenSerologie_resultatVIH_positif _option()+"";
else 
if (resultatVIH.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_NEGATif ))value=value+NLS.constants().examenSerologie_resultatVIH_negatif _option()+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";
if (bean.getPoids()!=null)value=value+bean.getPoids()+"";returnvalue.trim();
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";Stringresultat=bean.getResultat();
if (resultat!=null){
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_NEGATif ))value=value+NLS.constants().examenMicroscopie_resultat_negatif _option()+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_RARE))value=value+NLS.constants().examenMicroscopie_resultat_rare_option()+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_UNPLUS))value=value+NLS.constants().examenMicroscopie_resultat_unPlus_option()+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_DEUXPLUS))value=value+NLS.constants().examenMicroscopie_resultat_deuxPlus_option()+"";
else 
if (resultat.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_TROISPLUS))value=value+NLS.constants().examenMicroscopie_resultat_troisPlus_option()+"";
if (bean.getDateExamen()!=null)value=value+DateUtil.getFormatedDate(bean.getDateExamen())+"";
if (bean.getResultat()!=null){value=value+bean.getResultat()+"";
if (bean.getDateEffective()!=null)value=value+DateUtil.getFormatedDate(bean.getDateEffective())+"";returnvalue.trim();
if (bean.getDateRendezVous()!=null)value=value+DateUtil.getFormatedDate(bean.getDateRendezVous())+"";value=value+BooleanUtil.getBooleanDisplayValue(bean.getHonore())+"";returnvalue.trim();
if (bean.getPatient()!=null)value=value+getDisplayValue(bean.getPatient())+"";Stringnature=bean.getNature();
if (nature!=null){
if (nature.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_TRANSFERT))value=value+NLS.constants().transfertReference_nature_transfert_option()+"";
else 
if (nature.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_REFERENCE))value=value+NLS.constants().transfertReference_nature_reference_option()+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";returnvalue.trim();
if (bean.getNumero()!=null){value=value+bean.getNumero()+"";
if (bean.getIntrant()!=null)value=value+getDisplayValue(bean.getIntrant())+"";
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (type!=null){
if (type.equals(EpicamEnumConstants.HORSUSAGE_TYPE_PERIMEE))value=value+NLS.constants().horsUsage_type_perimee_option()+"";
else 
if (type.equals(EpicamEnumConstants.HORSUSAGE_TYPE_CASSE))value=value+NLS.constants().horsUsage_type_casse_option()+"";
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantite()!=null)value=value+bean.getQuantite()+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";returnvalue.trim();
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";
if (bean.getQuantiteRequise()!=null)value=value+bean.getQuantiteRequise()+"";returnvalue.trim();
if (bean.getIntrant()!=null)value=value+getDisplayValue(bean.getIntrant())+"";
if (bean.getQuantiteRequise()!=null)value=value+bean.getQuantiteRequise()+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDateReception()!=null)value=value+DateUtil.getFormatedDate(bean.getDateReception())+"";returnvalue.trim();
if (bean.getDetailCommande()!=null)value=value+getDisplayValue(bean.getDetailCommande())+"";returnvalue.trim();
if (bean.getDetailCommande()!=null)value=value+getDisplayValue(bean.getDetailCommande())+"";returnvalue.trim();
if (bean.getCDTDepart()!=null)value=value+getDisplayValue(bean.getCDTDepart())+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";
if (bean.getCDTArrivee()!=null)value=value+getDisplayValue(bean.getCDTArrivee())+"";
if (bean.getDateArrivee()!=null)value=value+DateUtil.getFormatedDate(bean.getDateArrivee())+"";returnvalue.trim();
if (bean.getRavitaillement()!=null)value=value+getDisplayValue(bean.getRavitaillement())+"";
if (bean.getSortieLot()!=null)value=value+getDisplayValue(bean.getSortieLot())+"";returnvalue.trim();
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";
if (bean.getDate()!=null)value=value+DateUtil.getFormatedDate(bean.getDate())+"";returnvalue.trim();
if (bean.getLot()!=null)value=value+getDisplayValue(bean.getLot())+"";
if (bean.getQuantiteTheorique()!=null)value=value+bean.getQuantiteTheorique()+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getDateDepart()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDepart())+"";
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";returnvalue.trim();
if (bean.getDateArrivee()!=null)value=value+DateUtil.getFormatedDate(bean.getDateArrivee())+"";
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (bean.getMedicament()!=null)value=value+getDisplayValue(bean.getMedicament())+"";returnvalue.trim();
if (bean.getDesignation()!=null){value=value+bean.getDesignation()+"";
if (bean.getIdentif iant()!=null){value=value+bean.getIdentif iant()+"";
if (bean.getLibelle()!=null){value=value+getLocalizedText(bean.getLibelle())+"";
if (bean.getDateDebut()!=null)value=value+DateUtil.getFormatedDate(bean.getDateDebut())+"";returnvalue.trim();
if (bean.getPersonnel()!=null)value=value+getDisplayValue(bean.getPersonnel())+"";value=value+BooleanUtil.getBooleanDisplayValue(bean.getApprouveeRegion())+"";value=value+BooleanUtil.getBooleanDisplayValue(bean.getApprouveeGTC())+"";
if (bean.getDistrictSante()!=null)value=value+getDisplayValue(bean.getDistrictSante())+"";
if (bean.getCDT()!=null)value=value+getDisplayValue(bean.getCDT())+"";returnvalue.trim();
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (bean.getNom()!=null){value=value+getLocalizedText(bean.getNom())+"";
if (type!=null){
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_SENSIBILISATION))value=value+NLS.constants().smsPredefini_type_sensibilisation_option()+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_QUIZZ))value=value+NLS.constants().smsPredefini_type_quizz_option()+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_RAPPELRDV))value=value+NLS.constants().smsPredefini_type_rappelRDV_option()+"";
else 
if (type.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_MEDICALRECORD))value=value+NLS.constants().smsPredefini_type_medicalRecord_option()+"";
if (bean.getObjet()!=null){value=value+getLocalizedText(bean.getObjet())+"";
if (bean.getMessage()!=null){value=value+bean.getMessage()+"";
if (bean.getNom()!=null){value=value+bean.getNom()+"";
if (fieldValue!=null&&!fieldValue.equals("")){
if (beanClass.equals(PatientProxy.class)){returngetPatientEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CasIndexProxy.class)){returngetCasIndexEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CasTuberculoseProxy.class)){returngetCasTuberculoseEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenSerologieProxy.class)){returngetExamenSerologieEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenBiologiqueProxy.class)){returngetExamenBiologiqueEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenMicroscopieProxy.class)){returngetExamenMicroscopieEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ExamenATBProxy.class)){returngetExamenATBEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(PriseMedicamenteuseProxy.class)){returngetPriseMedicamenteuseEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(RendezVousProxy.class)){returngetRendezVousEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(TransfertReferenceProxy.class)){returngetTransfertReferenceEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(LotProxy.class)){returngetLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(HorsUsageProxy.class)){returngetHorsUsageEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(EntreeLotProxy.class)){returngetEntreeLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(SortieLotProxy.class)){returngetSortieLotEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CommandeProxy.class)){returngetCommandeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailCommandeMedicamentProxy.class)){returngetDetailCommandeMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailCommandeIntrantProxy.class)){returngetDetailCommandeIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ReceptionProxy.class)){returngetReceptionEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailReceptionMedicamentProxy.class)){returngetDetailReceptionMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailReceptionIntrantProxy.class)){returngetDetailReceptionIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(RavitaillementProxy.class)){returngetRavitaillementEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailRavitaillementProxy.class)){returngetDetailRavitaillementEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(InventaireProxy.class)){returngetInventaireEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DetailInventaireProxy.class)){returngetDetailInventaireEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(PersonnelProxy.class)){returngetPersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DepartPersonnelProxy.class)){returngetDepartPersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(ArriveePersonnelProxy.class)){returngetArriveePersonnelEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(RegionProxy.class)){returngetRegionEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(DistrictSanteProxy.class)){returngetDistrictSanteEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CentreDiagTraitProxy.class)){returngetCentreDiagTraitEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(LaboratoireReferenceProxy.class)){returngetLaboratoireReferenceEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(LieuDitProxy.class)){returngetLieuDitEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(RegimeProxy.class)){returngetRegimeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(PriseMedicamentRegimeProxy.class)){returngetPriseMedicamentRegimeEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(MedicamentProxy.class)){returngetMedicamentEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(IntrantProxy.class)){returngetIntrantEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(FormationProxy.class)){returngetFormationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(CandidatureFormationProxy.class)){returngetCandidatureFormationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(Qualif icationProxy.class)){returngetQualif icationEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(TutorielProxy.class)){returngetTutorielEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(SmsPredefiniProxy.class)){returngetSmsPredefiniEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(OutBoxProxy.class)){returngetOutBoxEnumDisplayValue(fieldName,fieldValue);
if (beanClass.equals(UtilisateurProxy.class)){returngetUtilisateurEnumDisplayValue(fieldName,fieldValue);
if (fieldName.equals("sexe")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_SEXE_MASCULIN))value=NLS.constants().patient_sexe_masculin_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_SEXE_FEMININ))value=NLS.constants().patient_sexe_feminin_option();
if (fieldName.equals("nationalite")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_NATIONALITE_CAMEROUNAIS))value=NLS.constants().patient_nationalite_camerounais_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_NATIONALITE_ETRANGER))value=NLS.constants().patient_nationalite_etranger_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_DOMICILE))value=NLS.constants().patient_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_BUREAU))value=NLS.constants().patient_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_LIBELLE_AUTRE))value=NLS.constants().patient_libelle_autre_option();
if (fieldName.equals("pacLibelle")){
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_DOMICILE))value=NLS.constants().patient_pacLibelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_BUREAU))value=NLS.constants().patient_pacLibelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PATIENT_PACLIBELLE_AUTRE))value=NLS.constants().patient_pacLibelle_autre_option();
if (fieldName.equals("typePatient")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_NOUVEAUCAS))value=NLS.constants().casTuberculose_typePatient_nouveauCas_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_REPRISEAPRESABANDON))value=NLS.constants().casTuberculose_typePatient_repriseApresAbandon_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_ECHEC))value=NLS.constants().casTuberculose_typePatient_echec_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_RECHUTE))value=NLS.constants().casTuberculose_typePatient_rechute_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_AUTRE))value=NLS.constants().casTuberculose_typePatient_autre_option();
if (fieldName.equals("formeMaladie")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMPLUS))value=NLS.constants().casTuberculose_formeMaladie_tPMPlus_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMMOINS))value=NLS.constants().casTuberculose_formeMaladie_tPMMoins_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_EXTRA_PULMONAIRE))value=NLS.constants().casTuberculose_formeMaladie_extra_Pulmonaire_option();
if (fieldName.equals("cotrimoxazole")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_NON))value=NLS.constants().casTuberculose_cotrimoxazole_non_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_COTRIMOXAZOLE_960))value=NLS.constants().casTuberculose_cotrimoxazole_cotrimoxazole_960_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_COTRIMOXAZOLE_COTRIMOXAZOLE_480))value=NLS.constants().casTuberculose_cotrimoxazole_cotrimoxazole_480_option();
if (fieldName.equals("devenirMalade")){
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_GUERRIS))value=NLS.constants().casTuberculose_devenirMalade_guerris_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_TERMINE))value=NLS.constants().casTuberculose_devenirMalade_termine_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ECHEC))value=NLS.constants().casTuberculose_devenirMalade_echec_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_DECEDE))value=NLS.constants().casTuberculose_devenirMalade_decede_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_PERDUDEVUE))value=NLS.constants().casTuberculose_devenirMalade_perduDeVue_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETPRESCRIPTEUR))value=NLS.constants().casTuberculose_devenirMalade_arretPrescripteur_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETEFFETSINDESI))value=NLS.constants().casTuberculose_devenirMalade_arretEffetsIndesi_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CASTUBERCULOSE_DEVENIRMALADE_ARRETSURVENUTB))value=NLS.constants().casTuberculose_devenirMalade_arretSurvenuTB_option();
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_VIH))value=NLS.constants().examenSerologie_nature_vIH_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_NATURE_CD4))value=NLS.constants().examenSerologie_nature_cD4_option();
if (fieldName.equals("resultatVIH")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_POSITif ))value=NLS.constants().examenSerologie_resultatVIH_positif _option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENSEROLOGIE_RESULTATVIH_NEGATif ))value=NLS.constants().examenSerologie_resultatVIH_negatif _option();
if (fieldName.equals("raisonDepistage")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_DIAGNOSTIC))value=NLS.constants().examenMicroscopie_raisonDepistage_diagnostic_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RAISONDEPISTAGE_SUIVI))value=NLS.constants().examenMicroscopie_raisonDepistage_suivi_option();
if (fieldName.equals("resultat")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_NEGATif ))value=NLS.constants().examenMicroscopie_resultat_negatif _option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_RARE))value=NLS.constants().examenMicroscopie_resultat_rare_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_UNPLUS))value=NLS.constants().examenMicroscopie_resultat_unPlus_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_DEUXPLUS))value=NLS.constants().examenMicroscopie_resultat_deuxPlus_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENMICROSCOPIE_RESULTAT_TROISPLUS))value=NLS.constants().examenMicroscopie_resultat_troisPlus_option();
if (fieldName.equals("raisonDepistage")){
if (fieldValue.equals(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_DIAGNOSTIC))value=NLS.constants().examenATB_raisonDepistage_diagnostic_option();
else 
if (fieldValue.equals(EpicamEnumConstants.EXAMENATB_RAISONDEPISTAGE_SUIVI))value=NLS.constants().examenATB_raisonDepistage_suivi_option();
if (fieldName.equals("prise")){
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_PRISESUPERVISEE))value=NLS.constants().priseMedicamenteuse_prise_priseSupervisee_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_AUTOMEDICATION))value=NLS.constants().priseMedicamenteuse_prise_automedication_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PRISEMEDICAMENTEUSE_PRISE_NONVENU))value=NLS.constants().priseMedicamenteuse_prise_nonVenu_option();
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_TRANSFERT))value=NLS.constants().transfertReference_nature_transfert_option();
else 
if (fieldValue.equals(EpicamEnumConstants.TRANSFERTREFERENCE_NATURE_REFERENCE))value=NLS.constants().transfertReference_nature_reference_option();
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.LOT_TYPE_MEDICAMENT))value=NLS.constants().lot_type_medicament_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LOT_TYPE_INTRANT))value=NLS.constants().lot_type_intrant_option();
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.HORSUSAGE_TYPE_PERIMEE))value=NLS.constants().horsUsage_type_perimee_option();
else 
if (fieldValue.equals(EpicamEnumConstants.HORSUSAGE_TYPE_CASSE))value=NLS.constants().horsUsage_type_casse_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_DOMICILE))value=NLS.constants().personnel_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_BUREAU))value=NLS.constants().personnel_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_LIBELLE_AUTRE))value=NLS.constants().personnel_libelle_autre_option();
if (fieldName.equals("niveau")){
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_CENTRAL))value=NLS.constants().personnel_niveau_central_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_REGION))value=NLS.constants().personnel_niveau_region_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_DISTRICTSANTE))value=NLS.constants().personnel_niveau_districtSante_option();
else 
if (fieldValue.equals(EpicamEnumConstants.PERSONNEL_NIVEAU_CDT))value=NLS.constants().personnel_niveau_cDT_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_DOMICILE))value=NLS.constants().region_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_BUREAU))value=NLS.constants().region_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.REGION_LIBELLE_AUTRE))value=NLS.constants().region_libelle_autre_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_DOMICILE))value=NLS.constants().districtSante_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_BUREAU))value=NLS.constants().districtSante_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.DISTRICTSANTE_LIBELLE_AUTRE))value=NLS.constants().districtSante_libelle_autre_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_DOMICILE))value=NLS.constants().centreDiagTrait_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_BUREAU))value=NLS.constants().centreDiagTrait_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.CENTREDIAGTRAIT_LIBELLE_AUTRE))value=NLS.constants().centreDiagTrait_libelle_autre_option();
if (fieldName.equals("nature")){
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_NATIONAL))value=NLS.constants().laboratoireReference_nature_national_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_NATURE_REGIONAL))value=NLS.constants().laboratoireReference_nature_regional_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_DOMICILE))value=NLS.constants().laboratoireReference_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_BUREAU))value=NLS.constants().laboratoireReference_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LABORATOIREREFERENCE_LIBELLE_AUTRE))value=NLS.constants().laboratoireReference_libelle_autre_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_DOMICILE))value=NLS.constants().lieuDit_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_BUREAU))value=NLS.constants().lieuDit_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.LIEUDIT_LIBELLE_AUTRE))value=NLS.constants().lieuDit_libelle_autre_option();
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_PHASEINITIALE))value=NLS.constants().regime_type_phaseInitiale_option();
else 
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_PHASECONTINUATION))value=NLS.constants().regime_type_phaseContinuation_option();
else 
if (fieldValue.equals(EpicamEnumConstants.REGIME_TYPE_INDEPENDANT))value=NLS.constants().regime_type_independant_option();
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_TEXTE))value=NLS.constants().tutoriel_type_texte_option();
else 
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_AUDIO))value=NLS.constants().tutoriel_type_audio_option();
else 
if (fieldValue.equals(EpicamEnumConstants.TUTORIEL_TYPE_VIDEO))value=NLS.constants().tutoriel_type_video_option();
if (fieldName.equals("type")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_SENSIBILISATION))value=NLS.constants().smsPredefini_type_sensibilisation_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_QUIZZ))value=NLS.constants().smsPredefini_type_quizz_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_RAPPELRDV))value=NLS.constants().smsPredefini_type_rappelRDV_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_TYPE_MEDICALRECORD))value=NLS.constants().smsPredefini_type_medicalRecord_option();
if (fieldName.equals("periodicite")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_JOUR))value=NLS.constants().smsPredefini_periodicite_jour_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_SEMAINE))value=NLS.constants().smsPredefini_periodicite_semaine_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_MOIS))value=NLS.constants().smsPredefini_periodicite_mois_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_TRIMESTRE))value=NLS.constants().smsPredefini_periodicite_trimestre_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_SEMESTRE))value=NLS.constants().smsPredefini_periodicite_semestre_option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_PERIODICITE_PONCTUELLE))value=NLS.constants().smsPredefini_periodicite_ponctuelle_option();
if (fieldName.equals("statut")){
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_STATUT_ACTif ))value=NLS.constants().smsPredefini_statut_actif _option();
else 
if (fieldValue.equals(EpicamEnumConstants.SMSPREDEFINI_STATUT_INACTif ))value=NLS.constants().smsPredefini_statut_inactif _option();
if (fieldName.equals("statut")){
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_ERREUR))value=NLS.constants().outBox_statut_erreur_option();
else 
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_AENVOYER))value=NLS.constants().outBox_statut_aEnvoyer_option();
else 
if (fieldValue.equals(EpicamEnumConstants.OUTBOX_STATUT_SUCCES))value=NLS.constants().outBox_statut_succes_option();
if (fieldName.equals("libelle")){
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_DOMICILE))value=NLS.constants().utilisateur_libelle_domicile_option();
else 
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_BUREAU))value=NLS.constants().utilisateur_libelle_bureau_option();
else 
if (fieldValue.equals(EpicamEnumConstants.UTILISATEUR_LIBELLE_AUTRE))value=NLS.constants().utilisateur_libelle_autre_option();
if (localizedText!=null){Stringtext="";
if (locale.equals("fr"))text=localizedText.getFrancais();
if (locale.equals("en"))text=localizedText.getEnglish();
if (text!=null&&!text.isEmpty())returntext;
else {//returnfirstnotemptytext
if (localizedText.getFrancais()!=null&&!localizedText.getFrancais().isEmpty())returnlocalizedText.getFrancais();
if (localizedText.getEnglish()!=null&&!localizedText.getEnglish().isEmpty())returnlocalizedText.getEnglish();
if (key.equals("error_required"))returnBaseNLS.messages().error_required();
else 
if (key.equals("patient_field_age_min"))returnBaseNLS.messages().error_min_num(NLS.constants().patient_field_age_min());
else 
if (key.equals("patient_field_age_max"))returnBaseNLS.messages().error_max_num(NLS.constants().patient_field_age_max());
else 
if (key.equals("examenBiologique_field_poids_decimalNumber"))returnBaseNLS.messages().error_float_dec(NLS.constants().examenBiologique_field_poids_decimalNumber());
else 
if (key.equals("lot_field_quantiteInitiale_min"))returnBaseNLS.messages().error_min_num(NLS.constants().lot_field_quantiteInitiale_min());
else 
if (key.equals("lot_field_quantite_min"))returnBaseNLS.messages().error_min_num(NLS.constants().lot_field_quantite_min());
else 
if (key.equals("entreeLot_field_quantite_min"))returnBaseNLS.messages().error_min_num(NLS.constants().entreeLot_field_quantite_min());
else 
if (key.equals("sortieLot_field_quantite_min"))returnBaseNLS.messages().error_min_num(NLS.constants().sortieLot_field_quantite_min());
else 
if (key.equals("detailCommandeMedicament_field_quantiteRequise_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteRequise_min());
else 
if (key.equals("detailCommandeMedicament_field_quantiteEnStock_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailCommandeMedicament_field_quantiteEnStock_min());
else 
if (key.equals("detailCommandeIntrant_field_quantiteRequise_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteRequise_min());
else 
if (key.equals("detailCommandeIntrant_field_quantiteEnStock_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailCommandeIntrant_field_quantiteEnStock_min());
else 
if (key.equals("detailInventaire_field_quantiteReelle_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteReelle_min());
else 
if (key.equals("detailInventaire_field_quantiteTheorique_min"))returnBaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteTheorique_min());
else 
if (key.equals("regime_field_dureeTraitement_min"))returnBaseNLS.messages().error_min_num(NLS.constants().regime_field_dureeTraitement_min());
else 
if (key.equals("regime_field_poidsMin_min"))returnBaseNLS.messages().error_min_num(NLS.constants().regime_field_poidsMin_min());
else 
if (key.equals("regime_field_poidsMax_min"))returnBaseNLS.messages().error_min_num(NLS.constants().regime_field_poidsMax_min());
else 
if (key.equals("priseMedicamentRegime_field_quantite_min"))returnBaseNLS.messages().error_min_num(NLS.constants().priseMedicamentRegime_field_quantite_min());
else 
if (key.equals("priseMedicamentRegime_field_quantite_decimalNumber"))returnBaseNLS.messages().error_float_dec(NLS.constants().priseMedicamentRegime_field_quantite_decimalNumber());
else 
if (key.equals("medicament_field_seuilPatient_decimalNumber"))returnBaseNLS.messages().error_float_dec(NLS.constants().medicament_field_seuilPatient_decimalNumber());
else 
if (key.equals("intrant_field_seuilPatient_decimalNumber"))returnBaseNLS.messages().error_float_dec(NLS.constants().intrant_field_seuilPatient_decimalNumber());
else returnkey;
if (PatientProxy.class.equals(proxy.getClass())){returnNLS.constants().patient_name_plur();
if (CasIndexProxy.class.equals(proxy.getClass())){returnNLS.constants().casIndex_name_plur();
if (CasTuberculoseProxy.class.equals(proxy.getClass())){returnNLS.constants().casTuberculose_name_plur();
if (ExamenSerologieProxy.class.equals(proxy.getClass())){returnNLS.constants().examenSerologie_name_plur();
if (ExamenBiologiqueProxy.class.equals(proxy.getClass())){returnNLS.constants().examenBiologique_name_plur();
if (ExamenMicroscopieProxy.class.equals(proxy.getClass())){returnNLS.constants().examenMicroscopie_name_plur();
if (ExamenATBProxy.class.equals(proxy.getClass())){returnNLS.constants().examenATB_name_plur();
if (PriseMedicamenteuseProxy.class.equals(proxy.getClass())){returnNLS.constants().priseMedicamenteuse_name_plur();
if (RendezVousProxy.class.equals(proxy.getClass())){returnNLS.constants().rendezVous_name_plur();
if (TransfertReferenceProxy.class.equals(proxy.getClass())){returnNLS.constants().transfertReference_name_plur();
if (LotProxy.class.equals(proxy.getClass())){returnNLS.constants().lot_name_plur();
if (HorsUsageProxy.class.equals(proxy.getClass())){returnNLS.constants().horsUsage_name_plur();
if (EntreeLotProxy.class.equals(proxy.getClass())){returnNLS.constants().entreeLot_name_plur();
if (SortieLotProxy.class.equals(proxy.getClass())){returnNLS.constants().sortieLot_name_plur();
if (CommandeProxy.class.equals(proxy.getClass())){returnNLS.constants().commande_name_plur();
if (DetailCommandeMedicamentProxy.class.equals(proxy.getClass())){returnNLS.constants().detailCommandeMedicament_name_plur();
if (DetailCommandeIntrantProxy.class.equals(proxy.getClass())){returnNLS.constants().detailCommandeIntrant_name_plur();
if (ReceptionProxy.class.equals(proxy.getClass())){returnNLS.constants().reception_name_plur();
if (DetailReceptionMedicamentProxy.class.equals(proxy.getClass())){returnNLS.constants().detailReceptionMedicament_name_plur();
if (DetailReceptionIntrantProxy.class.equals(proxy.getClass())){returnNLS.constants().detailReceptionIntrant_name_plur();
if (RavitaillementProxy.class.equals(proxy.getClass())){returnNLS.constants().ravitaillement_name_plur();
if (DetailRavitaillementProxy.class.equals(proxy.getClass())){returnNLS.constants().detailRavitaillement_name_plur();
if (InventaireProxy.class.equals(proxy.getClass())){returnNLS.constants().inventaire_name_plur();
if (DetailInventaireProxy.class.equals(proxy.getClass())){returnNLS.constants().detailInventaire_name_plur();
if (PersonnelProxy.class.equals(proxy.getClass())){returnNLS.constants().personnel_name_plur();
if (DepartPersonnelProxy.class.equals(proxy.getClass())){returnNLS.constants().departPersonnel_name_plur();
if (ArriveePersonnelProxy.class.equals(proxy.getClass())){returnNLS.constants().arriveePersonnel_name_plur();
if (RegionProxy.class.equals(proxy.getClass())){returnNLS.constants().region_name_plur();
if (DistrictSanteProxy.class.equals(proxy.getClass())){returnNLS.constants().districtSante_name_plur();
if (CentreDiagTraitProxy.class.equals(proxy.getClass())){returnNLS.constants().centreDiagTrait_name_plur();
if (LaboratoireReferenceProxy.class.equals(proxy.getClass())){returnNLS.constants().laboratoireReference_name_plur();
if (LieuDitProxy.class.equals(proxy.getClass())){returnNLS.constants().lieuDit_name_plur();
if (RegimeProxy.class.equals(proxy.getClass())){returnNLS.constants().regime_name_plur();
if (PriseMedicamentRegimeProxy.class.equals(proxy.getClass())){returnNLS.constants().priseMedicamentRegime_name_plur();
if (MedicamentProxy.class.equals(proxy.getClass())){returnNLS.constants().medicament_name_plur();
if (IntrantProxy.class.equals(proxy.getClass())){returnNLS.constants().intrant_name_plur();
if (FormationProxy.class.equals(proxy.getClass())){returnNLS.constants().formation_name_plur();
if (CandidatureFormationProxy.class.equals(proxy.getClass())){returnNLS.constants().candidatureFormation_name_plur();
if (Qualif icationProxy.class.equals(proxy.getClass())){returnNLS.constants().qualif ication_name_plur();
if (TutorielProxy.class.equals(proxy.getClass())){returnNLS.constants().tutoriel_name_plur();
if (SmsPredefiniProxy.class.equals(proxy.getClass())){returnNLS.constants().smsPredefini_name_plur();
if (OutBoxProxy.class.equals(proxy.getClass())){returnNLS.constants().outBox_name_plur();
if (UtilisateurProxy.class.equals(proxy.getClass())){returnNLS.constants().utilisateur_name_plur();
if (name.equals(PatientProxy.class.getName())){returnNLS.constants().patient_name();
if (name.equals(CasIndexProxy.class.getName())){returnNLS.constants().casIndex_name();
if (name.equals(CasTuberculoseProxy.class.getName())){returnNLS.constants().casTuberculose_name();
if (name.equals(ExamenSerologieProxy.class.getName())){returnNLS.constants().examenSerologie_name();
if (name.equals(ExamenBiologiqueProxy.class.getName())){returnNLS.constants().examenBiologique_name();
if (name.equals(ExamenMicroscopieProxy.class.getName())){returnNLS.constants().examenMicroscopie_name();
if (name.equals(ExamenATBProxy.class.getName())){returnNLS.constants().examenATB_name();
if (name.equals(PriseMedicamenteuseProxy.class.getName())){returnNLS.constants().priseMedicamenteuse_name();
if (name.equals(RendezVousProxy.class.getName())){returnNLS.constants().rendezVous_name();
if (name.equals(TransfertReferenceProxy.class.getName())){returnNLS.constants().transfertReference_name();
if (name.equals(LotProxy.class.getName())){returnNLS.constants().lot_name();
if (name.equals(HorsUsageProxy.class.getName())){returnNLS.constants().horsUsage_name();
if (name.equals(EntreeLotProxy.class.getName())){returnNLS.constants().entreeLot_name();
if (name.equals(SortieLotProxy.class.getName())){returnNLS.constants().sortieLot_name();
if (name.equals(CommandeProxy.class.getName())){returnNLS.constants().commande_name();
if (name.equals(DetailCommandeMedicamentProxy.class.getName())){returnNLS.constants().detailCommandeMedicament_name();
if (name.equals(DetailCommandeIntrantProxy.class.getName())){returnNLS.constants().detailCommandeIntrant_name();
if (name.equals(ReceptionProxy.class.getName())){returnNLS.constants().reception_name();
if (name.equals(DetailReceptionMedicamentProxy.class.getName())){returnNLS.constants().detailReceptionMedicament_name();
if (name.equals(DetailReceptionIntrantProxy.class.getName())){returnNLS.constants().detailReceptionIntrant_name();
if (name.equals(RavitaillementProxy.class.getName())){returnNLS.constants().ravitaillement_name();
if (name.equals(DetailRavitaillementProxy.class.getName())){returnNLS.constants().detailRavitaillement_name();
if (name.equals(InventaireProxy.class.getName())){returnNLS.constants().inventaire_name();
if (name.equals(DetailInventaireProxy.class.getName())){returnNLS.constants().detailInventaire_name();
if (name.equals(PersonnelProxy.class.getName())){returnNLS.constants().personnel_name();
if (name.equals(DepartPersonnelProxy.class.getName())){returnNLS.constants().departPersonnel_name();
if (name.equals(ArriveePersonnelProxy.class.getName())){returnNLS.constants().arriveePersonnel_name();
if (name.equals(RegionProxy.class.getName())){returnNLS.constants().region_name();
if (name.equals(DistrictSanteProxy.class.getName())){returnNLS.constants().districtSante_name();
if (name.equals(CentreDiagTraitProxy.class.getName())){returnNLS.constants().centreDiagTrait_name();
if (name.equals(LaboratoireReferenceProxy.class.getName())){returnNLS.constants().laboratoireReference_name();
if (name.equals(LieuDitProxy.class.getName())){returnNLS.constants().lieuDit_name();
if (name.equals(RegimeProxy.class.getName())){returnNLS.constants().regime_name();
if (name.equals(PriseMedicamentRegimeProxy.class.getName())){returnNLS.constants().priseMedicamentRegime_name();
if (name.equals(MedicamentProxy.class.getName())){returnNLS.constants().medicament_name();
if (name.equals(IntrantProxy.class.getName())){returnNLS.constants().intrant_name();
if (name.equals(FormationProxy.class.getName())){returnNLS.constants().formation_name();
if (name.equals(CandidatureFormationProxy.class.getName())){returnNLS.constants().candidatureFormation_name();
if (name.equals(Qualif icationProxy.class.getName())){returnNLS.constants().qualif ication_name();
if (name.equals(TutorielProxy.class.getName())){returnNLS.constants().tutoriel_name();
if (name.equals(SmsPredefiniProxy.class.getName())){returnNLS.constants().smsPredefini_name();
if (name.equals(OutBoxProxy.class.getName())){returnNLS.constants().outBox_name();
if (name.equals(UtilisateurProxy.class.getName())){returnNLS.constants().utilisateur_name();
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicLieuDitDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLieuDit(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedLieuDitReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listLieuDit(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLieuDit(start,numRows,"nom",true,filterCriteria,property);
else result=request.listNonAffectedLieuDitReverse(start,numRows,"nom",true,filterCriteria,property);
else result=request.listLieuDit(start,numRows,"nom",true,filterCriteria);
else result=request.getLieuDitEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLieuDit(start,numRows,"nom",true,searchCriterions,property);
else result=request.listNonAffectedLieuDitReverse(start,numRows,"nom",true,searchCriterions,property);
else result=request.listLieuDit(start,numRows,"nom",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedLieuDit(start,numRows,"nom",true,property);
else result=request.listNonAffectedLieuDitReverse(start,numRows,"nom",true,property);
else result=request.listLieuDit(start,numRows,"nom",true);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listLieuDit(start,numRows,property,asc,searchCriterions);
else result=request.listLieuDit(start,numRows,property,asc,filterCriteria);
else result=request.getLieuDitEmptyList();
else {
if (searchCriterions!=null)result=request.listLieuDit(start,numRows,property,asc,searchCriterions);
else result=request.listLieuDit(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLieuDit(property,searchCriterions);
else returnrequest.countNonAffectedLieuDitReverse(property,searchCriterions);
else returnrequest.countLieuDit(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLieuDit(property,filterCriteria);
else returnrequest.countNonAffectedLieuDitReverse(property,filterCriteria);
else returnrequest.countLieuDit(filterCriteria);
else returnrequest.countNonAffectedLieuDit("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLieuDit(property,searchCriterions);
else returnrequest.countNonAffectedLieuDitReverse(property,searchCriterions);
else returnrequest.countLieuDit(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedLieuDit(property);
else returnrequest.countNonAffectedLieuDitReverse(property);
else returnrequest.countLieuDit();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();LieuDitRequestrequest=(LieuDitRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().lieuDit_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listLot();
else handler.listLot(searchText);
if (AccessManager.canReadDetailReceptionIntrantDescription()){Column<DetailReceptionIntrantProxy,String>commandeColumn=newCommandeColumn();commandeColumn.setSortable(true);table.addColumn(commandeColumn,NLS.constants().detailReceptionIntrant_field_s_commande());
if (AccessManager.canReadDetailReceptionIntrantDescription()){Column<DetailReceptionIntrantProxy,String>detailCommandeColumn=newDetailCommandeColumn();detailCommandeColumn.setSortable(true);table.addColumn(detailCommandeColumn,NLS.constants().detailReceptionIntrant_field_s_detailCommande());
if (AccessManager.canCreateDetailReceptionIntrant()&&AccessManager.canEditDetailReceptionIntrant()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/detailreceptionintrant/",true);
else returnnull;
if (AccessManager.canDeleteDetailReceptionIntrant()&&AccessManager.canEditDetailReceptionIntrant()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteDetailReceptionIntrant()&&AccessManager.canEditDetailReceptionIntrant()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<DetailReceptionIntrantProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().detailReceptionIntrant_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(DetailReceptionIntrantProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getDetailReceptionIntrantRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedDetailReceptionIntrantentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListDetailReceptionIntrantEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportDetailReceptionIntrant()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.DET_REC_INT_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=detailReceptionIntrant_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCommande()==null)value="";
else value=renderer.getDisplayValue(object.getCommande());
if (object!=null){
if (object.getDetailCommande()==null)value="";
else value=renderer.getDisplayValue(object.getDetailCommande());
if (handler==null)initHandler();returnhandler.getById(id);
if (initField==null)handler.savePriseMedicamentRegime(value);
else handler.savePriseMedicamentRegime(value,initField);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ExamenATBentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<ExamenATB>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<ExamenATB>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<ExamenATB>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(ExamenATBentity:entities)delete(entity);
if (casTb_patient_identif iant!=null&&!casTb_patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("casTb.patient.identif iant");criteria.setValue(casTb_patient_identif iant);junction.add(criteria);
if (casTb_patient_nom!=null&&!casTb_patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("casTb.patient.nom");criteria.setValue(casTb_patient_nom);junction.add(criteria);
if (dateExamenBefore!=null&&!dateExamenBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateExamen");criteria.setValue(dateExamenBefore);junction.add(criteria);
if (dateExamenAfter!=null&&!dateExamenAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateExamen");criteria.setValue(dateExamenAfter);junction.add(criteria);
if (raisonDepistage!=null&&!raisonDepistage.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("raisonDepistage");criteria.setValue(raisonDepistage);junction.add(criteria);
if (resultat!=null&&!resultat.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("resultat");criteria.setValue(resultat);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (entity.getRegion()!=null){bck.setRegion(entity.getRegion().getId());
if (entity.getDistrictSante()!=null){bck.setDistrictSante(entity.getDistrictSante().getId());
if (entity.getCDT()!=null){bck.setCDT(entity.getCDT().getId());
if (entity.getPersonnel()!=null){bck.setPersonnel(entity.getPersonnel().getId());
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<PriseMedicamenteuseProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<PriseMedicamenteuseEditorNestedRow>editors=editor.getEditors();PriseMedicamenteuseEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(PriseMedicamenteuseEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){PriseMedicamenteuseProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if (initField==null)handler.saveSmsPredefini(value);
else handler.saveSmsPredefini(value,initField);
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionIntrantEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeIntrant()&&AccessManager.canEditDetailCommandeIntrant())detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeIntrantProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionIntrantDescription())commande.setVisible(false);
if (!AccessManager.canReadDetailReceptionIntrantDescription())detailCommande.setVisible(false);
if (!AccessManager.canReadDetailReceptionIntrantDescription())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())commande.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())detailCommande.setVisible(false);
if (!AccessManager.canEditDetailReceptionIntrantDescription())entreeLot.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeIntrantProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeIntrantFormPanelform=newDetailCommandeIntrantFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if (elmts.length<1)//thrownewRuntimeException("invalidbinarytoken");//
else {//BinaryDescdesc=newBinaryDesc();//desc.setId(elmts[0]);//
if (elmts.length>1)//desc.setName(elmts[1]);//
if (elmts.length>2)//desc.setSize(Integer.parseInt(elmts[2]));//returndesc;//
if (size<1024)sizeBuffer.append(size+"octets");
if (size>1024){floatko=size/1024.0f;
if (ko>1024){floatmo=ko/1024.0f;sizeBuffer.append(nf.format(mo)+"Mo");
else {sizeBuffer.append(nf.format(ko)+"Ko");
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicTransfertReferenceFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newTransfertReferenceEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newTransfertReferenceEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newTransfertReferenceEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newTransfertReferenceEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.TRANSFERTREFERENCE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.TRANSFERTREFERENCE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicTransfertReferenceFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSante(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDTDepart(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){editorWorkflow.setRegionArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){editorWorkflow.setDistrictSanteArrivee(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){editorWorkflow.setCDTArrivee(value,isLocked);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(DepartPersonnelentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<DepartPersonnel>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<DepartPersonnel>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<DepartPersonnel>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(DepartPersonnelentity:entities)delete(entity);
if (dateDepartBefore!=null&&!dateDepartBefore.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);criteria.setField("dateDepart");criteria.setValue(dateDepartBefore);junction.add(criteria);
if (dateDepartAfter!=null&&!dateDepartAfter.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);criteria.setField("dateDepart");criteria.setValue(dateDepartAfter);junction.add(criteria);
if (region_nom_francais!=null&&!region_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.francais");criteria.setValue(region_nom_francais);junction.add(criteria);
if (region_nom_english!=null&&!region_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("region.nom.english");criteria.setValue(region_nom_english);junction.add(criteria);
if (districtSante_nom_francais!=null&&!districtSante_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.francais");criteria.setValue(districtSante_nom_francais);junction.add(criteria);
if (districtSante_nom_english!=null&&!districtSante_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.english");criteria.setValue(districtSante_nom_english);junction.add(criteria);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (personnel_nom!=null&&!personnel_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("personnel.nom");criteria.setValue(personnel_nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (timeZone!=null){this.timeZone=timeZone;
if (sf==null&&uLocale!=null){sf=newStringFormatter(uLocale);
if (format!=null){sf.applyPattern(format);
if (nf==null&&uLocale!=null){nf=newNumberFormatter(uLocale);
if (format!=null){nf.applyPattern(format);
if (df==null&&uLocale!=null){df=newDateFormatter(uLocale,timeZone);
if (format!=null){df.applyPattern(format);
if (reportParameterObj!=null&&uLocale!=null){
if (reportParameterObjinstanceofString){StringFormattersf=getStringFormatter();
if (sf!=null){reportParameterValue=sf.format((String)reportParameterObj);
else {reportParameterValue=reportParameterObj.toString();
else 
if (reportParameterObjinstanceofDate){DateFormatterdf=getDateFormatter();
if (df!=null){reportParameterValue=df.format((Date)reportParameterObj);
else {reportParameterValue=reportParameterObj.toString();
else 
if (reportParameterObjinstanceofDouble){NumberFormatternf=getNumberFormatter();
if (nf!=null){reportParameterValue=nf.format(((Double)reportParameterObj).doubleValue());
else {reportParameterValue=reportParameterObj.toString();
else 
if (reportParameterObjinstanceofBigDecimal){NumberFormatternf=getNumberFormatter();
if (nf!=null){reportParameterValue=nf.format((BigDecimal)reportParameterObj);
else {reportParameterValue=reportParameterObj.toString();
else 
if (reportParameterObjinstanceofBoolean){reportParameterValue=((Boolean)reportParameterObj).toString();
else 
if (reportParameterObjinstanceofNumber){NumberFormatternf=getNumberFormatter();
if (nf!=null){reportParameterValue=nf.format(((Number)reportParameterObj));
else {reportParameterValue=reportParameterObj.toString();
else {reportParameterValue=(reportParameterObj.toString());
if (reportParameterValue!=null&&uLocale!=null){
switch(parameterValueType){caseIScalarParameterDefn.TYPE_STRING:{StringFormattersf=getStringFormatter();
if (sf==null){parameterValueObj=null;break;
if (nf==null){parameterValueObj=null;break;
if (num!=null){parameterValueObj=newDouble(num.toString());
if (num!=null){parameterValueObj=newDouble(num.toString());
if (nf==null){parameterValueObj=null;break;
if (num!=null){parameterValueObj=newBigDecimal(num.toString());
if (num!=null){parameterValueObj=newBigDecimal(num.toString());
if (parameterValueObj!=null){parameterValueObj=newjava.sql.Date(((Date)parameterValueObj).getTime());
if (parameterValueObj!=null){parameterValueObj=newjava.sql.Time(((Date)parameterValueObj).getTime());
if (nf==null){parameterValueObj=null;break;
if (num!=null){parameterValueObj=Integer.valueOf(num.intValue());
if (num!=null){parameterValueObj=Integer.valueOf(num.intValue());
if (df==null){returnnull;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicPatientDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (cdtId!=null){
if (searchCriterions!=null)result=request.listPatientFilteredByCdt(start,numRows,"modif ied",false,searchCriterions,cdtId);
else result=request.listPatientFilteredByCdt(start,numRows,"modif ied",false,null,cdtId);
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPatient(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPatientReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPatient(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPatient(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedPatientReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listPatient(start,numRows,"modif ied",false,filterCriteria);
else result=request.getPatientEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPatient(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPatientReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPatient(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPatient(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedPatientReverse(start,numRows,"modif ied",false,property);
else result=request.listPatient(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listPatient(start,numRows,property,asc,searchCriterions);
else result=request.listPatient(start,numRows,property,asc,filterCriteria);
else result=request.getPatientEmptyList();
else {
if (searchCriterions!=null)result=request.listPatient(start,numRows,property,asc,searchCriterions);
else result=request.listPatient(start,numRows,property,asc);
if (cdtId!=null){
if (searchCriterions!=null)returnrequest.countPatientFilteredByCdt(searchCriterions,cdtId);
else returnrequest.countPatientFilteredByCdt(null,cdtId);
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPatient(property,searchCriterions);
else returnrequest.countNonAffectedPatientReverse(property,searchCriterions);
else returnrequest.countPatient(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPatient(property,filterCriteria);
else returnrequest.countNonAffectedPatientReverse(property,filterCriteria);
else returnrequest.countPatient(filterCriteria);
else returnrequest.countNonAffectedPatient("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPatient(property,searchCriterions);
else returnrequest.countNonAffectedPatientReverse(property,searchCriterions);
else returnrequest.countPatient(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPatient(property);
else returnrequest.countNonAffectedPatientReverse(property);
else returnrequest.countPatient();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();PatientRequestrequest=(PatientRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxyidentif iantCrit=request.create(BasicCriteriaProxy.class);identif iantCrit.setField("identif iant");identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(identif iantCrit);//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldDateNaissancetry{DateUtil.parseDate(text);BasicCriteriaProxydateNaissanceCrit=request.create(BasicCriteriaProxy.class);dateNaissanceCrit.setField("dateNaissance");dateNaissanceCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateNaissanceCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_dateNaissance()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateNaissanceCrit);
if (text.toLowerCase().equals(NLS.constants().patient_sexe_masculin_option().toLowerCase())){BasicCriteriaProxysexeCrit=request.create(BasicCriteriaProxy.class);sexeCrit.setField("sexe");sexeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);sexeCrit.setValue(EpicamEnumConstants.PATIENT_SEXE_MASCULIN);buffer.append("("+NLS.constants().patient_field_sexe()+":"+text+")"+SYMBOL_OR+"");criterionList.add(sexeCrit);
if (text.toLowerCase().equals(NLS.constants().patient_sexe_feminin_option().toLowerCase())){BasicCriteriaProxysexeCrit=request.create(BasicCriteriaProxy.class);sexeCrit.setField("sexe");sexeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);sexeCrit.setValue(EpicamEnumConstants.PATIENT_SEXE_FEMININ);buffer.append("("+NLS.constants().patient_field_sexe()+":"+text+")"+SYMBOL_OR+"");criterionList.add(sexeCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.region.id"),personnel.getRegion().getId());
else 
if ("2".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.districtSante.id"),personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){returnbuilder.equal(DaoUtil.getCascadeRoot(root,"commande.CDT.id"),personnel.getCDT().getId());
if (handler==null)initHandler();returnhandler.getById(id);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setFieldDisplayName(NLS.constants().region_field_nom());region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(region_nomBox.getValue());region_nomCrit.setValueDisplayName(region_nomBox.getValue());criteria.add(region_nomCrit);FilterCriteriadistrictsante_nomCrit=newFilterCriteria();
if (locale.equals("fr"))districtsante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtsante_nomCrit.setField("districtSante.nom.english");districtsante_nomCrit.setFieldDisplayName(NLS.constants().districtSante_field_nom());districtsante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtsante_nomCrit.setValue(districtsante_nomBox.getValue());districtsante_nomCrit.setValueDisplayName(districtsante_nomBox.getValue());criteria.add(districtsante_nomCrit);FilterCriterianomCrit=newFilterCriteria();nomCrit.setField("nom");nomCrit.setFieldDisplayName(NLS.constants().centreDiagTrait_field_nom());nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(nomBox.getValue());nomCrit.setValueDisplayName(nomBox.getValue());criteria.add(nomCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadRegionDescription())region_nomFilterBox.setVisible(false);
if (!AccessManager.canReadDistrictSanteDescription())districtsante_nomFilterBox.setVisible(false);
if (!AccessManager.canReadCentreDiagTraitDescription())nomFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicRendezVousDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRendezVous(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedRendezVousReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listRendezVous(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRendezVous(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedRendezVousReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listRendezVous(start,numRows,"modif ied",false,filterCriteria);
else result=request.getRendezVousEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRendezVous(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedRendezVousReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listRendezVous(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedRendezVous(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedRendezVousReverse(start,numRows,"modif ied",false,property);
else result=request.listRendezVous(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listRendezVous(start,numRows,property,asc,searchCriterions);
else result=request.listRendezVous(start,numRows,property,asc,filterCriteria);
else result=request.getRendezVousEmptyList();
else {
if (searchCriterions!=null)result=request.listRendezVous(start,numRows,property,asc,searchCriterions);
else result=request.listRendezVous(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRendezVous(property,searchCriterions);
else returnrequest.countNonAffectedRendezVousReverse(property,searchCriterions);
else returnrequest.countRendezVous(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRendezVous(property,filterCriteria);
else returnrequest.countNonAffectedRendezVousReverse(property,filterCriteria);
else returnrequest.countRendezVous(filterCriteria);
else returnrequest.countNonAffectedRendezVous("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRendezVous(property,searchCriterions);
else returnrequest.countNonAffectedRendezVousReverse(property,searchCriterions);
else returnrequest.countRendezVous(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedRendezVous(property);
else returnrequest.countNonAffectedRendezVousReverse(property);
else returnrequest.countRendezVous();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();RendezVousRequestrequest=(RendezVousRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDateRendezVoustry{DateUtil.parseDate(text);BasicCriteriaProxydateRendezVousCrit=request.create(BasicCriteriaProxy.class);dateRendezVousCrit.setField("dateRendezVous");dateRendezVousCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateRendezVousCrit.setValue(text);buffer.append("("+NLS.constants().rendezVous_field_dateRendezVous()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateRendezVousCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyhonoreCrit=request.create(BasicCriteriaProxy.class);honoreCrit.setField("honore");honoreCrit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);honoreCrit.setValue(text);buffer.append("("+NLS.constants().rendezVous_field_honore()+":"+text+")"+SYMBOL_OR+"");criterionList.add(honoreCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if therelationfieldbuttonsshallbehiddenpublicTransfertReferenceEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDepartDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDepartDataProvider,EpicamRenderer.get());
else CDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDepartDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenregionArrivee=newImogSingleRelationBox<RegionProxy>(regionArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())regionArrivee=newImogSingleRelationBox<RegionProxy>(regionArriveeDataProvider,EpicamRenderer.get());
else regionArrivee=newImogSingleRelationBox<RegionProxy>(false,regionArriveeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteArriveeDataProvider,EpicamRenderer.get());
else districtSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteArriveeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTArriveeDataProvider,EpicamRenderer.get());
else CDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTArriveeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();nature.setEdited(isEdited);region.setEdited(isEdited);districtSante.setEdited(isEdited);CDTDepart.setEdited(isEdited);patient.setEdited(isEdited);dateDepart.setEdited(isEdited);motif Depart.setEdited(isEdited);regionArrivee.setEdited(isEdited);districtSanteArrivee.setEdited(isEdited);CDTArrivee.setEdited(isEdited);dateArrivee.setEdited(isEdited);
if (!AccessManager.canReadTransfertReferenceInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canReadTransfertReferenceInformationArrivee())informationArriveeSection.setVisible(false);
if (!AccessManager.canEditTransfertReferenceInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canEditTransfertReferenceInformationArrivee())informationArriveeSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTDepartWidget();getCDTDepartFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(regionArrivee)){clearDistrictSanteArriveeWidget();getDistrictSanteArriveeFilteredByRegionArrivee(regionArrivee.getValue());
if (field.equals(districtSanteArrivee)){clearCDTArriveeWidget();getCDTArriveeFilteredByDistrictSanteArrivee(districtSanteArrivee.getValue());
if (districtSanteArrivee.getValue()!=null){RegionProxyproxy=districtSanteArrivee.getValue().getRegion();regionArrivee.setValue(proxy);
if (field.equals(CDTDepart)){CentreDiagTraitProxycdtValue=CDTDepart.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);clearPatientWidget();getPatientFilteredByCDTDepart(cdtValue);patient.setEdited(true);
else {patient.setEdited(false);
if (field.equals(CDTArrivee)){CentreDiagTraitProxycdtValue=CDTArrivee.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();regionArrivee.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSanteArrivee.setValue(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDTDepart.hideButtons(false);cDTDepartDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegionArrivee!=null){
if (!hideButtons)districtSanteArrivee.hideButtons(false);districtSanteArriveeDataProvider.setFilterCriteria(pRegionArrivee.getId(),"region.id");
else {districtSanteArriveeDataProvider.setIsFiltered(false);
if (pDistrictSanteArrivee!=null){
if (!hideButtons)CDTArrivee.hideButtons(false);cDTArriveeDataProvider.setFilterCriteria(pDistrictSanteArrivee.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDTDepart.hideButtons(false);cDTDepartDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDepartDataProvider.setIsFiltered(false);
if (pRegion!=null){
if (!hideButtons)CDTArrivee.hideButtons(false);cDTArriveeDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTArriveeDataProvider.setIsFiltered(false);
if (pCDTDepart!=null){
if (!hideButtons)patient.hideButtons(false);patientDataProvider.filterByCdt(pCDTDepart.getId());
else {patientDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTDepartdependsonthevalueoffielddistrictSanteclearCDTDepartWidget();getCDTDepartFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){CDTDepart.setLocked(isLocked);CDTDepart.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){regionArrivee.setLocked(isLocked);regionArrivee.setValue(value);//FieldDistrictSanteArriveedependsonthevalueoffieldregionArriveeclearDistrictSanteArriveeWidget();getDistrictSanteArriveeFilteredByRegionArrivee(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){districtSanteArrivee.setLocked(isLocked);districtSanteArrivee.setValue(value);//FieldCDTArriveedependsonthevalueoffielddistrictSanteArriveeclearCDTArriveeWidget();getCDTArriveeFilteredByDistrictSanteArrivee(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){CDTArrivee.setLocked(isLocked);CDTArrivee.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDTDepart.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDTDepart.getValue().getId(),relationPopup,"CDTDepart");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDTDepart"))CDTDepart.setValue(value,true);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (regionArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,regionArrivee.getValue().getId(),relationPopup,"regionArrivee");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("regionArrivee"))regionArrivee.setValue(value,true);
if (districtSanteArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSanteArrivee.getValue().getId(),relationPopup,"districtSanteArrivee");relationPopup.addWidget(form);relationPopup.show();
if (regionArrivee.getValue()!=null)form.setRegion(regionArrivee.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSanteArrivee"))districtSanteArrivee.setValue(value,true);
if (CDTArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDTArrivee.getValue().getId(),relationPopup,"CDTArrivee");relationPopup.addWidget(form);relationPopup.show();
if (regionArrivee.getValue()!=null)form.setRegion(regionArrivee.getValue(),true);
if (districtSanteArrivee.getValue()!=null)form.setDistrictSante(districtSanteArrivee.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDTArrivee"))CDTArrivee.setValue(value,true);
if (nature.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nature");//regionisarequiredfield
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//patientisarequiredfield
if (patient.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patient");//dateDepartisarequiredfield
if (dateDepart.getValueWithoutParseException()==null&&dateDepart.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateDepart");//regionArriveeisarequiredfield
if (regionArrivee.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"regionArrivee");
if (errors!=null&&errors.size()>0){List<EditorError>natureFieldErrors=newArrayList<EditorError>();List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>patientFieldErrors=newArrayList<EditorError>();List<EditorError>dateDepartFieldErrors=newArrayList<EditorError>();List<EditorError>regionArriveeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("nature"))natureFieldErrors.add(error);
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("patient"))patientFieldErrors.add(error);
if (field.equals("dateDepart"))dateDepartFieldErrors.add(error);
if (field.equals("regionArrivee"))regionArriveeFieldErrors.add(error);
if (natureFieldErrors.size()>0)nature.showErrors(natureFieldErrors);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (patientFieldErrors.size()>0)patient.showErrors(patientFieldErrors);
if (dateDepartFieldErrors.size()>0)dateDepart.showErrors(dateDepartFieldErrors);
if (regionArriveeFieldErrors.size()>0)regionArrivee.showErrors(regionArriveeFieldErrors);
if theDisclosurePanelshallbeopenedofclosed*@paramopentrueoftheDisclosurePanelshallbeopened,falseotherwisepublicvoidsetOpen(booleanopen){disclosurePanel.setOpen(open);
if (parent!=null){editor=newCasIndexEditor(factory,true);this.initField=initField;
else editor=newCasIndexEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().casIndex_create_title());createDriver();createNewCasIndex();this.setContent(editor);
if (parent!=null){editor=newCasIndexEditor(factory,true);this.initField=initField;
else editor=newCasIndexEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCasIndex(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditCasIndex())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("CasIndexformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCasIndexEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetPatientLie(PatientProxyvalue,booleanisLocked){editor.setPatientLie(value,isLocked);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicPriseMedicamentRegimeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newPriseMedicamentRegimeEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newPriseMedicamentRegimeEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newPriseMedicamentRegimeEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newPriseMedicamentRegimeEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.PRISEMEDICAMENTREGIME_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PRISEMEDICAMENTREGIME_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicPriseMedicamentRegimeFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetRegime(RegimeProxyvalue,booleanisLocked){editorWorkflow.setRegime(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editorWorkflow.setMedicament(value,isLocked);
if (handler==null)initHandler();returnhandler.getById(id);
if (entity.getPrisesMedicamenteuses()!=null){StringBuilderbuilder=newStringBuilder();for(PriseMedicamentRegimei:entity.getPrisesMedicamenteuses()){builder.append(i.getId()).append(";");
if (parent!=null){editor=newPriseMedicamentRegimeEditor(factory,true);this.initField=initField;
else editor=newPriseMedicamentRegimeEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().priseMedicamentRegime_create_title());createDriver();createNewPriseMedicamentRegime();this.setContent(editor);
if (parent!=null){editor=newPriseMedicamentRegimeEditor(factory,true);this.initField=initField;
else editor=newPriseMedicamentRegimeEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchPriseMedicamentRegime(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (AccessManager.canEditPriseMedicamentRegime())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("PriseMedicamentRegimeformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewPriseMedicamentRegimeEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegime(RegimeProxyvalue,booleanisLocked){editor.setRegime(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){editor.setMedicament(value,isLocked);
if therelationfieldbuttonsshallbehiddenpublicSortieLotEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantite.setEdited(isEdited);
if (!AccessManager.canReadSortieLotDescription())CDT.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())lot.setVisible(false);
if (!AccessManager.canReadSortieLotDescription())quantite.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())CDT.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())lot.setVisible(false);
if (!AccessManager.canEditSortieLotDescription())quantite.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().sortieLot_field_quantite_min()),null,"quantite");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (EpicamIconConstants.DETAILRECEPTIONMEDICAMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.DETAILRECEPTIONMEDICAMENT_ICON);DetailReceptionMedicamentDataProviderprovider=newDetailReceptionMedicamentDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteDetailReceptionMedicament()&&AccessManager.canEditDetailReceptionMedicament())listComposite=newDetailReceptionMedicamentDynaTable(requestFactory,provider,true);
else listComposite=newDetailReceptionMedicamentDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (value!=null){
if (editor.getList()==null)editor.setValue(newArrayList<DetailInventaireProxy>());editor.getList().add(value);updateIndex();//updatesubeditorList<DetailInventaireEditorNestedRow>editors=editor.getEditors();DetailInventaireEditorNestedRowsubEditor=editors.get(editors.size()-1);subEditor.setNewProxy(isNew);subEditor.computeVisibility(null,true);subEditor.setEdited(true);subEditor.setCDT(currentCdt,true);
if (currentIndex>0){listContainer.insert(editor,currentIndex-1);updateIndex();
if (currentIndex<listContainer.getWidgetCount()+1){listContainer.insert(editor,currentIndex+2);updateIndex();
if (editors!=null&&editors.size()>0){for(DetailInventaireEditorNestedRowsubEditor:editors)subEditor.setEdited(isEdited);
if (editors!=null&&editors.size()>0){for(DetailInventaireEditorNestedRowsubEditor:editors)subEditor.computeVisibility(source,allValidation);
if (editors!=null&&editors.size()>0){for(DetailInventaireEditorNestedRowsubEditor:editors)subEditor.setCDT(value,true);
if (editors!=null&&editors.size()>0){for(DetailInventaireEditorNestedRowsubEditor:editors)subEditor.validateFields();
if (editors!=null&&editors.size()>0){for(DetailInventaireEditorNestedRowsubEditor:editors)subEditor.showErrors(errors);
if (Window.confirm(BaseNLS.constants().confirmation_delete())){DetailInventaireProxyproxy=getProxy(subEditor.getIndex());
if (!subEditor.isNewProxy())request.delete(proxy);remove(subEditor.getIndex());updateIndex();
if therelationfieldbuttonsshallbehiddenpublicHorsUsageEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();lot.setEdited(isEdited);type.setEdited(isEdited);motif .setEdited(isEdited);
if (!AccessManager.canReadHorsUsageDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditHorsUsageDescription())descriptionSection.setVisible(false);
if (errors!=null&&errors.size()>0){List<EditorError>lotFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("lot"))lotFieldErrors.add(error);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (handler==null)initHandler();returnhandler.getById(id);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(FieldGroupProfileentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){
if (isNew){entity.setCreated(newDate(systemUtil.getCurrentTimeMillis()));entity.setCreatedBy(actor.getLogin());
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<FieldGroupProfile>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<FieldGroupProfile>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<FieldGroupProfile>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(FieldGroupProfileentity:entities)delete(entity);
if (profile_name!=null&&!profile_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("profile.name");criteria.setValue(profile_name);junction.add(criteria);
if (fieldGroup_entity_name!=null&&!fieldGroup_entity_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("fieldGroup.entity.name");criteria.setValue(fieldGroup_entity_name);junction.add(criteria);
if (fieldGroup_name!=null&&!fieldGroup_name.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("fieldGroup.name");criteria.setValue(fieldGroup_name);junction.add(criteria);
if (read!=null&&!read.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("read");criteria.setValue(read);junction.add(criteria);
if (write!=null&&!write.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("write");criteria.setValue(write);junction.add(criteria);
if (export!=null&&!export.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("export");criteria.setValue(export);junction.add(criteria);
if (AccessManager.canReadExamenSerologieDescription()){Column<ExamenSerologieProxy,String>patientColumn=newPatientColumn();patientColumn.setSortable(true);table.addColumn(patientColumn,NLS.constants().examenSerologie_field_s_patient());
if (AccessManager.canReadExamenSerologieDescription()){Column<ExamenSerologieProxy,String>dateTestColumn=newDateTestColumn();dateTestColumn.setSortable(true);table.addColumn(dateTestColumn,NLS.constants().examenSerologie_field_s_dateTest());
if (AccessManager.canReadExamenSerologieDescription()){Column<ExamenSerologieProxy,String>natureColumn=newNatureColumn();natureColumn.setSortable(true);table.addColumn(natureColumn,NLS.constants().examenSerologie_field_s_nature());
if (AccessManager.canReadExamenSerologieDescription()){Column<ExamenSerologieProxy,String>resultatCD4Column=newResultatCD4Column();resultatCD4Column.setSortable(true);table.addColumn(resultatCD4Column,NLS.constants().examenSerologie_field_s_resultatCD4());
if (AccessManager.canReadExamenSerologieDescription()){Column<ExamenSerologieProxy,String>resultatVIHColumn=newResultatVIHColumn();resultatVIHColumn.setSortable(true);table.addColumn(resultatVIHColumn,NLS.constants().examenSerologie_field_s_resultatVIH());
if (AccessManager.canCreateExamenSerologie()&&AccessManager.canEditExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/examenserologie/",true);
else returnnull;
if (AccessManager.canDeleteExamenSerologie()&&AccessManager.canEditExamenSerologie()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteExamenSerologie()&&AccessManager.canEditExamenSerologie()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ExamenSerologieProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().examenSerologie_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ExamenSerologieProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getExamenSerologieRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedExamenSerologieentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListExamenSerologieEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.EXAM_SER_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=examenSerologie_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getPatient()==null)value="";
else value=renderer.getDisplayValue(object.getPatient());
if (object!=null){
if (object.getDateTest()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateTest());
if (object!=null){
if (object.getNature()==null)value="";
else value=renderer.getEnumDisplayValue(ExamenSerologieProxy.class,"nature",object.getNature());
if (object!=null){
if (object.getResultatCD4()==null)value="";
else value=object.getResultatCD4().toString();
if (object!=null){
if (object.getResultatVIH()==null)value="";
else value=renderer.getEnumDisplayValue(ExamenSerologieProxy.class,"resultatVIH",object.getResultatVIH());
if (handler==null)initHandler();returnhandler.getById(id);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(CasIndexentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<CasIndex>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<CasIndex>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<CasIndex>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(CasIndexentity:entities)delete(entity);
if (patient_identif iant!=null&&!patient_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.identif iant");criteria.setValue(patient_identif iant);junction.add(criteria);
if (patient_nom!=null&&!patient_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patient.nom");criteria.setValue(patient_nom);junction.add(criteria);
if (typeRelation!=null&&!typeRelation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("typeRelation");criteria.setValue(typeRelation);junction.add(criteria);
if (patientLie_identif iant!=null&&!patientLie_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patientLie.identif iant");criteria.setValue(patientLie_identif iant);junction.add(criteria);
if (patientLie_nom!=null&&!patientLie_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("patientLie.nom");criteria.setValue(patientLie_nom);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionMedicamentEditorNestedForm(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament())detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isClearImageActive)clearImage.setVisible(isEdited);
else clearImage.setVisible(false);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())commande.setVisible(false);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())detailCommande.setVisible(false);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())entreeLot.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())commande.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())detailCommande.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())entreeLot.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeMedicamentProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeMedicamentFormPanelform=newDetailCommandeMedicamentFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicDetailReceptionMedicamentEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenreception=newImogSingleRelationBox<ReceptionProxy>(receptionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateReception()&&AccessManager.canEditReception())reception=newImogSingleRelationBox<ReceptionProxy>(receptionDataProvider,EpicamRenderer.get());
else reception=newImogSingleRelationBox<ReceptionProxy>(false,receptionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendetailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDetailCommandeMedicament()&&AccessManager.canEditDetailCommandeMedicament())detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(detailCommandeDataProvider,EpicamRenderer.get());
else detailCommande=newImogSingleRelationBox<DetailCommandeMedicamentProxy>(false,detailCommandeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();//readonlyfieldreception.setEdited(false);commande.setEdited(isEdited);detailCommande.setEdited(isEdited);entreeLot.setEdited(isEdited);
if (!AccessManager.canReadDetailReceptionMedicamentDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDetailReceptionMedicamentDescription())descriptionSection.setVisible(false);
if (field.equals(commande)){clearDetailCommandeWidget();getDetailCommandeFilteredByCommande(commande.getValue());
if (pCommande!=null){
if (!hideButtons)detailCommande.hideButtons(false);detailCommandeDataProvider.setFilterCriteria(pCommande.getId(),"commande.id");
else {detailCommande.hideButtons(true);detailCommandeDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetReception(ReceptionProxyvalue,booleanisLocked){reception.setLocked(isLocked);reception.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);//FieldDetailCommandedependsonthevalueoffieldcommandeclearDetailCommandeWidget();getDetailCommandeFilteredByCommande(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDetailCommande(DetailCommandeMedicamentProxyvalue,booleanisLocked){detailCommande.setLocked(isLocked);detailCommande.setValue(value);
if (reception.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();ReceptionFormPanelform=newReceptionFormPanel(requestFactory,reception.getValue().getId(),relationPopup,"reception");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("reception"))reception.setValue(value,true);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (detailCommande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DetailCommandeMedicamentFormPanelform=newDetailCommandeMedicamentFormPanel(requestFactory,detailCommande.getValue().getId(),relationPopup,"detailCommande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("detailCommande"))detailCommande.setValue(value,true);
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//detailCommandeisarequiredfield
if (detailCommande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"detailCommande");//entreeLotnestedformshallbevalidatedentreeLot.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>detailCommandeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("detailCommande"))detailCommandeFieldErrors.add(error);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (detailCommandeFieldErrors.size()>0)detailCommande.showErrors(detailCommandeFieldErrors);
if (initField==null)handler.saveDetailReceptionMedicament(value);
else handler.saveDetailReceptionMedicament(value,initField);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.region.id"),personnel.getRegion().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.regionArrivee.id"),personnel.getRegion().getId()));
else 
if ("2".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.districtSante.id"),personnel.getDistrictSante().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.districtSanteArrivee.id"),personnel.getDistrictSante().getId()));
else 
if ("3".equals(niveau)){returnbuilder.or(builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.CDTDepart.id"),personnel.getCDT().getId()),builder.equal(DaoUtil.getCascadeRoot(root,"ravitaillement.CDTArrivee.id"),personnel.getCDT().getId()));
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicEntreeLotDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedEntreeLot(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedEntreeLotReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listEntreeLot(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedEntreeLot(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedEntreeLotReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listEntreeLot(start,numRows,"modif ied",false,filterCriteria);
else result=request.getEntreeLotEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedEntreeLot(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedEntreeLotReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listEntreeLot(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedEntreeLot(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedEntreeLotReverse(start,numRows,"modif ied",false,property);
else result=request.listEntreeLot(start,numRows,"modif ied",false);
if (isFiltered){result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
else {result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listEntreeLot(start,numRows,property,asc,searchCriterions);
else result=request.listEntreeLot(start,numRows,property,asc,filterCriteria);
else result=request.getEntreeLotEmptyList();
else {
if (searchCriterions!=null)result=request.listEntreeLot(start,numRows,property,asc,searchCriterions);
else result=request.listEntreeLot(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedEntreeLot(property,searchCriterions);
else returnrequest.countNonAffectedEntreeLotReverse(property,searchCriterions);
else returnrequest.countEntreeLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedEntreeLot(property,filterCriteria);
else returnrequest.countNonAffectedEntreeLotReverse(property,filterCriteria);
else returnrequest.countEntreeLot(filterCriteria);
else returnrequest.countNonAffectedEntreeLot("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedEntreeLot(property,searchCriterions);
else returnrequest.countNonAffectedEntreeLotReverse(property,searchCriterions);
else returnrequest.countEntreeLot(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedEntreeLot(property);
else returnrequest.countNonAffectedEntreeLotReverse(property);
else returnrequest.countEntreeLot();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();EntreeLotRequestrequest=(EntreeLotRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNumeroBasicCriteriaProxylot_numeroCrit=request.create(BasicCriteriaProxy.class);lot_numeroCrit.setField("lot.numero");lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_numeroCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_numero()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_numeroCrit);//SearchfieldIdentif iantBasicCriteriaProxylot_intrant_identif iantCrit=request.create(BasicCriteriaProxy.class);lot_intrant_identif iantCrit.setField("lot.intrant.identif iant");lot_intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_intrant_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_intrant_identif iantCrit);//SearchfieldDesignationBasicCriteriaProxylot_medicament_designationCrit=request.create(BasicCriteriaProxy.class);lot_medicament_designationCrit.setField("lot.medicament.designation");lot_medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_medicament_designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_medicament_designationCrit);//SearchfieldQuantitetry{Integer.valueOf(text);BasicCriteriaProxylot_quantiteCrit=request.create(BasicCriteriaProxy.class);lot_quantiteCrit.setField("lot.quantite");lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);lot_quantiteCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_quantite()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_quantiteCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicCasTuberculoseDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasTuberculose(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedCasTuberculoseReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listCasTuberculose(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasTuberculose(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedCasTuberculoseReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listCasTuberculose(start,numRows,"modif ied",false,filterCriteria);
else result=request.getCasTuberculoseEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasTuberculose(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedCasTuberculoseReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listCasTuberculose(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedCasTuberculose(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedCasTuberculoseReverse(start,numRows,"modif ied",false,property);
else result=request.listCasTuberculose(start,numRows,"modif ied",false);
if (isFiltered){result.with("patient");
else {result.with("patient");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listCasTuberculose(start,numRows,property,asc,searchCriterions);
else result=request.listCasTuberculose(start,numRows,property,asc,filterCriteria);
else result=request.getCasTuberculoseEmptyList();
else {
if (searchCriterions!=null)result=request.listCasTuberculose(start,numRows,property,asc,searchCriterions);
else result=request.listCasTuberculose(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasTuberculose(property,searchCriterions);
else returnrequest.countNonAffectedCasTuberculoseReverse(property,searchCriterions);
else returnrequest.countCasTuberculose(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasTuberculose(property,filterCriteria);
else returnrequest.countNonAffectedCasTuberculoseReverse(property,filterCriteria);
else returnrequest.countCasTuberculose(filterCriteria);
else returnrequest.countNonAffectedCasTuberculose("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasTuberculose(property,searchCriterions);
else returnrequest.countNonAffectedCasTuberculoseReverse(property,searchCriterions);
else returnrequest.countCasTuberculose(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedCasTuberculose(property);
else returnrequest.countNonAffectedCasTuberculoseReverse(property);
else returnrequest.countCasTuberculose();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();CasTuberculoseRequestrequest=(CasTuberculoseRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldIdentif iantBasicCriteriaProxypatient_identif iantCrit=request.create(BasicCriteriaProxy.class);patient_identif iantCrit.setField("patient.identif iant");patient_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_identif iantCrit);//SearchfieldNomBasicCriteriaProxypatient_nomCrit=request.create(BasicCriteriaProxy.class);patient_nomCrit.setField("patient.nom");patient_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);patient_nomCrit.setValue(text);buffer.append("("+NLS.constants().patient_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(patient_nomCrit);//SearchfieldDateDebutTraitementtry{DateUtil.parseDate(text);BasicCriteriaProxydateDebutTraitementCrit=request.create(BasicCriteriaProxy.class);dateDebutTraitementCrit.setField("dateDebutTraitement");dateDebutTraitementCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateDebutTraitementCrit.setValue(text);buffer.append("("+NLS.constants().casTuberculose_field_dateDebutTraitement()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateDebutTraitementCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_typePatient_nouveauCas_option().toLowerCase())){BasicCriteriaProxytypePatientCrit=request.create(BasicCriteriaProxy.class);typePatientCrit.setField("typePatient");typePatientCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typePatientCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_NOUVEAUCAS);buffer.append("("+NLS.constants().casTuberculose_field_typePatient()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typePatientCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_typePatient_repriseApresAbandon_option().toLowerCase())){BasicCriteriaProxytypePatientCrit=request.create(BasicCriteriaProxy.class);typePatientCrit.setField("typePatient");typePatientCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typePatientCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_REPRISEAPRESABANDON);buffer.append("("+NLS.constants().casTuberculose_field_typePatient()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typePatientCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_typePatient_echec_option().toLowerCase())){BasicCriteriaProxytypePatientCrit=request.create(BasicCriteriaProxy.class);typePatientCrit.setField("typePatient");typePatientCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typePatientCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_ECHEC);buffer.append("("+NLS.constants().casTuberculose_field_typePatient()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typePatientCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_typePatient_rechute_option().toLowerCase())){BasicCriteriaProxytypePatientCrit=request.create(BasicCriteriaProxy.class);typePatientCrit.setField("typePatient");typePatientCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typePatientCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_RECHUTE);buffer.append("("+NLS.constants().casTuberculose_field_typePatient()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typePatientCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_typePatient_autre_option().toLowerCase())){BasicCriteriaProxytypePatientCrit=request.create(BasicCriteriaProxy.class);typePatientCrit.setField("typePatient");typePatientCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typePatientCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_TYPEPATIENT_AUTRE);buffer.append("("+NLS.constants().casTuberculose_field_typePatient()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typePatientCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_formeMaladie_tPMPlus_option().toLowerCase())){BasicCriteriaProxyformeMaladieCrit=request.create(BasicCriteriaProxy.class);formeMaladieCrit.setField("formeMaladie");formeMaladieCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);formeMaladieCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMPLUS);buffer.append("("+NLS.constants().casTuberculose_field_formeMaladie()+":"+text+")"+SYMBOL_OR+"");criterionList.add(formeMaladieCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_formeMaladie_tPMMoins_option().toLowerCase())){BasicCriteriaProxyformeMaladieCrit=request.create(BasicCriteriaProxy.class);formeMaladieCrit.setField("formeMaladie");formeMaladieCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);formeMaladieCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_TPMMOINS);buffer.append("("+NLS.constants().casTuberculose_field_formeMaladie()+":"+text+")"+SYMBOL_OR+"");criterionList.add(formeMaladieCrit);
if (text.toLowerCase().equals(NLS.constants().casTuberculose_formeMaladie_extra_Pulmonaire_option().toLowerCase())){BasicCriteriaProxyformeMaladieCrit=request.create(BasicCriteriaProxy.class);formeMaladieCrit.setField("formeMaladie");formeMaladieCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);formeMaladieCrit.setValue(EpicamEnumConstants.CASTUBERCULOSE_FORMEMALADIE_EXTRA_PULMONAIRE);buffer.append("("+NLS.constants().casTuberculose_field_formeMaladie()+":"+text+")"+SYMBOL_OR+"");criterionList.add(formeMaladieCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (AccessManager.canReadRegimeDescription()){Column<RegimeProxy,String>nomColumn=newNomColumn();nomColumn.setSortable(true);table.addColumn(nomColumn,NLS.constants().regime_field_s_nom());
if (AccessManager.canReadRegimeDescription()){Column<RegimeProxy,String>typeColumn=newTypeColumn();typeColumn.setSortable(true);table.addColumn(typeColumn,NLS.constants().regime_field_s_type());
if (AccessManager.canReadRegimeDescription()){Column<RegimeProxy,String>dureeTraitementColumn=newDureeTraitementColumn();dureeTraitementColumn.setSortable(true);table.addColumn(dureeTraitementColumn,NLS.constants().regime_field_s_dureeTraitement());
if (AccessManager.canReadRegimeDescription()){Column<RegimeProxy,String>poidsMinColumn=newPoidsMinColumn();poidsMinColumn.setSortable(true);table.addColumn(poidsMinColumn,NLS.constants().regime_field_s_poidsMin());
if (AccessManager.canReadRegimeDescription()){Column<RegimeProxy,String>poidsMaxColumn=newPoidsMaxColumn();poidsMaxColumn.setSortable(true);table.addColumn(poidsMaxColumn,NLS.constants().regime_field_s_poidsMax());
if (AccessManager.canCreateRegime()&&AccessManager.canEditRegime()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/regime/",true);
else returnnull;
if (AccessManager.canDeleteRegime()&&AccessManager.canEditRegime()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteRegime()&&AccessManager.canEditRegime()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<RegimeProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().regime_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(RegimeProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getRegimeRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedRegimeentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListRegimeEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportRegime()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.REGIM_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=regime_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getNom()==null)value="";
else value=object.getNom();
if (object!=null){
if (object.getType()==null)value="";
else value=renderer.getEnumDisplayValue(RegimeProxy.class,"type",object.getType());
if (object!=null){
if (object.getDureeTraitement()==null)value="";
else value=object.getDureeTraitement().toString();
if (object!=null){
if (object.getPoidsMin()==null)value="";
else value=object.getPoidsMin().toString();
if (object!=null){
if (object.getPoidsMax()==null)value="";
else value=object.getPoidsMax().toString();
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(Qualif icationentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<Qualif ication>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<Qualif ication>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<Qualif ication>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(Qualif icationentity:entities)delete(entity);
if (code!=null&&!code.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("code");criteria.setValue(code);junction.add(criteria);
if (nom_francais!=null&&!nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.francais");criteria.setValue(nom_francais);junction.add(criteria);
if (nom_english!=null&&!nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("nom.english");criteria.setValue(nom_english);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (searchText==null)handler.listExamenATB();
else handler.listExamenATB(searchText);
if (entity.getPhaseIntensive()!=null){bck.setPhaseIntensive(entity.getPhaseIntensive().getId());
if (entity.getPhaseContinuation()!=null){bck.setPhaseContinuation(entity.getPhaseContinuation().getId());
if (searchText==null)handler.listInventaire();
else handler.listInventaire(searchText);
if therelationfieldbuttonsshallbehiddenpublicRavitaillementEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDepartDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDepartDataProvider,EpicamRenderer.get());
else CDTDepart=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDepartDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenregionArrivee=newImogSingleRelationBox<RegionProxy>(regionArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())regionArrivee=newImogSingleRelationBox<RegionProxy>(regionArriveeDataProvider,EpicamRenderer.get());
else regionArrivee=newImogSingleRelationBox<RegionProxy>(false,regionArriveeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteArriveeDataProvider,EpicamRenderer.get());
else districtSanteArrivee=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteArriveeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTArriveeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTArriveeDataProvider,EpicamRenderer.get());
else CDTArrivee=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTArriveeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDTDepart.setEdited(isEdited);dateDepart.setEdited(isEdited);regionArrivee.setEdited(isEdited);districtSanteArrivee.setEdited(isEdited);CDTArrivee.setEdited(isEdited);dateArrivee.setEdited(isEdited);details.setEdited(isEdited);
if (!AccessManager.canReadRavitaillementInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canReadRavitaillementInformationArrivee())informationArriveeSection.setVisible(false);
if (!AccessManager.canReadRavitaillementDetail())detailSection.setVisible(false);
if (!AccessManager.canEditRavitaillementInformationsDepart())informationsDepartSection.setVisible(false);
if (!AccessManager.canEditRavitaillementInformationArrivee())informationArriveeSection.setVisible(false);
if (!AccessManager.canEditRavitaillementDetail())detailSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTDepartWidget();getCDTDepartFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(regionArrivee)){clearDistrictSanteArriveeWidget();getDistrictSanteArriveeFilteredByRegionArrivee(regionArrivee.getValue());commonFieldUtil.setRegion(regionArrivee.getValue());
if (field.equals(districtSanteArrivee)){clearCDTArriveeWidget();getCDTArriveeFilteredByDistrictSanteArrivee(districtSanteArrivee.getValue());commonFieldUtil.setDistrict(districtSanteArrivee.getValue());
if (districtSanteArrivee.getValue()!=null){RegionProxyproxy=districtSanteArrivee.getValue().getRegion();regionArrivee.setValue(proxy);commonFieldUtil.setRegion(proxy);
if (field.equals(CDTDepart)){updateCDTDepartInNestedForms(CDTDepart.getValue());
if (field.equals(CDTArrivee)){updateCDTArriveeInNestedForms(CDTArrivee.getValue());
if (field.equals(CDTDepart)){CentreDiagTraitProxycdtValue=CDTDepart.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (field.equals(CDTArrivee)){CentreDiagTraitProxycdtValue=CDTArrivee.getValue();commonFieldUtil.setCdt(cdtValue);
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();regionArrivee.setValue(regionValue);commonFieldUtil.setRegion(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSanteArrivee.setValue(districtValue);commonFieldUtil.setDistrict(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDTDepart.hideButtons(false);cDTDepartDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegionArrivee!=null){
if (!hideButtons)districtSanteArrivee.hideButtons(false);districtSanteArriveeDataProvider.setFilterCriteria(pRegionArrivee.getId(),"region.id");
else {districtSanteArriveeDataProvider.setIsFiltered(false);
if (pDistrictSanteArrivee!=null){
if (!hideButtons)CDTArrivee.hideButtons(false);cDTArriveeDataProvider.setFilterCriteria(pDistrictSanteArrivee.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDTDepart.hideButtons(false);cDTDepartDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDepartDataProvider.setIsFiltered(false);
if (pRegion!=null){
if (!hideButtons)CDTArrivee.hideButtons(false);cDTArriveeDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTArriveeDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTDepartdependsonthevalueoffielddistrictSanteclearCDTDepartWidget();getCDTDepartFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTDepart(CentreDiagTraitProxyvalue,booleanisLocked){CDTDepart.setLocked(isLocked);CDTDepart.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetRegionArrivee(RegionProxyvalue,booleanisLocked){regionArrivee.setLocked(isLocked);regionArrivee.setValue(value);//FieldDistrictSanteArriveedependsonthevalueoffieldregionArriveeclearDistrictSanteArriveeWidget();getDistrictSanteArriveeFilteredByRegionArrivee(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSanteArrivee(DistrictSanteProxyvalue,booleanisLocked){districtSanteArrivee.setLocked(isLocked);districtSanteArrivee.setValue(value);//FieldCDTArriveedependsonthevalueoffielddistrictSanteArriveeclearCDTArriveeWidget();getCDTArriveeFilteredByDistrictSanteArrivee(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDTArrivee(CentreDiagTraitProxyvalue,booleanisLocked){CDTArrivee.setLocked(isLocked);CDTArrivee.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDTDepart.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDTDepart.getValue().getId(),relationPopup,"CDTDepart");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDTDepart"))CDTDepart.setValue(value,true);
if (regionArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,regionArrivee.getValue().getId(),relationPopup,"regionArrivee");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("regionArrivee"))regionArrivee.setValue(value,true);
if (districtSanteArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSanteArrivee.getValue().getId(),relationPopup,"districtSanteArrivee");relationPopup.addWidget(form);relationPopup.show();
if (regionArrivee.getValue()!=null)form.setRegion(regionArrivee.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSanteArrivee"))districtSanteArrivee.setValue(value,true);
if (CDTArrivee.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDTArrivee.getValue().getId(),relationPopup,"CDTArrivee");relationPopup.addWidget(form);relationPopup.show();
if (districtSanteArrivee.getValue()!=null)form.setDistrictSante(districtSanteArrivee.getValue(),true);
if (regionArrivee.getValue()!=null)form.setRegion(regionArrivee.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDTArrivee"))CDTArrivee.setValue(value,true);
if (editedValue!=null){setCDTDepartInNestedForms(editedValue.getCDTDepart());setCDTArriveeInNestedForms(editedValue.getCDTArrivee());//setsvalueforcommonfieldswhencreatinganewlotinchildeditorscommonFieldUtil.setRegion(editedValue.getRegionArrivee());commonFieldUtil.setDistrict(editedValue.getDistrictSanteArrivee());commonFieldUtil.setCdt(editedValue.getCDTArrivee());
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//cDTDepartisarequiredfield
if (CDTDepart.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDTDepart");//dateDepartisarequiredfield
if (dateDepart.getValueWithoutParseException()==null&&dateDepart.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateDepart");//regionArriveeisarequiredfield
if (regionArrivee.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"regionArrivee");//districtSanteArriveeisarequiredfield
if (districtSanteArrivee.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSanteArrivee");//cDTArriveeisarequiredfield
if (CDTArrivee.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDTArrivee");//detailsnestedformshallbevalidateddetails.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>cDTDepartFieldErrors=newArrayList<EditorError>();List<EditorError>dateDepartFieldErrors=newArrayList<EditorError>();List<EditorError>regionArriveeFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteArriveeFieldErrors=newArrayList<EditorError>();List<EditorError>cDTArriveeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("cDTDepart"))cDTDepartFieldErrors.add(error);
if (field.equals("dateDepart"))dateDepartFieldErrors.add(error);
if (field.equals("regionArrivee"))regionArriveeFieldErrors.add(error);
if (field.equals("districtSanteArrivee"))districtSanteArriveeFieldErrors.add(error);
if (field.equals("cDTArrivee"))cDTArriveeFieldErrors.add(error);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (cDTDepartFieldErrors.size()>0)CDTDepart.showErrors(cDTDepartFieldErrors);
if (dateDepartFieldErrors.size()>0)dateDepart.showErrors(dateDepartFieldErrors);
if (regionArriveeFieldErrors.size()>0)regionArrivee.showErrors(regionArriveeFieldErrors);
if (districtSanteArriveeFieldErrors.size()>0)districtSanteArrivee.showErrors(districtSanteArriveeFieldErrors);
if (cDTArriveeFieldErrors.size()>0)CDTArrivee.showErrors(cDTArriveeFieldErrors);
if (initField==null)handler.saveQualif ication(value);
else handler.saveQualif ication(value,initField);
if (handler==null)initHandler();returnhandler.getById(id);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(SortieLotentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<SortieLot>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<SortieLot>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<SortieLot>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(SortieLotentity:entities)delete(entity);
if (lot_numero!=null&&!lot_numero.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.numero");criteria.setValue(lot_numero);junction.add(criteria);
if (lot_intrant_identif iant!=null&&!lot_intrant_identif iant.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.intrant.identif iant");criteria.setValue(lot_intrant_identif iant);junction.add(criteria);
if (lot_medicament_designation!=null&&!lot_medicament_designation.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("lot.medicament.designation");criteria.setValue(lot_medicament_designation);junction.add(criteria);
if (lot_quantite!=null&&!lot_quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("lot.quantite");criteria.setValue(lot_quantite);junction.add(criteria);
if (quantite!=null&&!quantite.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);criteria.setField("quantite");criteria.setValue(quantite);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
if (!enabled){textBox.addStyleDependentName("disabled");email.addStyleDependentName("clickable");
else {textBox.removeStyleDependentName("disabled");email.removeStyleDependentName("clickable");
if (clickable&&textBox.getText().length()>0)Window.open("mailto:"+textBox.getText(),"email","");
if (!result.isEmpty()&&!result.matches(EMAIL_REGEX)){isValid=false;delegate.recordError(BaseNLS.messages().error_format_email(),result,null);
if (result.isEmpty())returnnull;
else returnresult;
if (!result.isEmpty()&&!result.matches(EMAIL_REGEX)){isValid=false;
if (result.isEmpty())returnnull;
else returnresult;
if theenteredvalueisavalidInteger*@returnpublicbooleanisValid(){returnisValid;
if therelationfieldbuttonsshallbehiddenpublicExamenATBEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlaboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLaboratoireReference()&&AccessManager.canEditLaboratoireReference())laboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(laboratoireReferenceDataProvider,EpicamRenderer.get());
else laboratoireReference=newImogSingleRelationBox<LaboratoireReferenceProxy>(false,laboratoireReferenceDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencasTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCasTuberculose()&&AccessManager.canEditCasTuberculose())casTb=newImogSingleRelationBox<CasTuberculoseProxy>(casTbDataProvider,EpicamRenderer.get());
else casTb=newImogSingleRelationBox<CasTuberculoseProxy>(false,casTbDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);laboratoireReference.setEdited(isEdited);casTb.setEdited(isEdited);dateExamen.setEdited(isEdited);raisonDepistage.setEdited(isEdited);resultat.setEdited(isEdited);observations.setEdited(isEdited);
if (!AccessManager.canReadExamenATBCentreExamen())centreExamenSection.setVisible(false);
if (!AccessManager.canReadExamenATBExamen())examenSection.setVisible(false);
if (!AccessManager.canEditExamenATBCentreExamen())centreExamenSection.setVisible(false);
if (!AccessManager.canEditExamenATBExamen())examenSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLaboratoireReference(LaboratoireReferenceProxyvalue,booleanisLocked){laboratoireReference.setLocked(isLocked);laboratoireReference.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCasTb(CasTuberculoseProxyvalue,booleanisLocked){casTb.setLocked(isLocked);casTb.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (laboratoireReference.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LaboratoireReferenceFormPanelform=newLaboratoireReferenceFormPanel(requestFactory,laboratoireReference.getValue().getId(),relationPopup,"laboratoireReference");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("laboratoireReference"))laboratoireReference.setValue(value,true);
if (casTb.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CasTuberculoseFormPanelform=newCasTuberculoseFormPanel(requestFactory,casTb.getValue().getId(),relationPopup,"casTb");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("casTb"))casTb.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//casTbisarequiredfield
if (casTb.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"casTb");//dateExamenisarequiredfield
if (dateExamen.getValueWithoutParseException()==null&&dateExamen.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateExamen");//raisonDepistageisarequiredfield
if (raisonDepistage.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"raisonDepistage");//resultatisarequiredfield
if (resultat.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"resultat");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>casTbFieldErrors=newArrayList<EditorError>();List<EditorError>dateExamenFieldErrors=newArrayList<EditorError>();List<EditorError>raisonDepistageFieldErrors=newArrayList<EditorError>();List<EditorError>resultatFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("casTb"))casTbFieldErrors.add(error);
if (field.equals("dateExamen"))dateExamenFieldErrors.add(error);
if (field.equals("raisonDepistage"))raisonDepistageFieldErrors.add(error);
if (field.equals("resultat"))resultatFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (casTbFieldErrors.size()>0)casTb.showErrors(casTbFieldErrors);
if (dateExamenFieldErrors.size()>0)dateExamen.showErrors(dateExamenFieldErrors);
if (raisonDepistageFieldErrors.size()>0)raisonDepistage.showErrors(raisonDepistageFieldErrors);
if (resultatFieldErrors.size()>0)resultat.showErrors(resultatFieldErrors);
if therelationfieldbuttonsshallbehiddenpublicPriseMedicamentRegimeEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregime=newImogSingleRelationBox<RegimeProxy>(regimeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegime()&&AccessManager.canEditRegime())regime=newImogSingleRelationBox<RegimeProxy>(regimeDataProvider,EpicamRenderer.get());
else regime=newImogSingleRelationBox<RegimeProxy>(false,regimeDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();regime.setEdited(isEdited);medicament.setEdited(isEdited);quantite.setEdited(isEdited);quantiteUnite.setEdited(isEdited);
if (!AccessManager.canReadPriseMedicamentRegimeDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditPriseMedicamentRegimeDescription())descriptionSection.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegime(RegimeProxyvalue,booleanisLocked){regime.setLocked(isLocked);regime.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if (regime.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegimeFormPanelform=newRegimeFormPanel(requestFactory,regime.getValue().getId(),relationPopup,"regime");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("regime"))regime.setValue(value,true);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (medicament.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"medicament");//quantiteisarequiredfield
if (quantite.getValueWithoutParseException()==null&&quantite.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantite");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().priseMedicamentRegime_field_quantite_min()),null,"quantite");//quantiteUniteisarequiredfield
if (quantiteUnite.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteUnite");
if (errors!=null&&errors.size()>0){List<EditorError>medicamentFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteUniteFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("medicament"))medicamentFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (field.equals("quantiteUnite"))quantiteUniteFieldErrors.add(error);
if (medicamentFieldErrors.size()>0)medicament.showErrors(medicamentFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (quantiteUniteFieldErrors.size()>0)quantiteUnite.showErrors(quantiteUniteFieldErrors);
if (filter!=null){query.where(root.<String>get("id").in(ids),filter);
else {query.where(root.<String>get("id").in(ids));
if (filter!=null){query.where(builder.equal(root.<String>get("id"),id),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(builder.equal(root.<String>get("id"),id),DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(DaoUtil.<T>toPredicate(criterion,builder,root));
if (property==null){property="modif ied";
if (filter!=null){query.where(filter);
if (property==null){property="modif ied";
if (filter!=null){query.where(DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(DaoUtil.<T>toPredicate(criterion,builder,root));
if (property==null){property="modif ied";
if (filter!=null){query.where(filter);
if (filter!=null){query.where(DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root));
if (sortProperty==null){sortProperty="modif ied";
if (asc){query.orderBy(builder.asc(root.get(sortProperty)));
else {query.orderBy(builder.desc(root.get(sortProperty)));
if (filter!=null){query.where(root.<T,Object>join(property,JoinType.LEFT).<String>get("id").isNull(),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(root.<T,Object>join(property,JoinType.LEFT).<String>get("id").isNull(),DaoUtil.<T>toPredicate(criterion,builder,root));
if (sortProperty==null){sortProperty="modif ied";
if (asc){query.orderBy(builder.asc(root.get(sortProperty)));
else {query.orderBy(builder.desc(root.get(sortProperty)));
if (filter!=null){query.where(builder.equal(root.<T,Object>join(property,JoinType.INNER).<String>get("id"),id),filter);
else {query.where(builder.equal(root.<T,Object>join(property,JoinType.INNER).<String>get("id"),id));
if (filter!=null){query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(root.get(property).isNull(),DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(root.join(property,JoinType.LEFT).<String>get("id").isNull(),DaoUtil.<T>toPredicate(criterion,builder,root),filter);
else {query.where(root.join(property,JoinType.LEFT).<String>get("id").isNull(),DaoUtil.<T>toPredicate(criterion,builder,root));
if (filter!=null){query.where(filter);
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),DaoUtil.toPredicate(criterion,builder,root),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),DaoUtil.toPredicate(criterion,builder,root));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),builder.equal(root.<String>get("id"),id),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),builder.equal(root.<String>get("id"),id));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),builder.equal(root.<String>get("id"),id),DaoUtil.toPredicate(criterion,builder,root),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("modif ied"),date),builder.equal(root.<String>get("id"),id),DaoUtil.toPredicate(criterion,builder,root));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),DaoUtil.toPredicate(criterion,builder,root),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),DaoUtil.toPredicate(criterion,builder,root));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),builder.equal(root.<String>get("id"),id),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),builder.equal(root.<String>get("id"),id));
if (filter!=null){query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),builder.equal(root.<String>get("id"),id),DaoUtil.toPredicate(criterion,builder,root),filter);
else {query.where(builder.<Date>greaterThanOrEqualTo(root.<Date>get("uploadDate"),date),builder.equal(root.<String>get("id"),id),DaoUtil.toPredicate(criterion,builder,root));
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicSmsPredefiniDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSmsPredefini(start,numRows,"objet",true,searchCriterions,property);
else result=request.listNonAffectedSmsPredefiniReverse(start,numRows,"objet",true,searchCriterions,property);
else result=request.listSmsPredefini(start,numRows,"objet",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSmsPredefini(start,numRows,"objet",true,filterCriteria,property);
else result=request.listNonAffectedSmsPredefiniReverse(start,numRows,"objet",true,filterCriteria,property);
else result=request.listSmsPredefini(start,numRows,"objet",true,filterCriteria);
else result=request.getSmsPredefiniEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSmsPredefini(start,numRows,"objet",true,searchCriterions,property);
else result=request.listNonAffectedSmsPredefiniReverse(start,numRows,"objet",true,searchCriterions,property);
else result=request.listSmsPredefini(start,numRows,"objet",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedSmsPredefini(start,numRows,"objet",true,property);
else result=request.listNonAffectedSmsPredefiniReverse(start,numRows,"objet",true,property);
else result=request.listSmsPredefini(start,numRows,"objet",true);
if (isFiltered){result.with("objet");result.with("message");
else {result.with("objet");result.with("message");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listSmsPredefini(start,numRows,property,asc,searchCriterions);
else result=request.listSmsPredefini(start,numRows,property,asc,filterCriteria);
else result=request.getSmsPredefiniEmptyList();
else {
if (searchCriterions!=null)result=request.listSmsPredefini(start,numRows,property,asc,searchCriterions);
else result=request.listSmsPredefini(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSmsPredefini(property,searchCriterions);
else returnrequest.countNonAffectedSmsPredefiniReverse(property,searchCriterions);
else returnrequest.countSmsPredefini(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSmsPredefini(property,filterCriteria);
else returnrequest.countNonAffectedSmsPredefiniReverse(property,filterCriteria);
else returnrequest.countSmsPredefini(filterCriteria);
else returnrequest.countNonAffectedSmsPredefini("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSmsPredefini(property,searchCriterions);
else returnrequest.countNonAffectedSmsPredefiniReverse(property,searchCriterions);
else returnrequest.countSmsPredefini(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedSmsPredefini(property);
else returnrequest.countNonAffectedSmsPredefiniReverse(property);
else returnrequest.countSmsPredefini();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();SmsPredefiniRequestrequest=(SmsPredefiniRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldType
if (text.toLowerCase().equals(NLS.constants().smsPredefini_type_sensibilisation_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.SMSPREDEFINI_TYPE_SENSIBILISATION);buffer.append("("+NLS.constants().smsPredefini_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().smsPredefini_type_quizz_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.SMSPREDEFINI_TYPE_QUIZZ);buffer.append("("+NLS.constants().smsPredefini_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().smsPredefini_type_rappelRDV_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.SMSPREDEFINI_TYPE_RAPPELRDV);buffer.append("("+NLS.constants().smsPredefini_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().smsPredefini_type_medicalRecord_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.SMSPREDEFINI_TYPE_MEDICALRECORD);buffer.append("("+NLS.constants().smsPredefini_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (locale.equals("fr"))objetCrit.setField("objet.francais");
if (locale.equals("en"))objetCrit.setField("objet.english");objetCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);objetCrit.setValue(text);buffer.append("("+NLS.constants().smsPredefini_field_objet()+":"+text+")"+SYMBOL_OR+"");criterionList.add(objetCrit);//SearchfieldMessageBasicCriteriaProxymessageCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))messageCrit.setField("message.francais");
if (locale.equals("en"))messageCrit.setField("message.english");messageCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);messageCrit.setValue(text);buffer.append("("+NLS.constants().smsPredefini_field_message()+":"+text+")"+SYMBOL_OR+"");criterionList.add(messageCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (handler==null)initHandler();returnhandler.getById(id);
if (initField==null)handler.saveDepartPersonnel(value);
else handler.saveDepartPersonnel(value,initField);
if therelationfieldbuttonsshallbehiddenpublicDepartPersonnelEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);personnel.setEdited(isEdited);dateDepart.setEdited(isEdited);motif Depart.setEdited(isEdited);
if (!AccessManager.canReadDepartPersonnelPersonnel())personnelse ction.setVisible(false);
if (!AccessManager.canReadDepartPersonnelDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditDepartPersonnelPersonnel())personnelse ction.setVisible(false);
if (!AccessManager.canEditDepartPersonnelDescription())descriptionSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){clearPersonnelWidget();getPersonnelFilteredByCDT(CDT.getValue());
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pCDT!=null){
if (!hideButtons)personnel.hideButtons(false);personnelDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {personnel.hideButtons(true);personnelDataProvider.setFilterCriteria(null);
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldPersonneldependsonthevalueoffieldcDTclearPersonnelWidget();getPersonnelFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){personnel.setLocked(isLocked);personnel.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (personnel.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PersonnelFormPanelform=newPersonnelFormPanel(requestFactory,personnel.getValue().getId(),relationPopup,"personnel");relationPopup.addWidget(form);relationPopup.show();
if (CDT.getValue()!=null)form.setCDT(CDT.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("personnel"))personnel.setValue(value,true);
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//dateDepartisarequiredfield
if (dateDepart.getValueWithoutParseException()==null&&dateDepart.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateDepart");
if (errors!=null&&errors.size()>0){List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>dateDepartFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("dateDepart"))dateDepartFieldErrors.add(error);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (dateDepartFieldErrors.size()>0)dateDepart.showErrors(dateDepartFieldErrors);
if (AccessManager.canReadInventaireInformationsDepart()){Column<InventaireProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().inventaire_field_s_cDT());
if (AccessManager.canReadInventaireInformationsDepart()){Column<InventaireProxy,String>dateColumn=newDateColumn();dateColumn.setSortable(true);table.addColumn(dateColumn,NLS.constants().inventaire_field_s_date());
if (AccessManager.canCreateInventaire()&&AccessManager.canEditInventaire()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/inventaire/",true);
else returnnull;
if (AccessManager.canDeleteInventaire()&&AccessManager.canEditInventaire()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteInventaire()&&AccessManager.canEditInventaire()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<InventaireProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().inventaire_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(InventaireProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getInventaireRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedInventaireentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListInventaireEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportInventaire()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.INV_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=inventaire_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getDate()==null)value="";
else value=DateUtil.getFormatedDate(object.getDate());
if therelationfieldbuttonsshallbehiddenpublicReceptionEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddencommande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCommande()&&AccessManager.canEditCommande())commande=newImogSingleRelationBox<CommandeProxy>(commandeDataProvider,EpicamRenderer.get());
else commande=newImogSingleRelationBox<CommandeProxy>(false,commandeDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);commande.setEdited(isEdited);dateReception.setEdited(isEdited);medicaments.setEdited(isEdited);intrants.setEdited(isEdited);
if (!AccessManager.canReadReceptionDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditReceptionDescription())descriptionSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());commonFieldUtil.setRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());commonFieldUtil.setDistrict(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);commonFieldUtil.setRegion(proxy);
if (field.equals(CDT)){clearCommandeWidget();getCommandeFilteredByCDT(CDT.getValue());
if (field.equals(commande)){updateCommandeInNestedForms(commande.getValue());
if (field.equals(CDT)){updateCDTInNestedForms(CDT.getValue());
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();commonFieldUtil.setCdt(cdtValue);
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);commonFieldUtil.setRegion(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);commonFieldUtil.setDistrict(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pCDT!=null){
if (!hideButtons)commande.hideButtons(false);commandeDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {commande.hideButtons(true);commandeDataProvider.setFilterCriteria(null);
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldCommandedependsonthevalueoffieldcDTclearCommandeWidget();getCommandeFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCommande(CommandeProxyvalue,booleanisLocked){commande.setLocked(isLocked);commande.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (commande.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CommandeFormPanelform=newCommandeFormPanel(requestFactory,commande.getValue().getId(),relationPopup,"commande");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("commande"))commande.setValue(value,true);
if (editedValue!=null){setCommandeInNestedForms(editedValue.getCommande());setCDTInNestedForms(editedValue.getCDT());//setsvalueforcommonfieldswhencreatinganewlotinchildeditorscommonFieldUtil.setRegion(editedValue.getRegion());commonFieldUtil.setDistrict(editedValue.getDistrictSante());commonFieldUtil.setCdt(editedValue.getCDT());
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//cDTisarequiredfield
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//commandeisarequiredfield
if (commande.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"commande");//dateReceptionisarequiredfield
if (dateReception.getValueWithoutParseException()==null&&dateReception.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateReception");//medicamentsnestedformshallbevalidatedmedicaments.validateFields();//intrantsnestedformshallbevalidatedintrants.validateFields();
if (errors!=null&&errors.size()>0){List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>commandeFieldErrors=newArrayList<EditorError>();List<EditorError>dateReceptionFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("commande"))commandeFieldErrors.add(error);
if (field.equals("dateReception"))dateReceptionFieldErrors.add(error);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (commandeFieldErrors.size()>0)commande.showErrors(commandeFieldErrors);
if (dateReceptionFieldErrors.size()>0)dateReception.showErrors(dateReceptionFieldErrors);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicPatientFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newPatientEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newPatientEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newPatientEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newPatientEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.PATIENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.PATIENT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicPatientFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if therelationfieldbuttonsshallbehiddenpublicEntityProfileEditorNestedRow(AdminRequestFactoryfactory,booleanhideButtons,ImogBeanRendererrenderer){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields(renderer);initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenentity=newImogSingleRelationBox<CardEntityProxy>(entityDataProvider,renderer,true);
else {//inwrapperpanel,relationbuttonsenabled
if (ProfileUtil.isAdmin())entity=newImogSingleRelationBox<CardEntityProxy>(entityDataProvider,renderer);
else entity=newImogSingleRelationBox<CardEntityProxy>(false,entityDataProvider,renderer);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();entity.setEdited(false);create.setEdited(isEdited);delete.setEdited(isEdited);directAccess.setEdited(isEdited);export.setEdited(isEdited);
if (!ProfileUtil.isAdmin()){entity.setVisible(false);create.setVisible(false);delete.setVisible(false);directAccess.setVisible(false);export.setVisible(false);
if (!ProfileUtil.isAdmin()){entity.setVisible(false);create.setVisible(false);delete.setVisible(false);directAccess.setVisible(false);export.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetEntity(CardEntityProxyvalue,booleanisLocked){entity.setLocked(isLocked);entity.setValue(value);
if (entity.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"entity");
if (errors!=null&&errors.size()>0){List<EditorError>entityFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("entity"))entityFieldErrors.add(error);
if (entityFieldErrors.size()>0)entity.showErrors(entityFieldErrors);
if (method.getName().equals("saveOrUpdate")||method.getName().equals("merge")){handleSaveAction(args);
else 
if (method.getName().equals("load")&&args!=null&&args.length==1&&args[0]instanceofString){handleViewAction(result);
else 
if (method.getName().equals("delete")){handleDeleteAction(args);
if (isNew)typeAction=UserActionConstants.USERACTION_TYPE_CREATE;
else typeAction=UserActionConstants.USERACTION_TYPE_UPDATE;saveAction(typeAction,typeFormulaire,idFormulaire);try{cloneEntity(bean);
if (result!=null){ImogBeanbean=(ImogBean)result;StringidFormulaire=bean.getId();StringtypeFormulaire=bean.getClass().getSimpleName();StringtypeAction=UserActionConstants.USERACTION_TYPE_READ;saveAction(typeAction,typeFormulaire,idFormulaire);
if (source!=null){Objectclone=cloneFactory.clone(source);
if (clone!=null)genericDao.saveOrUpdate(clone);
if (user!=null&&user.getLogin()!=null&&!user.getLogin().isEmpty()){SessionInfosessionInfo=newSessionInfo();sessionInfo.setSessionId(HttpSessionUtil.getHttpSessionId());sessionInfo.setActor(user);returnsessionInfo;
else returnnull;
if thesessionisnotvalidatedpublicBooleanvalidateSession(StringsessionId){
if (sessionId.equals(HttpSessionUtil.getHttpSessionId())){returnnewBoolean(true);
else {returnnewBoolean(false);
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newIntrantEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newIntrantEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newIntrantEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newIntrantEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.INTRANT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.INTRANT_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicIntrantFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if therelationfieldbuttonsshallbehiddenpublicLotEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenmedicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateMedicament()&&AccessManager.canEditMedicament())medicament=newImogSingleRelationBox<MedicamentProxy>(medicamentDataProvider,EpicamRenderer.get());
else medicament=newImogSingleRelationBox<MedicamentProxy>(false,medicamentDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenintrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateIntrant()&&AccessManager.canEditIntrant())intrant=newImogSingleRelationBox<IntrantProxy>(intrantDataProvider,EpicamRenderer.get());
else intrant=newImogSingleRelationBox<IntrantProxy>(false,intrantDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);numero.setEdited(isEdited);type.setEdited(isEdited);medicament.setEdited(isEdited);intrant.setEdited(isEdited);quantiteInitiale.setEdited(isEdited);//readonlyfieldquantite.setEdited(false);datePeremption.setEdited(isEdited);
if (!AccessManager.canReadLotDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditLotDescription())descriptionSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("0"))){medicament.setVisible(true);
else {medicament.setVisible(false);
if (allValidation||source.equals(type)){
if ((type.getValue()!=null&&type.getValue().matches("1"))){intrant.setVisible(true);
else {intrant.setVisible(false);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetMedicament(MedicamentProxyvalue,booleanisLocked){medicament.setLocked(isLocked);medicament.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetIntrant(IntrantProxyvalue,booleanisLocked){intrant.setLocked(isLocked);intrant.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (medicament.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();MedicamentFormPanelform=newMedicamentFormPanel(requestFactory,medicament.getValue().getId(),relationPopup,"medicament");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("medicament"))medicament.setValue(value,true);
if (intrant.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();IntrantFormPanelform=newIntrantFormPanel(requestFactory,intrant.getValue().getId(),relationPopup,"intrant");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("intrant"))intrant.setValue(value,true);
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//districtSanteisarequiredfield
if (districtSante.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"districtSante");//cDTisarequiredfield
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//numeroisarequiredfield
if (numero.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"numero");//typeisarequiredfield
if (type.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"type");//quantiteInitialeisarequiredfield
if (quantiteInitiale.getValueWithoutParseException()==null&&quantiteInitiale.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteInitiale");//quantiteInitialeshallbesuperiororequalto'0'
if (quantiteInitiale.getValueWithoutParseException()!=null&&!(quantiteInitiale.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().lot_field_quantiteInitiale_min()),null,"quantiteInitiale");//quantiteshallbesuperiororequalto'0'
if (quantite.getValueWithoutParseException()!=null&&!(quantite.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().lot_field_quantite_min()),null,"quantite");//datePeremptionisarequiredfield
if (datePeremption.getValueWithoutParseException()==null&&datePeremption.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"datePeremption");
if (errors!=null&&errors.size()>0){List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>districtSanteFieldErrors=newArrayList<EditorError>();List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>numeroFieldErrors=newArrayList<EditorError>();List<EditorError>typeFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteInitialeFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteFieldErrors=newArrayList<EditorError>();List<EditorError>datePeremptionFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("districtSante"))districtSanteFieldErrors.add(error);
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("numero"))numeroFieldErrors.add(error);
if (field.equals("type"))typeFieldErrors.add(error);
if (field.equals("quantiteInitiale"))quantiteInitialeFieldErrors.add(error);
if (field.equals("quantite"))quantiteFieldErrors.add(error);
if (field.equals("datePeremption"))datePeremptionFieldErrors.add(error);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (districtSanteFieldErrors.size()>0)districtSante.showErrors(districtSanteFieldErrors);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (numeroFieldErrors.size()>0)numero.showErrors(numeroFieldErrors);
if (typeFieldErrors.size()>0)type.showErrors(typeFieldErrors);
if (quantiteInitialeFieldErrors.size()>0)quantiteInitiale.showErrors(quantiteInitialeFieldErrors);
if (quantiteFieldErrors.size()>0)quantite.showErrors(quantiteFieldErrors);
if (datePeremptionFieldErrors.size()>0)datePeremption.showErrors(datePeremptionFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicInventaireDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedInventaire(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedInventaireReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listInventaire(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedInventaire(start,numRows,"date",false,filterCriteria,property);
else result=request.listNonAffectedInventaireReverse(start,numRows,"date",false,filterCriteria,property);
else result=request.listInventaire(start,numRows,"date",false,filterCriteria);
else result=request.getInventaireEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedInventaire(start,numRows,"date",false,searchCriterions,property);
else result=request.listNonAffectedInventaireReverse(start,numRows,"date",false,searchCriterions,property);
else result=request.listInventaire(start,numRows,"date",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedInventaire(start,numRows,"date",false,property);
else result=request.listNonAffectedInventaireReverse(start,numRows,"date",false,property);
else result=request.listInventaire(start,numRows,"date",false);
if (isFiltered){result.with("CDT");
else {result.with("CDT");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listInventaire(start,numRows,property,asc,searchCriterions);
else result=request.listInventaire(start,numRows,property,asc,filterCriteria);
else result=request.getInventaireEmptyList();
else {
if (searchCriterions!=null)result=request.listInventaire(start,numRows,property,asc,searchCriterions);
else result=request.listInventaire(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedInventaire(property,searchCriterions);
else returnrequest.countNonAffectedInventaireReverse(property,searchCriterions);
else returnrequest.countInventaire(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedInventaire(property,filterCriteria);
else returnrequest.countNonAffectedInventaireReverse(property,filterCriteria);
else returnrequest.countInventaire(filterCriteria);
else returnrequest.countNonAffectedInventaire("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedInventaire(property,searchCriterions);
else returnrequest.countNonAffectedInventaireReverse(property,searchCriterions);
else returnrequest.countInventaire(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedInventaire(property);
else returnrequest.countNonAffectedInventaireReverse(property);
else returnrequest.countInventaire();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();InventaireRequestrequest=(InventaireRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxydateCrit=request.create(BasicCriteriaProxy.class);dateCrit.setField("date");dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateCrit.setValue(text);buffer.append("("+NLS.constants().inventaire_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if anentityisbeingcreated*@paramparentparentcomposite
if thepaneliscontainedinaRelationPopupPanel*@paraminitFieldthefieldthatinitiatedthedisplayinaRelationPopupPanel*@paramreturnToListtrue
if afterclosingthewokflow,theapplicationshalldisplaythelistofentities,falseotherwisepublicExamenBiologiqueFormPanel(EpicamRequestFactoryrequestFactory,StringentityId,RelationPopupPanelparent,StringinitField){wrapperPanel=newWrapperPanel();wrapperPanel.setWidth("90%");LabeltitleContainer=wrapperPanel.getTitleLabel();
if (entityId!=null){
if (parent==null)editorWorkflow=newExamenBiologiqueEditorWorkflow(requestFactory,entityId,titleContainer);
else {editorWorkflow=newExamenBiologiqueEditorWorkflow(requestFactory,entityId,titleContainer,parent,initField);
else {
if (parent==null){editorWorkflow=newExamenBiologiqueEditorWorkflow(requestFactory,titleContainer);
else {editorWorkflow=newExamenBiologiqueEditorWorkflow(requestFactory,titleContainer,parent,initField);
if (EpicamIconConstants.EXAMENBIOLOGIQUE_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.EXAMENBIOLOGIQUE_ICON);
if (editorWorkflow.getEditButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getEditButton());
if (editorWorkflow.getCloseButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCloseButton());
if (editorWorkflow.getSaveButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getSaveButton());
if (editorWorkflow.getCancelButton()!=null)wrapperPanel.addHeaderWidget(editorWorkflow.getCancelButton());initWidget(uiBinder.createAndBindUi(this));
if anentityisbeingcreatedpublicExamenBiologiqueFormPanel(EpicamRequestFactoryrequestFactory,StringentityId){this(requestFactory,entityId,null,null);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editorWorkflow.setPatient(value,isLocked);
switch(columnMonth){case0:month="01_Jan";break;case1:month="02_Feb";break;case2:month="03_Mar";break;case3:month="04_Apr";break;case4:month="05_May";break;case5:month="06_Jun";break;case6:month="07_Jul";break;case7:month="08_Aug";break;case8:month="09_Sep";break;case9:month="10_Oct";break;case10:month="11_Nov";break;case11:month="12_Dec";break;
if (beaninstanceofPatient){patientHandler.delete((Patient)bean);
else 
if (beaninstanceofCasIndex){casIndexHandler.delete((CasIndex)bean);
else 
if (beaninstanceofCasTuberculose){casTuberculoseHandler.delete((CasTuberculose)bean);
else 
if (beaninstanceofExamenSerologie){examenSerologieHandler.delete((ExamenSerologie)bean);
else 
if (beaninstanceofExamenBiologique){examenBiologiqueHandler.delete((ExamenBiologique)bean);
else 
if (beaninstanceofExamenMicroscopie){examenMicroscopieHandler.delete((ExamenMicroscopie)bean);
else 
if (beaninstanceofExamenATB){examenATBHandler.delete((ExamenATB)bean);
else 
if (beaninstanceofPriseMedicamenteuse){priseMedicamenteuseHandler.delete((PriseMedicamenteuse)bean);
else 
if (beaninstanceofRendezVous){rendezVousHandler.delete((RendezVous)bean);
else 
if (beaninstanceofTransfertReference){transfertReferenceHandler.delete((TransfertReference)bean);
else 
if (beaninstanceofLot){lotHandler.delete((Lot)bean);
else 
if (beaninstanceofHorsUsage){horsUsageHandler.delete((HorsUsage)bean);
else 
if (beaninstanceofEntreeLot){entreeLotHandler.delete((EntreeLot)bean);
else 
if (beaninstanceofSortieLot){sortieLotHandler.delete((SortieLot)bean);
else 
if (beaninstanceofCommande){commandeHandler.delete((Commande)bean);
else 
if (beaninstanceofDetailCommandeMedicament){detailCommandeMedicamentHandler.delete((DetailCommandeMedicament)bean);
else 
if (beaninstanceofDetailCommandeIntrant){detailCommandeIntrantHandler.delete((DetailCommandeIntrant)bean);
else 
if (beaninstanceofReception){receptionHandler.delete((Reception)bean);
else 
if (beaninstanceofDetailReceptionMedicament){detailReceptionMedicamentHandler.delete((DetailReceptionMedicament)bean);
else 
if (beaninstanceofDetailReceptionIntrant){detailReceptionIntrantHandler.delete((DetailReceptionIntrant)bean);
else 
if (beaninstanceofRavitaillement){ravitaillementHandler.delete((Ravitaillement)bean);
else 
if (beaninstanceofDetailRavitaillement){detailRavitaillementHandler.delete((DetailRavitaillement)bean);
else 
if (beaninstanceofInventaire){inventaireHandler.delete((Inventaire)bean);
else 
if (beaninstanceofDetailInventaire){detailInventaireHandler.delete((DetailInventaire)bean);
else 
if (beaninstanceofPersonnel){personnelHandler.delete((Personnel)bean);
else 
if (beaninstanceofDepartPersonnel){departPersonnelHandler.delete((DepartPersonnel)bean);
else 
if (beaninstanceofArriveePersonnel){arriveePersonnelHandler.delete((ArriveePersonnel)bean);
else 
if (beaninstanceofRegion){regionHandler.delete((Region)bean);
else 
if (beaninstanceofDistrictSante){districtSanteHandler.delete((DistrictSante)bean);
else 
if (beaninstanceofCentreDiagTrait){centreDiagTraitHandler.delete((CentreDiagTrait)bean);
else 
if (beaninstanceofLaboratoireReference){laboratoireReferenceHandler.delete((LaboratoireReference)bean);
else 
if (beaninstanceofLieuDit){lieuDitHandler.delete((LieuDit)bean);
else 
if (beaninstanceofRegime){regimeHandler.delete((Regime)bean);
else 
if (beaninstanceofPriseMedicamentRegime){priseMedicamentRegimeHandler.delete((PriseMedicamentRegime)bean);
else 
if (beaninstanceofMedicament){medicamentHandler.delete((Medicament)bean);
else 
if (beaninstanceofIntrant){intrantHandler.delete((Intrant)bean);
else 
if (beaninstanceofFormation){formationHandler.delete((Formation)bean);
else 
if (beaninstanceofCandidatureFormation){candidatureFormationHandler.delete((CandidatureFormation)bean);
else 
if (beaninstanceofQualif ication){qualif icationHandler.delete((Qualif ication)bean);
else 
if (beaninstanceofTutoriel){tutorielHandler.delete((Tutoriel)bean);
else 
if (beaninstanceofSmsPredefini){smsPredefiniHandler.delete((SmsPredefini)bean);
else 
if (beaninstanceofOutBox){outBoxHandler.delete((OutBox)bean);
else 
if (beaninstanceofUtilisateur){utilisateurHandler.delete((Utilisateur)bean);
if (beaninstanceofPatient){patientHandler.save((Patient)bean,isNew);
else 
if (beaninstanceofCasIndex){casIndexHandler.save((CasIndex)bean,isNew);
else 
if (beaninstanceofCasTuberculose){casTuberculoseHandler.save((CasTuberculose)bean,isNew);
else 
if (beaninstanceofExamenSerologie){examenSerologieHandler.save((ExamenSerologie)bean,isNew);
else 
if (beaninstanceofExamenBiologique){examenBiologiqueHandler.save((ExamenBiologique)bean,isNew);
else 
if (beaninstanceofExamenMicroscopie){examenMicroscopieHandler.save((ExamenMicroscopie)bean,isNew);
else 
if (beaninstanceofExamenATB){examenATBHandler.save((ExamenATB)bean,isNew);
else 
if (beaninstanceofPriseMedicamenteuse){priseMedicamenteuseHandler.save((PriseMedicamenteuse)bean,isNew);
else 
if (beaninstanceofRendezVous){rendezVousHandler.save((RendezVous)bean,isNew);
else 
if (beaninstanceofTransfertReference){transfertReferenceHandler.save((TransfertReference)bean,isNew);
else 
if (beaninstanceofLot){lotHandler.save((Lot)bean,isNew);
else 
if (beaninstanceofHorsUsage){horsUsageHandler.save((HorsUsage)bean,isNew);
else 
if (beaninstanceofEntreeLot){entreeLotHandler.save((EntreeLot)bean,isNew);
else 
if (beaninstanceofSortieLot){sortieLotHandler.save((SortieLot)bean,isNew);
else 
if (beaninstanceofCommande){commandeHandler.save((Commande)bean,isNew);
else 
if (beaninstanceofDetailCommandeMedicament){detailCommandeMedicamentHandler.save((DetailCommandeMedicament)bean,isNew);
else 
if (beaninstanceofDetailCommandeIntrant){detailCommandeIntrantHandler.save((DetailCommandeIntrant)bean,isNew);
else 
if (beaninstanceofReception){receptionHandler.save((Reception)bean,isNew);
else 
if (beaninstanceofDetailReceptionMedicament){detailReceptionMedicamentHandler.save((DetailReceptionMedicament)bean,isNew);
else 
if (beaninstanceofDetailReceptionIntrant){detailReceptionIntrantHandler.save((DetailReceptionIntrant)bean,isNew);
else 
if (beaninstanceofRavitaillement){ravitaillementHandler.save((Ravitaillement)bean,isNew);
else 
if (beaninstanceofDetailRavitaillement){detailRavitaillementHandler.save((DetailRavitaillement)bean,isNew);
else 
if (beaninstanceofInventaire){inventaireHandler.save((Inventaire)bean,isNew);
else 
if (beaninstanceofDetailInventaire){detailInventaireHandler.save((DetailInventaire)bean,isNew);
else 
if (beaninstanceofPersonnel){personnelHandler.save((Personnel)bean,isNew);
else 
if (beaninstanceofDepartPersonnel){departPersonnelHandler.save((DepartPersonnel)bean,isNew);
else 
if (beaninstanceofArriveePersonnel){arriveePersonnelHandler.save((ArriveePersonnel)bean,isNew);
else 
if (beaninstanceofRegion){regionHandler.save((Region)bean,isNew);
else 
if (beaninstanceofDistrictSante){districtSanteHandler.save((DistrictSante)bean,isNew);
else 
if (beaninstanceofCentreDiagTrait){centreDiagTraitHandler.save((CentreDiagTrait)bean,isNew);
else 
if (beaninstanceofLaboratoireReference){laboratoireReferenceHandler.save((LaboratoireReference)bean,isNew);
else 
if (beaninstanceofLieuDit){lieuDitHandler.save((LieuDit)bean,isNew);
else 
if (beaninstanceofRegime){regimeHandler.save((Regime)bean,isNew);
else 
if (beaninstanceofPriseMedicamentRegime){priseMedicamentRegimeHandler.save((PriseMedicamentRegime)bean,isNew);
else 
if (beaninstanceofMedicament){medicamentHandler.save((Medicament)bean,isNew);
else 
if (beaninstanceofIntrant){intrantHandler.save((Intrant)bean,isNew);
else 
if (beaninstanceofFormation){formationHandler.save((Formation)bean,isNew);
else 
if (beaninstanceofCandidatureFormation){candidatureFormationHandler.save((CandidatureFormation)bean,isNew);
else 
if (beaninstanceofQualif ication){qualif icationHandler.save((Qualif ication)bean,isNew);
else 
if (beaninstanceofTutoriel){tutorielHandler.save((Tutoriel)bean,isNew);
else 
if (beaninstanceofSmsPredefini){smsPredefiniHandler.save((SmsPredefini)bean,isNew);
else 
if (beaninstanceofOutBox){outBoxHandler.save((OutBox)bean,isNew);
else 
if (beaninstanceofUtilisateur){utilisateurHandler.save((Utilisateur)bean,isNew);
else returnnull;
if (value==null){for(CheckBoxchoice:choices)choice.setValue(false);
else {String[]values=value.split(";");for(StringformValue:values){for(CheckBoxchoice:choices){
if (formValue.equals(choice.getFormValue())){choice.setValue(true);choice.setVisible(true);
else {
if (!edited&&!choice.getValue())choice.setVisible(false);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicArriveePersonnelDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedArriveePersonnel(start,numRows,"dateArrivee",false,searchCriterions,property);
else result=request.listNonAffectedArriveePersonnelReverse(start,numRows,"dateArrivee",false,searchCriterions,property);
else result=request.listArriveePersonnel(start,numRows,"dateArrivee",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedArriveePersonnel(start,numRows,"dateArrivee",false,filterCriteria,property);
else result=request.listNonAffectedArriveePersonnelReverse(start,numRows,"dateArrivee",false,filterCriteria,property);
else result=request.listArriveePersonnel(start,numRows,"dateArrivee",false,filterCriteria);
else result=request.getArriveePersonnelEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedArriveePersonnel(start,numRows,"dateArrivee",false,searchCriterions,property);
else result=request.listNonAffectedArriveePersonnelReverse(start,numRows,"dateArrivee",false,searchCriterions,property);
else result=request.listArriveePersonnel(start,numRows,"dateArrivee",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedArriveePersonnel(start,numRows,"dateArrivee",false,property);
else result=request.listNonAffectedArriveePersonnelReverse(start,numRows,"dateArrivee",false,property);
else result=request.listArriveePersonnel(start,numRows,"dateArrivee",false);
if (isFiltered){result.with("region");result.with("region.nom");result.with("districtSante");result.with("districtSante.nom");result.with("CDT");result.with("personnel");
else {result.with("personnel");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listArriveePersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listArriveePersonnel(start,numRows,property,asc,filterCriteria);
else result=request.getArriveePersonnelEmptyList();
else {
if (searchCriterions!=null)result=request.listArriveePersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listArriveePersonnel(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedArriveePersonnel(property,searchCriterions);
else returnrequest.countNonAffectedArriveePersonnelReverse(property,searchCriterions);
else returnrequest.countArriveePersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedArriveePersonnel(property,filterCriteria);
else returnrequest.countNonAffectedArriveePersonnelReverse(property,filterCriteria);
else returnrequest.countArriveePersonnel(filterCriteria);
else returnrequest.countNonAffectedArriveePersonnel("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedArriveePersonnel(property,searchCriterions);
else returnrequest.countNonAffectedArriveePersonnelReverse(property,searchCriterions);
else returnrequest.countArriveePersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedArriveePersonnel(property);
else returnrequest.countNonAffectedArriveePersonnelReverse(property);
else returnrequest.countArriveePersonnel();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();ArriveePersonnelRequestrequest=(ArriveePersonnelRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldDateArriveetry{DateUtil.parseDate(text);BasicCriteriaProxydateArriveeCrit=request.create(BasicCriteriaProxy.class);dateArriveeCrit.setField("dateArrivee");dateArriveeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateArriveeCrit.setValue(text);buffer.append("("+NLS.constants().arriveePersonnel_field_dateArrivee()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateArriveeCrit);
if (locale.equals("fr"))region_nomCrit.setField("region.nom.francais");
if (locale.equals("en"))region_nomCrit.setField("region.nom.english");region_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);region_nomCrit.setValue(text);buffer.append("("+NLS.constants().region_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(region_nomCrit);//SearchfieldNomBasicCriteriaProxydistrictSante_nomCrit=request.create(BasicCriteriaProxy.class);
if (locale.equals("fr"))districtSante_nomCrit.setField("districtSante.nom.francais");
if (locale.equals("en"))districtSante_nomCrit.setField("districtSante.nom.english");districtSante_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);districtSante_nomCrit.setValue(text);buffer.append("("+NLS.constants().districtSante_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(districtSante_nomCrit);//SearchfieldNomBasicCriteriaProxycDT_nomCrit=request.create(BasicCriteriaProxy.class);cDT_nomCrit.setField("cDT.nom");cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(cDT_nomCrit);//SearchfieldNomBasicCriteriaProxypersonnel_nomCrit=request.create(BasicCriteriaProxy.class);personnel_nomCrit.setField("personnel.nom");personnel_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);personnel_nomCrit.setValue(text);buffer.append("("+NLS.constants().personnel_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(personnel_nomCrit);disJunction.setCriterions(criterionList);criterias.add(disJunction);fullTextSearch=true;
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listExamenBiologique();
else handler.listExamenBiologique(searchText);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicNotif icationDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse,FormTypeUtilformTypeUtil){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;this.formTypeUtil=formTypeUtil;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedNotif ication(start,numRows,"name",true,searchCriterions,property);
else result=request.listNonAffectedNotif icationReverse(start,numRows,"name",true,searchCriterions,property);
else result=request.listNotif ication(start,numRows,"name",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedNotif ication(start,numRows,"name",true,filterCriteria,property);
else result=request.listNonAffectedNotif icationReverse(start,numRows,"name",true,filterCriteria,property);
else result=request.listNotif ication(start,numRows,"name",true,filterCriteria);
else result=request.getNotif icationEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedNotif ication(start,numRows,"name",true,searchCriterions,property);
else result=request.listNonAffectedNotif icationReverse(start,numRows,"name",true,searchCriterions,property);
else result=request.listNotif ication(start,numRows,"name",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedNotif ication(start,numRows,"name",true,property);
else result=request.listNonAffectedNotif icationReverse(start,numRows,"name",true,property);
else result=request.listNotif ication(start,numRows,"name",true);
if (isFiltered){
else {
if (getSearchCriterions()==null)result=request.listNotif ication(start,numRows,property,asc);
else result=request.listNotif ication(start,numRows,property,asc,getSearchCriterions());returnresult;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedNotif ication(property,searchCriterions);
else returnrequest.countNonAffectedNotif icationReverse(property,searchCriterions);
else returnrequest.countNotif ication(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedNotif ication(property,filterCriteria);
else returnrequest.countNonAffectedNotif icationReverse(property,filterCriteria);
else returnrequest.countNotif ication(filterCriteria);
else returnrequest.countNonAffectedNotif ication("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedNotif ication(property,searchCriterions);
else returnrequest.countNonAffectedNotif icationReverse(property,searchCriterions);
else returnrequest.countNotif ication(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedNotif ication(property);
else returnrequest.countNonAffectedNotif icationReverse(property);
else returnrequest.countNotif ication();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Notif icationRequestrequest=(Notif icationRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNameBasicCriteriaProxynameCrit=request.create(BasicCriteriaProxy.class);nameCrit.setField("name");nameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nameCrit.setValue(text);buffer.append("("+AdminNLS.constants().notif ication_field_name()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nameCrit);//SearchfieldFormTypeList<FormType>formTypes=formTypeUtil.getFormTypes();for(FormTypetype:formTypes){
if (text.toLowerCase().equals(type.getDisplayValue().toLowerCase())){BasicCriteriaProxyformTypeCrit=request.create(BasicCriteriaProxy.class);formTypeCrit.setField("formType");formTypeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);formTypeCrit.setValue(type.getValue());buffer.append("("+DynFieldsNLS.constants().dynamicField_Template_field_formType()+":"+text+")"+SYMBOL_OR+"");criterionList.add(formTypeCrit);
if (text.toLowerCase().equals(AdminNLS.constants().notif ication_method_mail_option().toLowerCase())){BasicCriteriaProxymethodCrit=request.create(BasicCriteriaProxy.class);methodCrit.setField("method");methodCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);methodCrit.setValue(Notif icationConstants.EMAIL_NOTif );buffer.append("("+AdminNLS.constants().notif ication_field_method()+":"+text+")"+SYMBOL_OR+"");criterionList.add(methodCrit);
if (text.toLowerCase().equals(AdminNLS.constants().notif ication_method_sMS_option().toLowerCase())){BasicCriteriaProxymethodCrit=request.create(BasicCriteriaProxy.class);methodCrit.setField("method");methodCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);methodCrit.setValue(Notif icationConstants.SMS_NOTif );buffer.append("("+AdminNLS.constants().notif ication_field_method()+":"+text+")"+SYMBOL_OR+"");criterionList.add(methodCrit);
if (text.toLowerCase().equals(AdminNLS.constants().notif ication_operation_create_option().toLowerCase())){BasicCriteriaProxyoperationCrit=request.create(BasicCriteriaProxy.class);operationCrit.setField("operation");operationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);operationCrit.setValue(Notif icationConstants.CREATE_OP);buffer.append("("+AdminNLS.constants().notif ication_field_operation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(operationCrit);
if (text.toLowerCase().equals(AdminNLS.constants().notif ication_operation_update_option().toLowerCase())){BasicCriteriaProxyoperationCrit=request.create(BasicCriteriaProxy.class);operationCrit.setField("operation");operationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);operationCrit.setValue(Notif icationConstants.UPDATE_OP);buffer.append("("+AdminNLS.constants().notif ication_field_operation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(operationCrit);
if (text.toLowerCase().equals(AdminNLS.constants().notif ication_operation_delete_option().toLowerCase())){BasicCriteriaProxyoperationCrit=request.create(BasicCriteriaProxy.class);operationCrit.setField("operation");operationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);operationCrit.setValue(Notif icationConstants.DELETE_OP);buffer.append("("+AdminNLS.constants().notif ication_field_operation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(operationCrit);
if exists
if (isFiltered&&filterCriteria!=null){ImogJunctionProxyconJunctionFilt=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterionListFilt=newArrayList<ImogCriterionProxy>();criterionListFilt.add(filterCriteria);criterionListFilt.add(disJunction);conJunctionFilt.setCriterions(criterionListFilt);setSearchCriterions(conJunctionFilt);
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (parent!=null){editor=newCentreDiagTraitEditor(factory,true);this.initField=initField;
else editor=newCentreDiagTraitEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().centreDiagTrait_create_title());createDriver();createNewCentreDiagTrait();this.setContent(editor);
if (parent!=null){editor=newCentreDiagTraitEditor(factory,true);this.initField=initField;
else editor=newCentreDiagTraitEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCentreDiagTrait(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (current.getDescription()==null){LocalizedTextProxynewDescription=request.create(LocalizedTextProxy.class);current.setDescription(newDescription);
if (current.getCoordonnees()==null){GeoFieldProxynewCoordonnees=request.create(GeoFieldProxy.class);current.setCoordonnees(newCoordonnees);
if (AccessManager.canEditCentreDiagTrait())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("CentreDiagTraitformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCentreDiagTraitEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){editor.setRegion(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){editor.setDistrictSante(value,isLocked);
if (AccessManager.canReadArriveePersonnelDescription()){Column<ArriveePersonnelProxy,String>dateArriveeColumn=newDateArriveeColumn();dateArriveeColumn.setSortable(true);table.addColumn(dateArriveeColumn,NLS.constants().arriveePersonnel_field_s_dateArrivee());
if (AccessManager.canReadArriveePersonnelDescription()){Column<ArriveePersonnelProxy,String>regionColumn=newRegionColumn();regionColumn.setSortable(true);table.addColumn(regionColumn,NLS.constants().arriveePersonnel_field_s_region());
if (AccessManager.canReadArriveePersonnelDescription()){Column<ArriveePersonnelProxy,String>districtSanteColumn=newDistrictSanteColumn();districtSanteColumn.setSortable(true);table.addColumn(districtSanteColumn,NLS.constants().arriveePersonnel_field_s_districtSante());
if (AccessManager.canReadArriveePersonnelDescription()){Column<ArriveePersonnelProxy,String>cDTColumn=newCDTColumn();cDTColumn.setSortable(true);table.addColumn(cDTColumn,NLS.constants().arriveePersonnel_field_s_cDT());
if (AccessManager.canReadArriveePersonnelDescription()){Column<ArriveePersonnelProxy,String>personnelColumn=newPersonnelColumn();personnelColumn.setSortable(true);table.addColumn(personnelColumn,NLS.constants().arriveePersonnel_field_s_personnel());
if (AccessManager.canCreateArriveePersonnel()&&AccessManager.canEditArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/arriveepersonnel/",true);
else returnnull;
if (AccessManager.canDeleteArriveePersonnel()&&AccessManager.canEditArriveePersonnel()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (AccessManager.canDeleteArriveePersonnel()&&AccessManager.canEditArriveePersonnel()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ArriveePersonnelProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){EpicamRendererrenderer=EpicamRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+NLS.constants().arriveePersonnel_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ArriveePersonnelProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getArriveePersonnelRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedArriveePersonnelentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListArriveePersonnelEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (AccessManager.canExportArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){Stringurl=GWT.getHostPageBaseURL()+EpicamBirtConstants.ARR_PERS_CSV_KEY+"?"+EpicamBirtConstants.REPORT_NAME+"=arriveePersonnel_csv"+"&"+EpicamBirtConstants.REPORT_LOCALE+"="+NLS.constants().locale()+"&"+EpicamBirtConstants.REPORT_FORMAT+"="+EpicamBirtConstants.CSV;
if (beanDataProvider.getSearchCriterions()!=null)url=url+getDataProviderCriteria();Window.open(url,"_blank","");
else returnnull;
if (object!=null){
if (object.getDateArrivee()==null)value="";
else value=DateUtil.getFormatedDate(object.getDateArrivee());
if (object!=null){
if (object.getRegion()==null)value="";
else value=renderer.getDisplayValue(object.getRegion());
if (object!=null){
if (object.getDistrictSante()==null)value="";
else value=renderer.getDisplayValue(object.getDistrictSante());
if (object!=null){
if (object.getCDT()==null)value="";
else value=renderer.getDisplayValue(object.getCDT());
if (object!=null){
if (object.getPersonnel()==null)value="";
else value=renderer.getDisplayValue(object.getPersonnel());
if (initField==null)handler.saveCommande(value);
else handler.saveCommande(value,initField);
if thepropertyforwhichnonaffectedvaluesaresearchedshall*belookedinreverserelationpublicFieldGroupDataProvider(AdminRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFieldGroup(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedFieldGroupReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listFieldGroup(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFieldGroup(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedFieldGroupReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listFieldGroup(start,numRows,"modif ied",false,filterCriteria);
else result=request.getFieldGroupEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFieldGroup(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedFieldGroupReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listFieldGroup(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedFieldGroup(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedFieldGroupReverse(start,numRows,"modif ied",false,property);
else result=request.listFieldGroup(start,numRows,"modif ied",false);
if (isFiltered){result.with("entity");
else {result.with("entity");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listFieldGroup(start,numRows,property,asc,searchCriterions);
else result=request.listFieldGroup(start,numRows,property,asc,filterCriteria);
else result=request.getFieldGroupEmptyList();
else {
if (searchCriterions!=null)result=request.listFieldGroup(start,numRows,property,asc,searchCriterions);
else result=request.listFieldGroup(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFieldGroup(property,searchCriterions);
else returnrequest.countNonAffectedFieldGroupReverse(property,searchCriterions);
else returnrequest.countFieldGroup(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFieldGroup(property,filterCriteria);
else returnrequest.countNonAffectedFieldGroupReverse(property,filterCriteria);
else returnrequest.countFieldGroup(filterCriteria);
else returnrequest.countNonAffectedFieldGroup("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFieldGroup(property,searchCriterions);
else returnrequest.countNonAffectedFieldGroupReverse(property,searchCriterions);
else returnrequest.countFieldGroup(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedFieldGroup(property);
else returnrequest.countNonAffectedFieldGroupReverse(property);
else returnrequest.countFieldGroup();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {FieldGroupRequestrequest=(FieldGroupRequest)getContext();newRequest=false;ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNameBasicCriteriaProxyentity_nameCrit=request.create(BasicCriteriaProxy.class);entity_nameCrit.setField("entity.name");entity_nameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);entity_nameCrit.setValue(text);buffer.append("("+AdminNLS.constants().cardEntity_field_name()+":"+text+")"+SYMBOL_OR+"");criterionList.add(entity_nameCrit);//SearchfieldNameBasicCriteriaProxynameCrit=request.create(BasicCriteriaProxy.class);nameCrit.setField("name");nameCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nameCrit.setValue(text);buffer.append("("+AdminNLS.constants().fieldGroup_field_name()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nameCrit);disJunction.setCriterions(criterionList);fullTextSearch=true;//addFilterCriteria
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,disJunction));
else setSearchCriterions(disJunction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if therelationfieldbuttonsshallbehiddenpublicExamenBiologiqueEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();date.setEdited(isEdited);poids.setEdited(isEdited);observations.setEdited(isEdited);
if (!AccessManager.canReadExamenBiologiqueDescription())date.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription())poids.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription())observations.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())date.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())poids.setVisible(false);
if (!AccessManager.canEditExamenBiologiqueDescription())observations.setVisible(false);
if (date.getValueWithoutParseException()==null&&date.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"date");//poidsisarequiredfield
if (poids.getValueWithoutParseException()==null&&poids.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"poids");
if (errors!=null&&errors.size()>0){List<EditorError>dateFieldErrors=newArrayList<EditorError>();List<EditorError>poidsFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("date"))dateFieldErrors.add(error);
if (field.equals("poids"))poidsFieldErrors.add(error);
if (dateFieldErrors.size()>0)date.showErrors(dateFieldErrors);
if (poidsFieldErrors.size()>0)poids.showErrors(poidsFieldErrors);
if theboxshallthrowexceptionswhenanunvaliddateisenteredpublicImogDateBox(booleanwithExceptions){initWidget(uiBinder.createAndBindUi(this));if (withExceptions)dateBox.setFormat(newImogDateFormatWithExceptions(DateUtil.getDateFormater()));
else dateBox.setFormat(newImogDateFormat(DateUtil.getDateFormater()));
if (!enabled){dateBox.addStyleDependentName("disabled");
else {dateBox.removeStyleDependentName("disabled");
if theenteredvalueisavalidInteger*@returnpublicbooleanisValid(){returnisValid;
if (date==null)return"";
else returndateTimeFormat.format(date);
if (text.length()>0){date=dateTimeFormat.parse(text);
if (reportError){
if (!formatErrorIdentif ied){delegate.recordError(BaseNLS.messages().error_format_date(BaseNLS.constants().format_date()),text,e);formatErrorIdentif ied=true;
if (date==null)return"";
else returndateTimeFormat.format(date);
if (text!=null&&text.length()>0){try{date=dateTimeFormat.parse(text);
if (formatErrorIdentif ied){formatErrorIdentif ied=false;thrownewIllegalArgumentException(e);
if therelationfieldbuttonsshallbehiddenpublicRendezVousEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();dateRendezVous.setEdited(isEdited);commentaire.setEdited(isEdited);honore.setEdited(isEdited);
if (!AccessManager.canReadRendezVousDescription())dateRendezVous.setVisible(false);
if (!AccessManager.canReadRendezVousDescription())commentaire.setVisible(false);
if (!AccessManager.canReadRendezVousDescription())honore.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())dateRendezVous.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())commentaire.setVisible(false);
if (!AccessManager.canEditRendezVousDescription())honore.setVisible(false);
if (errors!=null&&errors.size()>0){for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (sessionInfo!=null&&sessionInfo.getActor()!=null){ImogActorProxyactor=sessionInfo.getActor();LocalSession.get().setCurrentUser(actor);LocalSession.get().setVersionNumber(APPLICATION_VERSION);displayApplication(actor);initializeCookie(sessionInfo.getSessionId());
else logout();
if (cookieValue==null||!sessionId.equals(cookieValue)){Cookies.setCookie(COOKIE_NAME,sessionId,newDate(System.currentTimeMillis()+COOKIE_DURATION));
if (sessionTimer!=null){sessionTimer.cancel();sessionTimer=null;
if (sessionTimer!=null){//Window.alert("Sessiontimerisnotnull");
else {sessionTimer=newTimer(){publicvoidrun(){SessionRequestrequest=requestFactory.sessionInfoRequest();Request<Boolean>validateSessionRequest=request.validateSession(Cookies.getCookie(COOKIE_NAME));validateSessionRequest.to(newReceiver<Boolean>(){@OverridepublicvoidonFailure(ServerFailureerror){//logout();
if (result==null||!result){logout();
if (historyCount>1){History.back();historyCount--;
else {History.newItem("");
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel()){PersonnelFormPanelpersonnelForm=newPersonnelFormPanel(requestFactory,null);personnelForm.setCloseEvent(closeEvent);displayWrapperPanel(personnelForm);
if (AccessManager.canReadPersonnel()){PersonnelFormPanelpersonnelForm=newPersonnelFormPanel(requestFactory,entityId);personnelForm.setCloseEvent(closeEvent);displayWrapperPanel(personnelForm);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel())displayWrapperPanel(newPersonnelListPanel(requestFactory));
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel())displayWrapperPanel(newPersonnelListPanel(requestFactory,searchText));
if (AccessManager.canCreateUtilisateur()&&AccessManager.canEditUtilisateur()){UtilisateurFormPanelutilisateurForm=newUtilisateurFormPanel(requestFactory,null);utilisateurForm.setCloseEvent(closeEvent);displayWrapperPanel(utilisateurForm);
if (AccessManager.canReadUtilisateur()){UtilisateurFormPanelutilisateurForm=newUtilisateurFormPanel(requestFactory,entityId);utilisateurForm.setCloseEvent(closeEvent);displayWrapperPanel(utilisateurForm);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur())displayWrapperPanel(newUtilisateurListPanel(requestFactory));
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur())displayWrapperPanel(newUtilisateurListPanel(requestFactory,searchText));
if (ProfileUtil.isAdmin()){Notif icationFormPanelnotif icationFormPanel=newNotif icationFormPanel(requestFactory,null,EpicamFormTypes.get(),EpicamRenderer.get());notif icationFormPanel.setCloseEvent(closeEvent);displayWrapperPanel(notif icationFormPanel);
if (ProfileUtil.isAdmin()){Notif icationFormPanelnotif icationFormPanel=newNotif icationFormPanel(requestFactory,entityId,EpicamFormTypes.get(),EpicamRenderer.get());notif icationFormPanel.setCloseEvent(closeEvent);displayWrapperPanel(notif icationFormPanel);
if (ProfileUtil.isAdmin())displayWrapperPanel(newNotif icationListPanel(requestFactory,EpicamFormTypes.get()));
if (ProfileUtil.isAdmin())displayWrapperPanel(newNotif icationListPanel(requestFactory,searchText,EpicamFormTypes.get()));
if (ProfileUtil.isAdmin()){DynamicFieldTemplateFormPaneldynamicField_TemplateFormPanel=newDynamicFieldTemplateFormPanel(requestFactory,null,EpicamFormTypes.get());dynamicField_TemplateFormPanel.setCloseEvent(closeEvent);displayWrapperPanel(dynamicField_TemplateFormPanel);
if (ProfileUtil.isAdmin()){DynamicFieldTemplateFormPaneldynamicField_TemplateFormPanel=newDynamicFieldTemplateFormPanel(requestFactory,entityId,EpicamFormTypes.get());dynamicField_TemplateFormPanel.setCloseEvent(closeEvent);displayWrapperPanel(dynamicField_TemplateFormPanel);
if (ProfileUtil.isAdmin())displayWrapperPanel(newDynamicFieldTemplateListPanel(requestFactory,EpicamFormTypes.get()));
if (ProfileUtil.isAdmin())displayWrapperPanel(newDynamicFieldTemplateListPanel(requestFactory,searchText,EpicamFormTypes.get()));
if (ProfileUtil.isAdmin()){ProfileFormPanelprofileForm=newProfileFormPanel(requestFactory,null,EpicamAdminUtilRenderer.get());profileForm.setCloseEvent(closeEvent);displayWrapperPanel(profileForm);
if (ProfileUtil.isAdmin()){ProfileFormPanelprofileForm=newProfileFormPanel(requestFactory,entityId,EpicamAdminUtilRenderer.get());profileForm.setCloseEvent(closeEvent);displayWrapperPanel(profileForm);
if (ProfileUtil.isAdmin())displayWrapperPanel(newProfileListPanel(requestFactory));
if (ProfileUtil.isAdmin())displayWrapperPanel(newProfileListPanel(requestFactory,searchText));
if (ProfileUtil.isAdmin()){CardEntityFormPanelcardEntityForm=newCardEntityFormPanel(requestFactory,entityId,EpicamAdminUtilRenderer.get());cardEntityForm.setCloseEvent(closeEvent);displayWrapperPanel(cardEntityForm);
if (ProfileUtil.isAdmin())displayWrapperPanel(newCardEntityListPanel(requestFactory,EpicamAdminUtilRenderer.get()));
if (ProfileUtil.isAdmin())displayWrapperPanel(newCardEntityListPanel(requestFactory,searchText,EpicamAdminUtilRenderer.get()));
if (ProfileUtil.isAdmin()){FieldGroupFormPanelfieldgroupForm=newFieldGroupFormPanel(requestFactory,entityId,EpicamAdminUtilRenderer.get());fieldgroupForm.setCloseEvent(closeEvent);displayWrapperPanel(fieldgroupForm);
if (ProfileUtil.isAdmin())displayWrapperPanel(newFieldGroupListPanel(requestFactory,EpicamAdminUtilRenderer.get()));
if (ProfileUtil.isAdmin())displayWrapperPanel(newFieldGroupListPanel(requestFactory,searchText,EpicamAdminUtilRenderer.get()));
if (entityToken!=null){
if (entityToken.getType().equals(TokenHelper.TK_CLASSIC)){eventBus.fireEvent(newGoHomeEvent());
if (entityToken.getType().equals("rapport")){
if (AccessManager.canCreateRapport()){
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateRapportEvent());
if (entityToken.getType().equals("envoiSms")){
if (AccessManager.canCreateRapport()){
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateEnvoiSMSEvent());
if (entityToken.getType().equals("personnel")){
if (AccessManager.canReadPersonnel()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewPersonnelEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){
if (AccessManager.canDirectAccessPersonnel()){
if (entityToken.getId()==null&&!entityToken.getId().isEmpty())eventBus.fireEvent(newListPersonnelEvent());
else eventBus.fireEvent(newListPersonnelEvent(entityToken.getId()));
if (AccessManager.canEditPersonnel()){
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){
if (AccessManager.canCreatePersonnel())eventBus.fireEvent(newCreatePersonnelEvent());
if (entityToken.getType().equals("utilisateur")){
if (AccessManager.canReadUtilisateur()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewUtilisateurEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){
if (AccessManager.canDirectAccessUtilisateur()){
if (entityToken.getId()==null&&!entityToken.getId().isEmpty())eventBus.fireEvent(newListUtilisateurEvent());
else eventBus.fireEvent(newListUtilisateurEvent(entityToken.getId()));
if (AccessManager.canEditUtilisateur()){
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){
if (AccessManager.canCreateUtilisateur())eventBus.fireEvent(newCreateUtilisateurEvent());
if (entityToken.getType().equals("notif ication")){
if (ProfileUtil.isAdmin()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewNotif icationEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){eventBus.fireEvent(newListNotif icationEvent());
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateNotif icationEvent());
if (entityToken.getType().equals("dynamicfieldtemplate")){
if (ProfileUtil.isAdmin()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewDynamicFieldTemplateEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){eventBus.fireEvent(newListDynamicFieldTemplateEvent());
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateDynamicFieldTemplateEvent());
if (entityToken.getType().equals("fieldgroup")){
if (ProfileUtil.isAdmin()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewFieldGroupEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){eventBus.fireEvent(newListFieldGroupEvent());
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateFieldGroupEvent());
if (entityToken.getType().equals("profile")){
if (ProfileUtil.isAdmin()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewProfileEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){eventBus.fireEvent(newListProfileEvent());
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateProfileEvent());
if (entityToken.getType().equals("cardentity")){
if (ProfileUtil.isAdmin()){
if (entityToken.getAction().equals(TokenHelper.TK_VIEW))eventBus.fireEvent(newViewCardEntityEvent(entityToken.getId()));
if (entityToken.getAction().equals(TokenHelper.TK_LIST)){eventBus.fireEvent(newListCardEntityEvent());
if (entityToken.getAction().equals(TokenHelper.TK_NEW)){eventBus.fireEvent(newCreateCardEntityEvent());
else eventBus.fireEvent(newGoHomeEvent());
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailInventaireDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailInventaire(start,numRows,"lot",true,searchCriterions,property);
else result=request.listNonAffectedDetailInventaireReverse(start,numRows,"lot",true,searchCriterions,property);
else result=request.listDetailInventaire(start,numRows,"lot",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailInventaire(start,numRows,"lot",true,filterCriteria,property);
else result=request.listNonAffectedDetailInventaireReverse(start,numRows,"lot",true,filterCriteria,property);
else result=request.listDetailInventaire(start,numRows,"lot",true,filterCriteria);
else result=request.getDetailInventaireEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailInventaire(start,numRows,"lot",true,searchCriterions,property);
else result=request.listNonAffectedDetailInventaireReverse(start,numRows,"lot",true,searchCriterions,property);
else result=request.listDetailInventaire(start,numRows,"lot",true,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailInventaire(start,numRows,"lot",true,property);
else result=request.listNonAffectedDetailInventaireReverse(start,numRows,"lot",true,property);
else result=request.listDetailInventaire(start,numRows,"lot",true);
if (isFiltered){result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
else {result.with("lot");result.with("lot.intrant");result.with("lot.medicament");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailInventaire(start,numRows,property,asc,searchCriterions);
else result=request.listDetailInventaire(start,numRows,property,asc,filterCriteria);
else result=request.getDetailInventaireEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailInventaire(start,numRows,property,asc,searchCriterions);
else result=request.listDetailInventaire(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailInventaire(property,searchCriterions);
else returnrequest.countNonAffectedDetailInventaireReverse(property,searchCriterions);
else returnrequest.countDetailInventaire(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailInventaire(property,filterCriteria);
else returnrequest.countNonAffectedDetailInventaireReverse(property,filterCriteria);
else returnrequest.countDetailInventaire(filterCriteria);
else returnrequest.countNonAffectedDetailInventaire("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailInventaire(property,searchCriterions);
else returnrequest.countNonAffectedDetailInventaireReverse(property,searchCriterions);
else returnrequest.countDetailInventaire(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailInventaire(property);
else returnrequest.countNonAffectedDetailInventaireReverse(property);
else returnrequest.countDetailInventaire();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailInventaireRequestrequest=(DetailInventaireRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNumeroBasicCriteriaProxylot_numeroCrit=request.create(BasicCriteriaProxy.class);lot_numeroCrit.setField("lot.numero");lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_numeroCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_numero()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_numeroCrit);//SearchfieldIdentif iantBasicCriteriaProxylot_intrant_identif iantCrit=request.create(BasicCriteriaProxy.class);lot_intrant_identif iantCrit.setField("lot.intrant.identif iant");lot_intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_intrant_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_intrant_identif iantCrit);//SearchfieldDesignationBasicCriteriaProxylot_medicament_designationCrit=request.create(BasicCriteriaProxy.class);lot_medicament_designationCrit.setField("lot.medicament.designation");lot_medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_medicament_designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_medicament_designationCrit);//SearchfieldQuantitetry{Integer.valueOf(text);BasicCriteriaProxylot_quantiteCrit=request.create(BasicCriteriaProxy.class);lot_quantiteCrit.setField("lot.quantite");lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);lot_quantiteCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_quantite()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_quantiteCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (searchText==null)handler.listPriseMedicamenteuse();
else handler.listPriseMedicamenteuse(searchText);
if therelationfieldbuttonsshallbehiddenpublicArriveePersonnelEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenregion=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateRegion()&&AccessManager.canEditRegion())region=newImogSingleRelationBox<RegionProxy>(regionDataProvider,EpicamRenderer.get());
else region=newImogSingleRelationBox<RegionProxy>(false,regionDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddendistrictSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSante=newImogSingleRelationBox<DistrictSanteProxy>(districtSanteDataProvider,EpicamRenderer.get());
else districtSante=newImogSingleRelationBox<DistrictSanteProxy>(false,districtSanteDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenpersonnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePersonnel()&&AccessManager.canEditPersonnel())personnel=newImogSingleRelationBox<PersonnelProxy>(personnelDataProvider,EpicamRenderer.get());
else personnel=newImogSingleRelationBox<PersonnelProxy>(false,personnelDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();region.setEdited(isEdited);districtSante.setEdited(isEdited);CDT.setEdited(isEdited);personnel.setEdited(isEdited);dateArrivee.setEdited(isEdited);
if (!AccessManager.canReadArriveePersonnelDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditArriveePersonnelDescription())descriptionSection.setVisible(false);
if (field.equals(region)){clearDistrictSanteWidget();getDistrictSanteFilteredByRegion(region.getValue());
if (field.equals(districtSante)){clearCDTWidget();getCDTFilteredByDistrictSante(districtSante.getValue());
if (districtSante.getValue()!=null){RegionProxyproxy=districtSante.getValue().getRegion();region.setValue(proxy);
if (field.equals(CDT)){CentreDiagTraitProxycdtValue=CDT.getValue();
if (cdtValue!=null){RegionProxyregionValue=cdtValue.getRegion();region.setValue(regionValue);DistrictSanteProxydistrictValue=cdtValue.getDistrictSante();districtSante.setValue(districtValue);
if (pRegion!=null){
if (!hideButtons)districtSante.hideButtons(false);districtSanteDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {districtSanteDataProvider.setIsFiltered(false);
if (pDistrictSante!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pDistrictSante.getId(),"districtSante.id");
if (pRegion!=null){
if (!hideButtons)CDT.hideButtons(false);cDTDataProvider.setFilterCriteria(pRegion.getId(),"region.id");
else {cDTDataProvider.setIsFiltered(false);
if relationfieldshallbelocked(noneditable)publicvoidsetRegion(RegionProxyvalue,booleanisLocked){region.setLocked(isLocked);region.setValue(value);//FieldDistrictSantedependsonthevalueoffieldregionclearDistrictSanteWidget();getDistrictSanteFilteredByRegion(value);
if relationfieldshallbelocked(noneditable)publicvoidsetDistrictSante(DistrictSanteProxyvalue,booleanisLocked){districtSante.setLocked(isLocked);districtSante.setValue(value);//FieldCDTdependsonthevalueoffielddistrictSanteclearCDTWidget();getCDTFilteredByDistrictSante(value);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);
if relationfieldshallbelocked(noneditable)publicvoidsetPersonnel(PersonnelProxyvalue,booleanisLocked){personnel.setLocked(isLocked);personnel.setValue(value);
if (region.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();RegionFormPanelform=newRegionFormPanel(requestFactory,region.getValue().getId(),relationPopup,"region");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("region"))region.setValue(value,true);
if (districtSante.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,districtSante.getValue().getId(),relationPopup,"districtSante");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("districtSante"))districtSante.setValue(value,true);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (region.getValue()!=null)form.setRegion(region.getValue(),true);
if (districtSante.getValue()!=null)form.setDistrictSante(districtSante.getValue(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (personnel.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PersonnelFormPanelform=newPersonnelFormPanel(requestFactory,personnel.getValue().getId(),relationPopup,"personnel");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("personnel"))personnel.setValue(value,true);
if (region.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"region");//dateArriveeisarequiredfield
if (dateArrivee.getValueWithoutParseException()==null&&dateArrivee.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateArrivee");
if (errors!=null&&errors.size()>0){List<EditorError>regionFieldErrors=newArrayList<EditorError>();List<EditorError>dateArriveeFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("region"))regionFieldErrors.add(error);
if (field.equals("dateArrivee"))dateArriveeFieldErrors.add(error);
if (regionFieldErrors.size()>0)region.showErrors(regionFieldErrors);
if (dateArriveeFieldErrors.size()>0)dateArrivee.showErrors(dateArriveeFieldErrors);
if (searchText==null)handler.listRegime();
else handler.listRegime(searchText);
if (listSMSOutbox==null||listSMSOutbox.size()<1){return;
if (patient==null){continue;
if (Integer.valueOf(code)!=0){outBox.setStatut(String.valueOf(OutBox.Columns.STATUT_ERREUR));
else {outBox.setStatut(String.valueOf(OutBox.Columns.STATUT_SUCCES));
if (listPatients!=null&&listPatients.size()>0&&listSMS!=null&&listSMS.size()>0){for(SmsPredefinismsPredefini:listSMS){intsmsPeriod=(Integer.parseInt(smsPredefini.getPeriodicite()));DatemyDate=newDate();Calendarcalendar=Calendar.getInstance();calendar.setTime(myDate);intDAY_OF_MONTH=calendar.get(Calendar.DAY_OF_MONTH);intDAY_OF_WEEK=calendar.get(Calendar.DAY_OF_WEEK);intHOUR_OF_DAY=calendar.get(Calendar.HOUR_OF_DAY);intMONTH=calendar.get(Calendar.MONTH);//ApartirdequelledatecommenceràenvoyerlesSMS
switch(smsPeriod){//DailySMScase0:{
if (smsPredefini.getType().equals("0")&&HOUR_OF_DAY==10&&smsPredefini.getStatut().equals("0")){System.out.println("Daylysmsisrunning"+newDate());LOG.info("Daylysmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setPatient(patient);outBox.setStatut("1");
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (smsPredefini.getType().equals("0")&&DAY_OF_WEEK==3&&smsPredefini.getStatut().equals("0")&&HOUR_OF_DAY==15){System.out.println("Weeklysmsisrunning"+newDate());LOG.info("Weeklysmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setStatut("1");outBox.setPatient(patient);
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (smsPredefini.getType().equals("0")&&DAY_OF_MONTH==2&&smsPredefini.getStatut().equals("0")&&HOUR_OF_DAY==12){System.out.println("Monthlysmsisrunning"+newDate());LOG.info("Monthlysmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setStatut("1");outBox.setPatient(patient);
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (smsPredefini.getType().equals("0")&&(MONTH==0||MONTH==3||MONTH==6||MONTH==9)&&DAY_OF_MONTH==4&&smsPredefini.getStatut().equals("0")&&HOUR_OF_DAY==11){System.out.println("Trimestersmsisrunning"+newDate());LOG.info("Trimestersmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setStatut("1");outBox.setPatient(patient);
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (smsPredefini.getType().equals("0")&&(MONTH==0||MONTH==6)&&DAY_OF_MONTH==4&&smsPredefini.getStatut().equals("0")&&HOUR_OF_DAY==11){System.out.println("Semestersmsisrunning"+newDate());LOG.info("Semestersmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setStatut("1");outBox.setPatient(patient);
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (smsPredefini.getType().equals("0")&&smsPredefini.getDateEnvoyeSMSPonctuel()==myDate&&(smsPredefini.getStatut().equals("0")&&HOUR_OF_DAY==9)){System.out.println("Punctualsmsisrunning"+newDate());LOG.info("Punctualsmsisrunning"+newDate()+"SMS:"+smsPredefini.getMessage());for(Patientpatient:listPatients){OutBoxoutBox=newOutBox();outBox.setCreated(myDate);outBox.setStatut("1");outBox.setPatient(patient);
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (listCasTuberculoses!=null&&listCasTuberculoses.size()>0&&listSMS!=null&&listSMS.size()>0){for(SmsPredefinismsPredefini:listSMS){
if (smsPredefini.getType().equals("2")&&smsPredefini.getStatut().equals("0")){for(CasTuberculosecasTuberculose:listCasTuberculoses){List<RendezVous>listRendezvous=casTuberculose.getRendezVous();
if (listRendezvous!=null&&listRendezvous.size()>0){for(RendezVousrendezVous:listRendezvous){DatedateRDV=rendezVous.getDateRendezVous();DatemyDate=newDate();Calendarcalendar=Calendar.getInstance();calendar.setTime(dateRDV);intMONTH_RENDEZVOUS=calendar.get(Calendar.MONTH);
if (myDate.before(dateRDV)&&MONTH_RENDEZVOUS>myDate.getMonth()+3){OutBoxoutBox=newOutBox();outBox.setStatut("1");outBox.setCreated(myDate);outBox.setPatient(casTuberculose.getPatient());
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());outBoxHandler.save(outBox,true);
if (listCasTuberculoses!=null&&listCasTuberculoses.size()>0&&listSMS!=null&&listSMS.size()>0){for(SmsPredefinismsPredefini:listSMS){
if (smsPredefini.getType().equals("3")&&smsPredefini.getStatut().equals("0")){for(CasTuberculosecasTuberculose:listCasTuberculoses){List<RendezVous>listRendezvous=casTuberculose.getRendezVous();
if (casTuberculose.getPatient().getRecevoirCarnetTelPortable()&&listRendezvous!=null&&listRendezvous.size()>0){RendezVousdernierRendezVous=listRendezvous.get(listRendezvous.size()-1);Datetoday=newDate();//Sendmedicalrecordevery7daysafterunrendez-vousif (Math.abs(today.getDay()-dernierRendezVous.getDateRendezVous().getDay())==7){LOG.info("Sendingmedicalrecordstopatients:"+casTuberculose.getIdentif iant());OutBoxoutBox=newOutBox();outBox.setStatut("1");outBox.setCreated(today);outBox.setPatient(casTuberculose.getPatient());
if (smsPredefini.getMessage().getFrancais()!=null)outBox.setMessage(smsPredefini.getMessage().getFrancais());
else 
if (smsPredefini.getMessage().getEnglish()!=null)outBox.setMessage(smsPredefini.getMessage().getEnglish());outBoxHandler.save(outBox,true);
if (actor==null){actor=HttpSessionUtil.getCurrentUser();
if (actorinstanceofPersonnel){Personnelpersonnel=(Personnel)actor;Stringniveau=personnel.getNiveau();
if ("1".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"region.id");returnbuilder.equal(join,personnel.getRegion().getId());
else 
if ("2".equals(niveau)){Path<?>join=DaoUtil.getCascadeRoot(root.join("patient").join("centres",JoinType.LEFT),"districtSante.id");returnbuilder.equal(join,personnel.getDistrictSante().getId());
else 
if ("3".equals(niveau)){Path<?>join=root.join("patient").join("centres",JoinType.LEFT).get("id");returnbuilder.equal(join,personnel.getCDT().getId());
if (value!=null){intvalueHours=value.getHours();hours.setSelectedIndex(getIndexForValue(hours,String.valueOf(valueHours)));intvalueMinutes=value.getMinutes();minutes.setSelectedIndex(getIndexForValue(minutes,String.valueOf(valueMinutes)));
else {hours.setSelectedIndex(0);minutes.setSelectedIndex(0);
else result=newDate();result.setHours(Integer.parseInt(hours.getValue(hours.getSelectedIndex())));result.setMinutes(Integer.parseInt(minutes.getValue(minutes.getSelectedIndex())));returnresult;
else returnnull;
if (!enabled){hours.addStyleDependentName("disabled");minutes.addStyleDependentName("disabled");
else {hours.removeStyleDependentName("disabled");minutes.removeStyleDependentName("disabled");
if (value!=null){for(inti=0;i<box.getItemCount();i++){
if (value.equals(box.getValue(i)))returni;
if therelationfieldbuttonsshallbehiddenpublicMedicamentEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;initWidget(BINDER.createAndBindUi(this));properties();
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);designation.setEdited(isEdited);seuilPatient.setEdited(isEdited);estMedicamentAntituberculeux.setEdited(isEdited);
if (!AccessManager.canReadMedicamentDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditMedicamentDescription())descriptionSection.setVisible(false);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//designationisarequiredfield
if (designation.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"designation");//estMedicamentAntituberculeuxisarequiredfield
if (estMedicamentAntituberculeux.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"estMedicamentAntituberculeux");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>designationFieldErrors=newArrayList<EditorError>();List<EditorError>estMedicamentAntituberculeuxFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("designation"))designationFieldErrors.add(error);
if (field.equals("estMedicamentAntituberculeux"))estMedicamentAntituberculeuxFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (designationFieldErrors.size()>0)designation.showErrors(designationFieldErrors);
if (estMedicamentAntituberculeuxFieldErrors.size()>0)estMedicamentAntituberculeux.showErrors(estMedicamentAntituberculeuxFieldErrors);
if (ProfileUtil.isAdmin()){Column<ProfileProxy,String>nameColumn=newNameColumn();nameColumn.setSortable(true);table.addColumn(nameColumn,AdminNLS.constants().profile_field_s_name());
if (ProfileUtil.isAdmin()){Commandcommand=newCommand(){publicvoidexecute(){History.newItem(TokenHelper.TK_NEW+"/profile/",true);
else returnnull;
if (ProfileUtil.isAdmin()){deleteButton=newPushButton(BaseNLS.constants().button_delete());deleteButton.setStyleName(imogResources.imogStyle().imogButton());deleteButton.addStyleName("Dynatable-Button");deleteButton.setVisible(false);returndeleteButton;
if (ProfileUtil.isAdmin()){//Clickhandlerregistrations.add(deleteButton.addClickHandler(newClickHandler(){@OverridepublicvoidonClick(ClickEventevent){Set<ProfileProxy>selectedEntities=selectionModel.getSelectedSet();intcount=selectedEntities.size();
if (count>0){AdminRendererrenderer=AdminRenderer.get();StringBuffermsg=newStringBuffer();msg.append(BaseNLS.constants().confirmation_delete_several1()+""+AdminNLS.constants().profile_name()+""+BaseNLS.constants().confirmation_delete_several2()+":");inti=0;for(ProfileProxyentity:selectedEntities){
if (count==1||i==count-1)msg.append("'"+renderer.getDisplayValue(entity)+"'?");
else msg.append("'"+renderer.getDisplayValue(entity)+"',");i=i+1;
if (toDelete){Request<Void>deleteRequest=getProfileRequest().delete(selectedEntities);deleteRequest.fire(newReceiver<Void>(){@OverridepublicvoidonSuccess(Voidresponse){//Window.alert("TheselectedProfileentrieshavebeendeleted");requestFactory.getEventBus().fireEvent(newListProfileEvent());
if (selectedItems>0)deleteButton.setVisible(true);
else deleteButton.setVisible(false);
if (object!=null){
if (object.getName()==null)value="";
else value=object.getName();
if (quantiteRequiseBox.getValue()==null)quantiteRequiseCrit.setValue(null);
else quantiteRequiseCrit.setValue(String.valueOf(quantiteRequiseBox.getValue()));quantiteRequiseCrit.setValueDisplayName(String.valueOf(quantiteRequiseBox.getValue()));criteria.add(quantiteRequiseCrit);FilterCriteriaquantiteEnStockCrit=newFilterCriteria();quantiteEnStockCrit.setField("quantiteEnStock");quantiteEnStockCrit.setFieldDisplayName(NLS.constants().detailCommandeMedicament_field_quantiteEnStock());quantiteEnStockCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);
if (quantiteEnStockBox.getValue()==null)quantiteEnStockCrit.setValue(null);
else quantiteEnStockCrit.setValue(String.valueOf(quantiteEnStockBox.getValue()));quantiteEnStockCrit.setValueDisplayName(String.valueOf(quantiteEnStockBox.getValue()));criteria.add(quantiteEnStockCrit);FilterCriteriamedicament_designationCrit=newFilterCriteria();medicament_designationCrit.setField("medicament.designation");medicament_designationCrit.setFieldDisplayName(NLS.constants().medicament_field_designation());medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);medicament_designationCrit.setValue(medicament_designationBox.getValue());medicament_designationCrit.setValueDisplayName(medicament_designationBox.getValue());criteria.add(medicament_designationCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteRequiseFilterBox.setVisible(false);
if (!AccessManager.canReadDetailCommandeMedicamentDescription())quantiteEnStockFilterBox.setVisible(false);
if (!AccessManager.canReadMedicamentDescription())medicament_designationFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (parent!=null){editor=newHorsUsageEditor(factory,true);this.initField=initField;
else editor=newHorsUsageEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().horsUsage_create_title());createDriver();createNewHorsUsage();this.setContent(editor);
if (parent!=null){editor=newHorsUsageEditor(factory,true);this.initField=initField;
else editor=newHorsUsageEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchHorsUsage(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (lot!=null){
if (AccessManager.canEditHorsUsage())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("HorsUsageformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewHorsUsageEvent(current.getId(),closeEvent));
if (searchText==null)handler.listSortieLot();
else handler.listSortieLot(searchText);
if therelationfieldbuttonsshallbehiddenpublicExamenSerologieEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddenpatient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreatePatient()&&AccessManager.canEditPatient())patient=newImogSingleRelationBox<PatientProxy>(patientDataProvider,EpicamRenderer.get());
else patient=newImogSingleRelationBox<PatientProxy>(false,patientDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();patient.setEdited(isEdited);dateTest.setEdited(isEdited);nature.setEdited(isEdited);resultatVIH.setEdited(isEdited);resultatCD4.setEdited(isEdited);
if (!AccessManager.canReadExamenSerologieDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditExamenSerologieDescription())descriptionSection.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("0"))){resultatVIH.setVisible(true);
else {resultatVIH.setVisible(false);
if (allValidation||source.equals(nature)){
if ((nature.getValue()!=null&&nature.getValue().matches("1"))){resultatCD4.setVisible(true);
else {resultatCD4.setVisible(false);
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){patient.setLocked(isLocked);patient.setValue(value);
if (patient.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();PatientFormPanelform=newPatientFormPanel(requestFactory,patient.getValue().getId(),relationPopup,"patient");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("patient"))patient.setValue(value,true);
if (patient.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"patient");//dateTestisarequiredfield
if (dateTest.getValueWithoutParseException()==null&&dateTest.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"dateTest");//natureisarequiredfield
if (nature.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nature");
if (errors!=null&&errors.size()>0){List<EditorError>patientFieldErrors=newArrayList<EditorError>();List<EditorError>dateTestFieldErrors=newArrayList<EditorError>();List<EditorError>natureFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("patient"))patientFieldErrors.add(error);
if (field.equals("dateTest"))dateTestFieldErrors.add(error);
if (field.equals("nature"))natureFieldErrors.add(error);
if (patientFieldErrors.size()>0)patient.showErrors(patientFieldErrors);
if (dateTestFieldErrors.size()>0)dateTest.showErrors(dateTestFieldErrors);
if (natureFieldErrors.size()>0)nature.showErrors(natureFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicPersonnelDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPersonnel(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPersonnelReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPersonnel(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPersonnel(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedPersonnelReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listPersonnel(start,numRows,"modif ied",false,filterCriteria);
else result=request.getPersonnelEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPersonnel(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedPersonnelReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listPersonnel(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedPersonnel(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedPersonnelReverse(start,numRows,"modif ied",false,property);
else result=request.listPersonnel(start,numRows,"modif ied",false);
if (isFiltered){
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listPersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listPersonnel(start,numRows,property,asc,filterCriteria);
else result=request.getPersonnelEmptyList();
else {
if (searchCriterions!=null)result=request.listPersonnel(start,numRows,property,asc,searchCriterions);
else result=request.listPersonnel(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPersonnel(property,searchCriterions);
else returnrequest.countNonAffectedPersonnelReverse(property,searchCriterions);
else returnrequest.countPersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPersonnel(property,filterCriteria);
else returnrequest.countNonAffectedPersonnelReverse(property,filterCriteria);
else returnrequest.countPersonnel(filterCriteria);
else returnrequest.countNonAffectedPersonnel("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPersonnel(property,searchCriterions);
else returnrequest.countNonAffectedPersonnelReverse(property,searchCriterions);
else returnrequest.countPersonnel(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedPersonnel(property);
else returnrequest.countNonAffectedPersonnelReverse(property);
else returnrequest.countPersonnel();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();PersonnelRequestrequest=(PersonnelRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxynomCrit=request.create(BasicCriteriaProxy.class);nomCrit.setField("nom");nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);nomCrit.setValue(text);buffer.append("("+NLS.constants().personnel_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(nomCrit);//SearchfieldDateNaissancetry{DateUtil.parseDate(text);BasicCriteriaProxydateNaissanceCrit=request.create(BasicCriteriaProxy.class);dateNaissanceCrit.setField("dateNaissance");dateNaissanceCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);dateNaissanceCrit.setValue(text);buffer.append("("+NLS.constants().personnel_field_dateNaissance()+":"+text+")"+SYMBOL_OR+"");criterionList.add(dateNaissanceCrit);
if (text.toLowerCase().equals(NLS.constants().personnel_niveau_central_option().toLowerCase())){BasicCriteriaProxyniveauCrit=request.create(BasicCriteriaProxy.class);niveauCrit.setField("niveau");niveauCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);niveauCrit.setValue(EpicamEnumConstants.PERSONNEL_NIVEAU_CENTRAL);buffer.append("("+NLS.constants().personnel_field_niveau()+":"+text+")"+SYMBOL_OR+"");criterionList.add(niveauCrit);
if (text.toLowerCase().equals(NLS.constants().personnel_niveau_region_option().toLowerCase())){BasicCriteriaProxyniveauCrit=request.create(BasicCriteriaProxy.class);niveauCrit.setField("niveau");niveauCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);niveauCrit.setValue(EpicamEnumConstants.PERSONNEL_NIVEAU_REGION);buffer.append("("+NLS.constants().personnel_field_niveau()+":"+text+")"+SYMBOL_OR+"");criterionList.add(niveauCrit);
if (text.toLowerCase().equals(NLS.constants().personnel_niveau_districtSante_option().toLowerCase())){BasicCriteriaProxyniveauCrit=request.create(BasicCriteriaProxy.class);niveauCrit.setField("niveau");niveauCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);niveauCrit.setValue(EpicamEnumConstants.PERSONNEL_NIVEAU_DISTRICTSANTE);buffer.append("("+NLS.constants().personnel_field_niveau()+":"+text+")"+SYMBOL_OR+"");criterionList.add(niveauCrit);
if (text.toLowerCase().equals(NLS.constants().personnel_niveau_cDT_option().toLowerCase())){BasicCriteriaProxyniveauCrit=request.create(BasicCriteriaProxy.class);niveauCrit.setField("niveau");niveauCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);niveauCrit.setValue(EpicamEnumConstants.PERSONNEL_NIVEAU_CDT);buffer.append("("+NLS.constants().personnel_field_niveau()+":"+text+")"+SYMBOL_OR+"");criterionList.add(niveauCrit);
if (text.toLowerCase().equals("true")||text.toLowerCase().equals("false")){BasicCriteriaProxyactif Crit=request.create(BasicCriteriaProxy.class);actif Crit.setField("actif ");actif Crit.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);actif Crit.setValue(text);buffer.append("("+NLS.constants().personnel_field_actif ()+":"+text+")"+SYMBOL_OR+"");criterionList.add(actif Crit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (EpicamIconConstants.RAVITAILLEMENT_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.RAVITAILLEMENT_ICON);RavitaillementDataProviderprovider=newRavitaillementDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteRavitaillement()&&AccessManager.canEditRavitaillement())listComposite=newRavitaillementDynaTable(requestFactory,provider,true);
else listComposite=newRavitaillementDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if therelationfieldbuttonsshallbehiddenpublicDetailInventaireEditorNestedRow(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();initWidget(BINDER.createAndBindUi(this));clearImage.setTitle(BaseNLS.constants().button_remove());clearImage.setUrl(GWT.getModuleBaseURL()+"images/relation_remove.png");properties();
if (hideButtons)//inpopup,relationbuttonshiddenCDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateCentreDiagTrait()&&AccessManager.canEditCentreDiagTrait())CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(cDTDataProvider,EpicamRenderer.get());
else CDT=newImogSingleRelationBox<CentreDiagTraitProxy>(false,cDTDataProvider,EpicamRenderer.get());
if (hideButtons)//inpopup,relationbuttonshiddenlot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateLot()&&AccessManager.canEditLot())lot=newImogSingleRelationBox<LotProxy>(lotDataProvider,EpicamRenderer.get());
else lot=newImogSingleRelationBox<LotProxy>(false,lotDataProvider,EpicamRenderer.get());
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();CDT.setEdited(isEdited);lot.setEdited(isEdited);quantiteReelle.setEdited(isEdited);//readonlyfieldquantiteTheorique.setEdited(false);
if (!AccessManager.canReadDetailInventaireDescription())CDT.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())lot.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteReelle.setVisible(false);
if (!AccessManager.canReadDetailInventaireDescription())quantiteTheorique.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())CDT.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())lot.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())quantiteReelle.setVisible(false);
if (!AccessManager.canEditDetailInventaireDescription())quantiteTheorique.setVisible(false);
if (field.equals(CDT)){clearLotWidget();getLotFilteredByCDT(CDT.getValue());
if (field==lot){LotProxyvalue=(LotProxy)field.getValue();quantiteTheorique.setValue(value!=null?value.getQuantite():null);
if (pCDT!=null){
if (!hideButtons)lot.hideButtons(false);lotDataProvider.setFilterCriteria(pCDT.getId(),"CDT.id");
else {lot.hideButtons(true);lotDataProvider.setFilterCriteria(null);
if relationfieldshallbelocked(noneditable)publicvoidsetCDT(CentreDiagTraitProxyvalue,booleanisLocked){CDT.setLocked(isLocked);CDT.setValue(value);//FieldLotdependsonthevalueoffieldcDTclearLotWidget();getLotFilteredByCDT(value);
if relationfieldshallbelocked(noneditable)publicvoidsetLot(LotProxyvalue,booleanisLocked){lot.setLocked(isLocked);lot.setValue(value);
if (CDT.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();CentreDiagTraitFormPanelform=newCentreDiagTraitFormPanel(requestFactory,CDT.getValue().getId(),relationPopup,"CDT");relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("CDT"))CDT.setValue(value,true);
if (lot.getValue()!=null){RelationPopupPanelrelationPopup=newRelationPopupPanel();LotFormPanelform=newLotFormPanel(requestFactory,lot.getValue().getId(),relationPopup,"lot");relationPopup.addWidget(form);relationPopup.show();
if (commonFieldUtil.getRegion()!=null)form.setRegion(commonFieldUtil.getRegion(),true);
if (commonFieldUtil.getDistrict()!=null)form.setDistrictSante(commonFieldUtil.getDistrict(),true);
if (commonFieldUtil.getCdt()!=null)form.setCDT(commonFieldUtil.getCdt(),true);relationPopup.addWidget(form);relationPopup.show();
if (initField.equals("lot"))lot.setValue(value,true);
if (CDT.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"cDT");//lotisarequiredfield
if (lot.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"lot");//quantiteReelleisarequiredfield
if (quantiteReelle.getValueWithoutParseException()==null&&quantiteReelle.isValid())delegate.recordError(BaseNLS.messages().error_required(),null,"quantiteReelle");//quantiteReelleshallbesuperiororequalto'0'
if (quantiteReelle.getValueWithoutParseException()!=null&&!(quantiteReelle.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteReelle_min()),null,"quantiteReelle");//quantiteTheoriqueshallbesuperiororequalto'0'
if (quantiteTheorique.getValueWithoutParseException()!=null&&!(quantiteTheorique.getValueWithoutParseException()>=0))delegate.recordError(BaseNLS.messages().error_min_num(NLS.constants().detailInventaire_field_quantiteTheorique_min()),null,"quantiteTheorique");
if (errors!=null&&errors.size()>0){List<EditorError>cDTFieldErrors=newArrayList<EditorError>();List<EditorError>lotFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteReelleFieldErrors=newArrayList<EditorError>();List<EditorError>quantiteTheoriqueFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("cDT"))cDTFieldErrors.add(error);
if (field.equals("lot"))lotFieldErrors.add(error);
if (field.equals("quantiteReelle"))quantiteReelleFieldErrors.add(error);
if (field.equals("quantiteTheorique"))quantiteTheoriqueFieldErrors.add(error);
if (cDTFieldErrors.size()>0)CDT.showErrors(cDTFieldErrors);
if (lotFieldErrors.size()>0)lot.showErrors(lotFieldErrors);
if (quantiteReelleFieldErrors.size()>0)quantiteReelle.showErrors(quantiteReelleFieldErrors);
if (quantiteTheoriqueFieldErrors.size()>0)quantiteTheorique.showErrors(quantiteTheoriqueFieldErrors);
if (searchText==null)handler.listIntrant();
else handler.listIntrant(searchText);
if (dateBeforeBox.getValue()!=null){FilterCriteriadateBeforeCrit=newFilterCriteria();dateBeforeCrit.setField("date");dateBeforeCrit.setFieldDisplayName(NLS.constants().examenBiologique_field_date()+BaseNLS.constants().search_operator_inferior());dateBeforeCrit.setOperation(CriteriaConstants.DATE_OPERATOR_BEFORE);dateBeforeCrit.setValue(DateUtil.getDate(dateBeforeBox.getValue()));dateBeforeCrit.setValueDisplayName(DateUtil.getDate(dateBeforeBox.getValue()));criteria.add(dateBeforeCrit);
if (dateAfterBox.getValue()!=null){FilterCriteriadateAfterCrit=newFilterCriteria();dateAfterCrit.setField("date");dateAfterCrit.setFieldDisplayName(NLS.constants().examenBiologique_field_date()+BaseNLS.constants().search_operator_superior());dateAfterCrit.setOperation(CriteriaConstants.DATE_OPERATOR_AFTER);dateAfterCrit.setValue(DateUtil.getDate(dateAfterBox.getValue()));dateAfterCrit.setValueDisplayName(DateUtil.getDate(dateAfterBox.getValue()));criteria.add(dateAfterCrit);
if (poidsBox.getValue()==null)poidsCrit.setValue(null);
else poidsCrit.setValue(String.valueOf(poidsBox.getValue()));poidsCrit.setValueDisplayName(String.valueOf(poidsBox.getValue()));criteria.add(poidsCrit);FilterCriteriadeletedEntityCrit=newFilterCriteria();deletedEntityCrit.setField("deleted");deletedEntityCrit.setFieldDisplayName(BaseNLS.constants().entity_field_deleted());
if (deletedEntityBox.getValue()){deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNOTNULL);deletedEntityCrit.setValue("true");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_true());
else {deletedEntityCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);deletedEntityCrit.setValue("false");deletedEntityCrit.setValueDisplayName(BaseNLS.constants().boolean_false());
if (!AccessManager.canReadPatientIdentif ication())patient_identif iantFilterBox.setVisible(false);
if (!AccessManager.canReadPatientIdentif ication())patient_nomFilterBox.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription()){dateBeforeFilterBox.setVisible(false);dateAfterFilterBox.setVisible(false);
if (!AccessManager.canReadExamenBiologiqueDescription())poidsFilterBox.setVisible(false);
if (!AccessManager.isAdmin())deletedEntityBoxFilterBox.setVisible(false);
if (searchText==null)handler.listNotif ication();
else handler.listNotif ication(searchText);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(CandidatureFormationentity,booleanisNew){ImogActoractor=HttpSessionUtil.getCurrentUser();
if (entity!=null){handlerHelper.prepare(entity);
if (entity.getDeleted()!=null)entity.setDeleted(null);dao.saveOrUpdate(entity,isNew);
if itisanewentityaddedforthefirsttime.@Transactionalpublicvoidsave(ImogBeanentity,booleanisNew){handlerHelper.save(entity,isNew);
if (criterions!=null)junction.add(criterions);List<CandidatureFormation>beans=dao.load(i,j,sortProperty,sortOrder,junction);returnbeans;
if (criterions!=null){for(BasicCriteriacrit:criterions)junctionForCrit.add(crit);
if (criterions!=null)junction.add(criterions);List<CandidatureFormation>beans=dao.loadNonAffected(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);List<CandidatureFormation>beans=dao.loadNonAffectedReverse(i,j,sortProperty,sortOrder,property,junction);returnbeans;
if (criterions!=null)junction.add(criterions);returndao.count(junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffected(property,junction);
if (criterions!=null)junction.add(criterions);returndao.countNonAffectedReverse(property,junction);
if (entities!=null){for(CandidatureFormationentity:entities)delete(entity);
if (personnel_nom!=null&&!personnel_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("personnel.nom");criteria.setValue(personnel_nom);junction.add(criteria);
if (cDT_nom!=null&&!cDT_nom.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("cDT.nom");criteria.setValue(cDT_nom);junction.add(criteria);
if (approuveeRegion!=null&&!approuveeRegion.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("approuveeRegion");criteria.setValue(approuveeRegion);junction.add(criteria);
if (approuveeGTC!=null&&!approuveeGTC.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.BOOLEAN_OPERATOR_EQUAL);criteria.setField("approuveeGTC");criteria.setValue(approuveeGTC);junction.add(criteria);
if (districtSante_nom_francais!=null&&!districtSante_nom_francais.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.francais");criteria.setValue(districtSante_nom_francais);junction.add(criteria);
if (districtSante_nom_english!=null&&!districtSante_nom_english.isEmpty()){BasicCriteriacriteria=newBasicCriteria();criteria.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);criteria.setField("districtSante.nom.english");criteria.setValue(districtSante_nom_english);junction.add(criteria);
if (!ProfileUtil.isAdmin(actor))filterConjunction.add(handlerHelper.getNotDeletedFilterCriteria());returnfilterConjunction;
else returntrue;
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicHorsUsageDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedHorsUsage(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedHorsUsageReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listHorsUsage(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedHorsUsage(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedHorsUsageReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listHorsUsage(start,numRows,"modif ied",false,filterCriteria);
else result=request.getHorsUsageEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedHorsUsage(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedHorsUsageReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listHorsUsage(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedHorsUsage(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedHorsUsageReverse(start,numRows,"modif ied",false,property);
else result=request.listHorsUsage(start,numRows,"modif ied",false);
if (isFiltered){result.with("lot");result.with("lot.lot");
else {
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listHorsUsage(start,numRows,property,asc,searchCriterions);
else result=request.listHorsUsage(start,numRows,property,asc,filterCriteria);
else result=request.getHorsUsageEmptyList();
else {
if (searchCriterions!=null)result=request.listHorsUsage(start,numRows,property,asc,searchCriterions);
else result=request.listHorsUsage(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedHorsUsage(property,searchCriterions);
else returnrequest.countNonAffectedHorsUsageReverse(property,searchCriterions);
else returnrequest.countHorsUsage(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedHorsUsage(property,filterCriteria);
else returnrequest.countNonAffectedHorsUsageReverse(property,filterCriteria);
else returnrequest.countHorsUsage(filterCriteria);
else returnrequest.countNonAffectedHorsUsage("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedHorsUsage(property,searchCriterions);
else returnrequest.countNonAffectedHorsUsageReverse(property,searchCriterions);
else returnrequest.countHorsUsage(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedHorsUsage(property);
else returnrequest.countNonAffectedHorsUsageReverse(property);
else returnrequest.countHorsUsage();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();HorsUsageRequestrequest=(HorsUsageRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNumeroBasicCriteriaProxylot_lot_numeroCrit=request.create(BasicCriteriaProxy.class);lot_lot_numeroCrit.setField("lot.lot.numero");lot_lot_numeroCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_lot_numeroCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_numero()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_lot_numeroCrit);//SearchfieldIdentif iantBasicCriteriaProxylot_lot_intrant_identif iantCrit=request.create(BasicCriteriaProxy.class);lot_lot_intrant_identif iantCrit.setField("lot.lot.intrant.identif iant");lot_lot_intrant_identif iantCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_lot_intrant_identif iantCrit.setValue(text);buffer.append("("+NLS.constants().intrant_field_identif iant()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_lot_intrant_identif iantCrit);//SearchfieldDesignationBasicCriteriaProxylot_lot_medicament_designationCrit=request.create(BasicCriteriaProxy.class);lot_lot_medicament_designationCrit.setField("lot.lot.medicament.designation");lot_lot_medicament_designationCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);lot_lot_medicament_designationCrit.setValue(text);buffer.append("("+NLS.constants().medicament_field_designation()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_lot_medicament_designationCrit);//SearchfieldQuantitetry{Integer.valueOf(text);BasicCriteriaProxylot_lot_quantiteCrit=request.create(BasicCriteriaProxy.class);lot_lot_quantiteCrit.setField("lot.lot.quantite");lot_lot_quantiteCrit.setOperation(CriteriaConstants.INT_OPERATOR_EQUAL);lot_lot_quantiteCrit.setValue(text);buffer.append("("+NLS.constants().lot_field_quantite()+":"+text+")"+SYMBOL_OR+"");criterionList.add(lot_lot_quantiteCrit);
if (text.toLowerCase().equals(NLS.constants().horsUsage_type_perimee_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.HORSUSAGE_TYPE_PERIMEE);buffer.append("("+NLS.constants().horsUsage_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (text.toLowerCase().equals(NLS.constants().horsUsage_type_casse_option().toLowerCase())){BasicCriteriaProxytypeCrit=request.create(BasicCriteriaProxy.class);typeCrit.setField("type");typeCrit.setOperation(CriteriaConstants.STRING_OPERATOR_EQUAL);typeCrit.setValue(EpicamEnumConstants.HORSUSAGE_TYPE_CASSE);buffer.append("("+NLS.constants().horsUsage_field_type()+":"+text+")"+SYMBOL_OR+"");criterionList.add(typeCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (EpicamIconConstants.CANDIDATUREFORMATION_ICON!=null)wrapperPanel.setIcon(EpicamIconConstants.CANDIDATUREFORMATION_ICON);CandidatureFormationDataProviderprovider=newCandidatureFormationDataProvider(requestFactory);StringfilteringMessage=configureDataProvider(provider,searchText);
if (filteringMessage!=null)wrapperPanel.setMessageLabel(filteringMessage);
if (AccessManager.canDeleteCandidatureFormation()&&AccessManager.canEditCandidatureFormation())listComposite=newCandidatureFormationDynaTable(requestFactory,provider,true);
else listComposite=newCandidatureFormationDynaTable(requestFactory,provider,false);configureWrapperPanelForTable();initWidget(uiBinder.createAndBindUi(this));
if (searchText!=null){filteringMessage=provider.fullTextSearch(searchText);LocalSession.get().setSearchCriterions(provider.getSearchCriterions(),filteringMessage);
else {ImogJunctionProxysearchCriterions=LocalSession.get().getSearchCriterions();
if (searchCriterions!=null){provider.setSearchCriterions(searchCriterions);filteringMessage=LocalSession.get().getFilteringMessage();
if (deleteButton!=null)wrapperPanel.addHeaderWidget(deleteButton);//addgoHomebuttonwrapperPanel.addHeaderWidget(goHomeButton());
if (filterPanel!=null){filterButton=newPopupButton(BaseNLS.constants().button_filter());filterButton.addPopupPanelContent(filterPanel);wrapperPanel.addHeaderWidget(filterButton);
if (createCommand!=null||exportCommand!=null){plusButton=newPopupButton(BaseNLS.constants().button_plus());
if (createCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_create(),createCommand);plusButton.addPopupPanelContent(item);
if (exportCommand!=null){SimpleMenuItemitem=newSimpleMenuItem(requestFactory.getEventBus(),BaseNLS.constants().button_export(),exportCommand);plusButton.addPopupPanelContent(item);
if (AccessManager.canDirectAccessPatient()&&AccessManager.canReadPatient()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/patient/",true);
if (AccessManager.canDirectAccessCasTuberculose()&&AccessManager.canReadCasTuberculose()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/castuberculose/",true);
if (AccessManager.canDirectAccessTransfertReference()&&AccessManager.canReadTransfertReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/transfertreference/",true);
if (AccessManager.canDirectAccessRegime()&&AccessManager.canReadRegime()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/regime/",true);
if (AccessManager.canDirectAccessExamenATB()&&AccessManager.canReadExamenATB()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenatb/",true);
if (AccessManager.canDirectAccessExamenBiologique()&&AccessManager.canReadExamenBiologique()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenbiologique/",true);
if (AccessManager.canDirectAccessExamenMicroscopie()&&AccessManager.canReadExamenMicroscopie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenmicroscopie/",true);
if (AccessManager.canDirectAccessExamenSerologie()&&AccessManager.canReadExamenSerologie()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/examenserologie/",true);
if (AccessManager.canDirectAccessLot()&&AccessManager.canReadLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lot/",true);
if (AccessManager.canDirectAccessCommande()&&AccessManager.canReadCommande()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/commande/",true);
if (AccessManager.canDirectAccessReception()&&AccessManager.canReadReception()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/reception/",true);
if (AccessManager.canDirectAccessRavitaillement()&&AccessManager.canReadRavitaillement()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/ravitaillement/",true);
if (AccessManager.canDirectAccessInventaire()&&AccessManager.canReadInventaire()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/inventaire/",true);
if (AccessManager.canDirectAccessHorsUsage()&&AccessManager.canReadHorsUsage()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/horsusage/",true);
if (AccessManager.canDirectAccessEntreeLot()&&AccessManager.canReadEntreeLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/entreelot/",true);
if (AccessManager.canDirectAccessSortieLot()&&AccessManager.canReadSortieLot()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/sortielot/",true);
if (AccessManager.canDirectAccessSmsPredefini()&&AccessManager.canReadSmsPredefini()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/smspredefini/",true);
if (AccessManager.canDirectAccessOutBox()&&AccessManager.canReadOutBox()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/outbox/",true);
if (AccessManager.canDirectAccessFormation()&&AccessManager.canReadFormation()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/formation/",true);
if (AccessManager.canDirectAccessTutoriel()&&AccessManager.canReadTutoriel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/tutoriel/",true);
if (AccessManager.canDirectAccessRegion()&&AccessManager.canReadRegion()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/region/",true);
if (AccessManager.canDirectAccessDistrictSante()&&AccessManager.canReadDistrictSante()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/districtsante/",true);
if (AccessManager.canDirectAccessCentreDiagTrait()&&AccessManager.canReadCentreDiagTrait()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/centrediagtrait/",true);
if (AccessManager.canDirectAccessLaboratoireReference()&&AccessManager.canReadLaboratoireReference()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/laboratoirereference/",true);
if (AccessManager.canDirectAccessLieuDit()&&AccessManager.canReadLieuDit()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/lieudit/",true);
if (AccessManager.canDirectAccessMedicament()&&AccessManager.canReadMedicament()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/medicament/",true);
if (AccessManager.canDirectAccessIntrant()&&AccessManager.canReadIntrant()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/intrant/",true);
if (AccessManager.canDirectAccessPersonnel()&&AccessManager.canReadPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/personnel/",true);
if (AccessManager.canDirectAccessDepartPersonnel()&&AccessManager.canReadDepartPersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/departpersonnel/",true);
if (AccessManager.canDirectAccessArriveePersonnel()&&AccessManager.canReadArriveePersonnel()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/arriveepersonnel/",true);
if (AccessManager.canDirectAccessUtilisateur()&&AccessManager.canReadUtilisateur()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/utilisateur/",true);
if (AccessManager.canDirectAccessQualif ication()&&AccessManager.canReadQualif ication()){Commandcommand=newCommand(){publicvoidexecute(){LocalSession.get().setSearchCriterions(null,null);History.newItem(TokenHelper.TK_LIST+"/qualif ication/",true);
if (filterButton!=null){registrations.add(eventBus.addHandler(IsTableFilteredEvent.TYPE,newIsTableFilteredEvent.Handler(){@OverridepublicvoidnoticeFilteringChange(BooleanisFiltered,Stringmessage){
if (isFiltered){filterButton.setButtonActivatedStyle();wrapperPanel.setMessageLabel(message);
else {filterButton.removeButtonActivatedStyle();wrapperPanel.clearMessageLabel();
if (plusButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){plusButton.hidePopup();
if (listButton!=null){registrations.add(eventBus.addHandler(SelectMenuItemEvent.TYPE,newSelectMenuItemEvent.Handler(){@OverridepublicvoidselectMenuItem(SimpleMenuItemmenuItem){listButton.hidePopup();
if (goHomeButton!=null){registrations.add(goHomeButton.addClickHandler(newClickHandler(){publicvoidonClick(ClickEventevent){History.newItem(TokenHelper.TK_CLASSIC,true);
if (parent!=null){editor=newCasTuberculoseEditor(factory,true);this.initField=initField;
else editor=newCasTuberculoseEditor(factory);isNew=true;setEditable(true);setTitle(NLS.constants().casTuberculose_create_title());createDriver();createNewCasTuberculose();this.setContent(editor);
if (parent!=null){editor=newCasTuberculoseEditor(factory,true);this.initField=initField;
else editor=newCasTuberculoseEditor(factory);setModif iable(false);isNew=false;setEditable(false);createDriver();fetchCasTuberculose(entityId);this.setContent(editor);showGlassPanel=true;
if (showGlassPanel){EpicamEntryPoint.GP.showAndAdapt(this);
if (priseMedicamenteusePhaseInitiale!=null&&priseMedicamenteusePhaseInitiale.size()>0){for(PriseMedicamenteuseProxyitem:priseMedicamenteusePhaseInitiale){
if (priseMedicamenteusePhaseContinuation!=null&&priseMedicamenteusePhaseContinuation.size()>0){for(PriseMedicamenteuseProxyitem:priseMedicamenteusePhaseContinuation){
if (rendezVous!=null&&rendezVous.size()>0){for(RendezVousProxyitem:rendezVous){
if (AccessManager.canEditCasTuberculose())setModif iable(true);showGlassPanel=false;EpicamEntryPoint.GP.hide();
if (editorDriver==null){editorDriver=GWT.create(Driver.class);editorDriver.initialize(requestFactory,editor);
if (editorDriver.hasErrors()){//Window.alert("CasTuberculoseformnotvalidatedlocally");return;
if (errors!=null&&errors.size()>0){//convertConstraintViolationtogetlocalizedmessagesEpicamRendererrenderer=EpicamRenderer.get();Set<ConstraintViolation<?>>imogErrors=newHashSet<ConstraintViolation<?>>();for(ConstraintViolation<?>error:errors){ImogConstraintViolationviolation=newImogConstraintViolation();violation.setLeafBean((BaseProxy)error.getLeafBean());violation.setPropertyPath(error.getPropertyPath());violation.setRootBean((BaseProxy)error.getRootBean());violation.setMessage(renderer.getI18nErrorMessage(error.getMessage()));imogErrors.add(violation);
if (parent!=null)parent.hide();
else {
if (isNew)requestFactory.getEventBus().fireEvent(closeEvent);
else requestFactory.getEventBus().fireEvent(newViewCasTuberculoseEvent(current.getId(),closeEvent));
if relationfieldshallbelocked(noneditable)publicvoidsetPatient(PatientProxyvalue,booleanisLocked){editor.setPatient(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseInitiale(RegimeProxyvalue,booleanisLocked){editor.setRegimePhaseInitiale(value,isLocked);
if relationfieldshallbelocked(noneditable)publicvoidsetRegimePhaseContinuation(RegimeProxyvalue,booleanisLocked){editor.setRegimePhaseContinuation(value,isLocked);
if (initField==null)handler.saveUtilisateur(value);
else handler.saveUtilisateur(value,initField);
if therelationfieldbuttonsshallbehiddenpublicRegionEditor(EpicamRequestFactoryfactory,booleanhideButtons){this.requestFactory=factory;this.hideButtons=hideButtons;setRelationFields();nom=newImogLocalizedTextBox(locales,NLS.constants().locale());description=newImogLocalizedTextAreaBox(locales,NLS.constants().locale());initWidget(BINDER.createAndBindUi(this));properties();
if (hideButtons)//inpopup,relationbuttonshiddendistrictSantes=newImogMultiRelationBox<DistrictSanteProxy>(districtSantesDataProvider,EpicamRenderer.get(),true);
else {//inwrapperpanel,relationbuttonsenabled
if (AccessManager.canCreateDistrictSante()&&AccessManager.canEditDistrictSante())districtSantes=newImogMultiRelationBox<DistrictSanteProxy>(districtSantesDataProvider,EpicamRenderer.get(),null);
else districtSantes=newImogMultiRelationBox<DistrictSanteProxy>(false,districtSantesDataProvider,EpicamRenderer.get(),null);
if (isEdited)setFieldEditAccess();
else setFieldReadAccess();code.setEdited(isEdited);nom.setEdited(isEdited);description.setEdited(isEdited);districtSantes.setEdited(isEdited);libelle.setEdited(isEdited);complementAdresse.setEdited(isEdited);quartier.setEdited(isEdited);ville.setEdited(isEdited);codePostal.setEdited(isEdited);coordonnees.setEdited(isEdited);
if (!AccessManager.canReadRegionDescription())descriptionSection.setVisible(false);
if (!AccessManager.canReadRegionAdresse())adresseSection.setVisible(false);
if (!AccessManager.canEditRegionDescription())descriptionSection.setVisible(false);
if (!AccessManager.canEditRegionAdresse())adresseSection.setVisible(false);
if (!districtSantes.isEmpty()&&districtSantes.getSelectedEntities().size()>0){DistrictSanteProxyvalue=districtSantes.getSelectedEntities().get(0);RelationPopupPanelrelationPopup=newRelationPopupPanel();DistrictSanteFormPanelform=newDistrictSanteFormPanel(requestFactory,value.getId(),relationPopup,"districtSantes");relationPopup.addWidget(form);relationPopup.show();
if (!districtSantes.isPresent(value))districtSantes.addValue(value);
if (initField.equals("districtSantes")){
if (districtSantes.isPresent(value))districtSantes.replaceValue(value);
else districtSantes.addValue(value,true);
if (code.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"code");//nomisarequiredfield
if (nom.getValue()==null)delegate.recordError(BaseNLS.messages().error_required(),null,"nom");
if (errors!=null&&errors.size()>0){List<EditorError>codeFieldErrors=newArrayList<EditorError>();List<EditorError>nomFieldErrors=newArrayList<EditorError>();for(EditorErrorerror:errors){ObjectuserData=error.getUserData();
if (userData!=null&&userDatainstanceofString){Stringfield=(String)userData;
if (field.equals("code"))codeFieldErrors.add(error);
if (field.equals("nom"))nomFieldErrors.add(error);
if (codeFieldErrors.size()>0)code.showErrors(codeFieldErrors);
if (nomFieldErrors.size()>0)nom.showErrors(nomFieldErrors);
if thepropertyforwhichnonaffectedvaluesaresearchedshallbelookedinreverserelationpublicDetailReceptionIntrantDataProvider(EpicamRequestFactoryrequestFactory,StringpProperty,booleansearchInReverse){this.requestFactory=requestFactory;nonAffected=true;property=pProperty;this.searchInReverse=searchInReverse;setSearchCriterions(null);
if (criterions==null){
if (ProfileUtil.isAdmin()){filter(getDeletedEntityFilterCriteria(false));LocalSession.get().setSearchCriterions(getSearchCriterions(),null);
else searchCriterions=criterions;
else searchCriterions=criterions;
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailReceptionIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailReceptionIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionIntrant(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listNonAffectedDetailReceptionIntrantReverse(start,numRows,"modif ied",false,filterCriteria,property);
else result=request.listDetailReceptionIntrant(start,numRows,"modif ied",false,filterCriteria);
else result=request.getDetailReceptionIntrantEmptyList();
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionIntrant(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listNonAffectedDetailReceptionIntrantReverse(start,numRows,"modif ied",false,searchCriterions,property);
else result=request.listDetailReceptionIntrant(start,numRows,"modif ied",false,searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)result=request.listNonAffectedDetailReceptionIntrant(start,numRows,"modif ied",false,property);
else result=request.listNonAffectedDetailReceptionIntrantReverse(start,numRows,"modif ied",false,property);
else result=request.listDetailReceptionIntrant(start,numRows,"modif ied",false);
if (isFiltered){result.with("commande");result.with("commande.CDT");result.with("detailCommande");result.with("detailCommande.intrant");
else {result.with("detailCommande");result.with("detailCommande.intrant");
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null)result=request.listDetailReceptionIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listDetailReceptionIntrant(start,numRows,property,asc,filterCriteria);
else result=request.getDetailReceptionIntrantEmptyList();
else {
if (searchCriterions!=null)result=request.listDetailReceptionIntrant(start,numRows,property,asc,searchCriterions);
else result=request.listDetailReceptionIntrant(start,numRows,property,asc);
if (isFiltered){
if (filterCriteria!=null){
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionIntrant(property,searchCriterions);
else returnrequest.countNonAffectedDetailReceptionIntrantReverse(property,searchCriterions);
else returnrequest.countDetailReceptionIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionIntrant(property,filterCriteria);
else returnrequest.countNonAffectedDetailReceptionIntrantReverse(property,filterCriteria);
else returnrequest.countDetailReceptionIntrant(filterCriteria);
else returnrequest.countNonAffectedDetailReceptionIntrant("id");
else {
if (searchCriterions!=null){
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionIntrant(property,searchCriterions);
else returnrequest.countNonAffectedDetailReceptionIntrantReverse(property,searchCriterions);
else returnrequest.countDetailReceptionIntrant(searchCriterions);
else {
if (nonAffected){
if (!searchInReverse)returnrequest.countNonAffectedDetailReceptionIntrant(property);
else returnrequest.countNonAffectedDetailReceptionIntrantReverse(property);
else returnrequest.countDetailReceptionIntrant();
if (text==null||(text!=null&&text.equals(""))){setSearchCriterions(null);
else {Stringlocale=NLS.constants().locale();DetailReceptionIntrantRequestrequest=(DetailReceptionIntrantRequest)getContext();newRequest=false;ImogJunctionProxyjunction=request.create(ImogConjunctionProxy.class);List<ImogCriterionProxy>criterias=newArrayList<ImogCriterionProxy>();ImogJunctionProxydisJunction=request.create(ImogDisjunctionProxy.class);List<ImogCriterionProxy>criterionList=newArrayList<ImogCriterionProxy>();//SearchfieldNomBasicCriteriaProxycommande_cDT_nomCrit=request.create(BasicCriteriaProxy.class);commande_cDT_nomCrit.setField("commande.cDT.nom");commande_cDT_nomCrit.setOperation(CriteriaConstants.STRING_OPERATOR_CONTAINS);commande_cDT_nomCrit.setValue(text);buffer.append("("+NLS.constants().centreDiagTrait_field_nom()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_cDT_nomCrit);//SearchfieldDatetry{DateUtil.parseDate(text);BasicCriteriaProxycommande_dateCrit=request.create(BasicCriteriaProxy.class);commande_dateCrit.setField("commande.date");commande_dateCrit.setOperation(CriteriaConstants.DATE_OPERATOR_EQUAL);commande_dateCrit.setValue(text);buffer.append("("+NLS.constants().commande_field_date()+":"+text+")"+SYMBOL_OR+"");criterionList.add(commande_dateCrit);
if (ProfileUtil.isAdmin()){BasicCriteriaProxyisDeletedCrit=request.create(BasicCriteriaProxy.class);isDeletedCrit.setField("deleted");isDeletedCrit.setOperation(CriteriaConstants.OPERATOR_ISNULL);isDeletedCrit.setValue(text);criterias.add(isDeletedCrit);
if exists
if (isFiltered&&filterCriteria!=null)setSearchCriterions(mergeFilterCriteriaAndFullTextSearchCriterion(request,junction));
else setSearchCriterions(junction);
if (fullTextSearch){Stringmessage=buffer.toString();intlastSymbolIndex=message.lastIndexOf(SYMBOL_OR);returnmessage.substring(0,lastSymbolIndex);
else returnnull;
if (beaninstanceofProfile){profileHandler.delete((Profile)bean);
else 
if (beaninstanceofEntityProfile){entityProfileHandler.delete((EntityProfile)bean);
else 
if (beaninstanceofFieldGroupProfile){fieldGroupProfileHandler.delete((FieldGroupProfile)bean);
else 
if (beaninstanceofCardEntity){cardEntityHandler.delete((CardEntity)bean);
else 
if (beaninstanceofFieldGroup){fieldGroupHandler.delete((FieldGroup)bean);
if (beaninstanceofProfile){profileHandler.save((Profile)bean,isNew);
else 
if (beaninstanceofEntityProfile){entityProfileHandler.save((EntityProfile)bean,isNew);
else 
if (beaninstanceofFieldGroupProfile){fieldGroupProfileHandler.save((FieldGroupProfile)bean,isNew);
else 
if (beaninstanceofCardEntity){cardEntityHandler.save((CardEntity)bean,isNew);
else 
if (beaninstanceofFieldGroup){fieldGroupHandler.save((FieldGroup)bean,isNew);
else 
if (beaninstanceofBinary){genericHandler.save((Binary)bean);
if (bean.getCreatedBy()==null){bean.setCreatedBy(actor.getLogin());
if (bean.getCreated()==null){bean.setCreated(newDate(systemUtil.getCurrentTimeMillis()));
if (profiles!=null){for(Profileprofile:profiles){List<EntityProfile>entities=profile.getEntityProfiles();
if (entities!=null){for(EntityProfileentity:entities){logger.info("hasprofile:"+entity.getId());
if (fieldGroups!=null){for(FieldGroupProfilefieldGroup:fieldGroups){logger.info("hasprofile:"+fieldGroup.getId());
